

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Aug 16 02:32:35 2020

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 1.42
    15                           ; Generated 13/04/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4620 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     
    49                           	psect	smallconst
    50  001000                     __psmallconst:
    51                           	opt stack 0
    52  001000  00                 	db	0
    53  001001                     _Display7Seg:
    54                           	opt stack 0
    55  001001  3F                 	db	63
    56  001002  06                 	db	6
    57  001003  5B                 	db	91
    58  001004  4F                 	db	79
    59  001005  66                 	db	102
    60  001006  6D                 	db	109
    61  001007  7D                 	db	125
    62  001008  07                 	db	7
    63  001009  7F                 	db	127
    64  00100A  6F                 	db	111
    65  00100B                     __end_of_Display7Seg:
    66                           	opt stack 0
    67  00100B  00                 	db	0	; dummy byte at the end
    68  0000                     
    69                           	psect	nvCOMRAM
    70  000003                     __pnvCOMRAM:
    71                           	opt stack 0
    72  000003                     _i:
    73                           	opt stack 0
    74  000003                     	ds	1
    75  0000                     _LATBbits	set	3978
    76  0000                     _TRISD	set	3989
    77  0000                     _TRISC	set	3988
    78  0000                     _TRISB	set	3987
    79  0000                     _TRISA	set	3986
    80  0000                     _PORTD	set	3971
    81  0000                     _PORTC	set	3970
    82  0000                     _PORTB	set	3969
    83  0000                     _PORTA	set	3968
    84  0000                     _ADCON1	set	4033
    85  0000                     _OSCTUNEbits	set	3995
    86  0000                     _OSCCONbits	set	4051
    87  0000                     _LATD	set	3980
    88                           
    89                           ; #config settings
    90  0000                     
    91                           	psect	cinit
    92  0010C0                     __pcinit:
    93                           	opt stack 0
    94  0010C0                     start_initialization:
    95                           	opt stack 0
    96  0010C0                     __initialization:
    97                           	opt stack 0
    98  0010C0                     end_of_initialization:
    99                           	opt stack 0
   100  0010C0                     __end_of__initialization:
   101                           	opt stack 0
   102  0010C0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   103  0010C2  6EF8               	movwf	tblptru,c
   104  0010C4  0E10               	movlw	high __Lsmallconst
   105  0010C6  6EF7               	movwf	tblptrh,c
   106  0010C8  0100               	movlb	0
   107  0010CA  EF06  F008         	goto	_main	;jump to C main() function
   108                           tblptru	equ	0xFF8
   109                           tblptrh	equ	0xFF7
   110                           
   111                           	psect	cstackCOMRAM
   112  000001                     __pcstackCOMRAM:
   113                           	opt stack 0
   114  000001                     ??_main:
   115                           
   116                           ; 1 bytes @ 0x0
   117  000001                     	ds	2
   118                           tblptru	equ	0xFF8
   119                           tblptrh	equ	0xFF7
   120                           
   121 ;;
   122 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   123 ;;
   124 ;; *************** function _main *****************
   125 ;; Defined at:
   126 ;;		line 44 in file "main.c"
   127 ;; Parameters:    Size  Location     Type
   128 ;;		None
   129 ;; Auto vars:     Size  Location     Type
   130 ;;		None
   131 ;; Return value:  Size  Location     Type
   132 ;;                  1    wreg      void 
   133 ;; Registers used:
   134 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   135 ;; Tracked objects:
   136 ;;		On entry : 0/0
   137 ;;		On exit  : 0/0
   138 ;;		Unchanged: 0/0
   139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   143 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   144 ;;Total ram usage:        2 bytes
   145 ;; Hardware stack levels required when called:    1
   146 ;; This function calls:
   147 ;;		_MCU_Init
   148 ;; This function is called by:
   149 ;;		Startup code after reset
   150 ;; This function uses a non-reentrant model
   151 ;;
   152                           
   153                           	psect	text0
   154  00100C                     __ptext0:
   155                           	opt stack 0
   156  00100C                     _main:
   157                           	opt stack 30
   158                           
   159                           ;main.c: 45: MCU_Init();
   160                           
   161                           ;incstack = 0
   162  00100C  EC45  F008         	call	_MCU_Init	;wreg free
   163  001010                     l687:
   164                           
   165                           ;main.c: 47: for(i=0; i<=9; i++){
   166  001010  0E00               	movlw	0
   167  001012  6E03               	movwf	_i,c
   168  001014                     l689:
   169  001014  0E09               	movlw	9
   170  001016  6403               	cpfsgt	_i,c
   171  001018  D001               	goto	l693
   172  00101A  D019               	goto	l701
   173  00101C                     l693:
   174                           
   175                           ;main.c: 48: LATD = Display7Seg [i];
   176  00101C  5003               	movf	_i,w,c
   177  00101E  0D01               	mullw	1
   178  001020  0E01               	movlw	low _Display7Seg
   179  001022  24F3               	addwf	prodl,w,c
   180  001024  6EF6               	movwf	tblptrl,c
   181  001026  0E10               	movlw	high _Display7Seg
   182  001028  20F4               	addwfc	prodh,w,c
   183  00102A  6EF7               	movwf	tblptrh,c
   184  00102C                     	if	0	;There are less than 3 active tblptr bytes
   185  00102C                     	endif
   186  00102C  0008               	tblrd		*
   187  00102E  CFF5 FF8C          	movff	tablat,3980	;volatile
   188                           
   189                           ;main.c: 49: _delay((unsigned long)((700)*(16000000/4000.0)));
   190  001032  0E0F               	movlw	15
   191  001034  6E02               	movwf	(??_main+1)& (0+255),c
   192  001036  0E35               	movlw	53
   193  001038  6E01               	movwf	??_main& (0+255),c
   194  00103A  0E51               	movlw	81
   195  00103C                     u57:
   196  00103C  2EE8               	decfsz	wreg,f,c
   197  00103E  D7FE               	bra	u57
   198  001040  2E01               	decfsz	??_main& (0+255),f,c
   199  001042  D7FC               	bra	u57
   200  001044  2E02               	decfsz	(??_main+1)& (0+255),f,c
   201  001046  D7FA               	bra	u57
   202  001048  F000               	nop	
   203  00104A  2A03               	incf	_i,f,c
   204  00104C  D7E3               	goto	l689
   205  00104E                     l701:
   206                           
   207                           ;main.c: 50: }
   208                           ;main.c: 51: for(i=8; i>0; i--){
   209  00104E  0E08               	movlw	8
   210  001050  6E03               	movwf	_i,c
   211  001052  5003               	movf	_i,w,c
   212  001054  B4D8               	btfsc	status,2,c
   213  001056  D7DC               	goto	l687
   214                           
   215                           ;main.c: 52: LATD = Display7Seg [i];
   216  001058  5003               	movf	_i,w,c
   217  00105A  0D01               	mullw	1
   218  00105C  0E01               	movlw	low _Display7Seg
   219  00105E  24F3               	addwf	prodl,w,c
   220  001060  6EF6               	movwf	tblptrl,c
   221  001062  0E10               	movlw	high _Display7Seg
   222  001064  20F4               	addwfc	prodh,w,c
   223  001066  6EF7               	movwf	tblptrh,c
   224  001068                     	if	0	;There are less than 3 active tblptr bytes
   225  001068                     	endif
   226  001068  0008               	tblrd		*
   227  00106A  CFF5 FF8C          	movff	tablat,3980	;volatile
   228                           
   229                           ;main.c: 53: _delay((unsigned long)((700)*(16000000/4000.0)));
   230  00106E  0E0F               	movlw	15
   231  001070  6E02               	movwf	(??_main+1)& (0+255),c
   232  001072  0E35               	movlw	53
   233  001074  6E01               	movwf	??_main& (0+255),c
   234  001076  0E51               	movlw	81
   235  001078                     u67:
   236  001078  2EE8               	decfsz	wreg,f,c
   237  00107A  D7FE               	bra	u67
   238  00107C  2E01               	decfsz	??_main& (0+255),f,c
   239  00107E  D7FC               	bra	u67
   240  001080  2E02               	decfsz	(??_main+1)& (0+255),f,c
   241  001082  D7FA               	bra	u67
   242  001084  F000               	nop	
   243  001086  0603               	decf	_i,f,c
   244  001088  D7E4               	goto	L1
   245  00108A                     __end_of_main:
   246                           	opt stack 0
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           tblptrl	equ	0xFF6
   250                           tablat	equ	0xFF5
   251                           prodh	equ	0xFF4
   252                           prodl	equ	0xFF3
   253                           wreg	equ	0xFE8
   254                           status	equ	0xFD8
   255                           
   256 ;; *************** function _MCU_Init *****************
   257 ;; Defined at:
   258 ;;		line 58 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels used:    1
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		_main
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text1
   286  00108A                     __ptext1:
   287                           	opt stack 0
   288  00108A                     _MCU_Init:
   289                           	opt stack 30
   290                           
   291                           ;main.c: 60: OSCCONbits.IRCF=0b110;
   292                           
   293                           ;incstack = 0
   294  00108A  50D3               	movf	4051,w,c	;volatile
   295  00108C  0B8F               	andlw	-113
   296  00108E  0960               	iorlw	96
   297  001090  6ED3               	movwf	4051,c	;volatile
   298                           
   299                           ;main.c: 61: OSCTUNEbits.PLLEN = 1;
   300  001092  8C9B               	bsf	3995,6,c	;volatile
   301                           
   302                           ;main.c: 63: ADCON1=0xFF;
   303  001094  68C1               	setf	4033,c	;volatile
   304                           
   305                           ;main.c: 66: PORTA=0x00;
   306  001096  0E00               	movlw	0
   307  001098  6E80               	movwf	3968,c	;volatile
   308                           
   309                           ;main.c: 67: PORTB=0x00;
   310  00109A  0E00               	movlw	0
   311  00109C  6E81               	movwf	3969,c	;volatile
   312                           
   313                           ;main.c: 68: PORTC=0x00;
   314  00109E  0E00               	movlw	0
   315  0010A0  6E82               	movwf	3970,c	;volatile
   316                           
   317                           ;main.c: 69: PORTD=0x00;
   318  0010A2  0E00               	movlw	0
   319  0010A4  6E83               	movwf	3971,c	;volatile
   320                           
   321                           ;main.c: 72: TRISA=0x00;
   322  0010A6  0E00               	movlw	0
   323  0010A8  6E92               	movwf	3986,c	;volatile
   324                           
   325                           ;main.c: 73: TRISB=0x00;
   326  0010AA  0E00               	movlw	0
   327  0010AC  6E93               	movwf	3987,c	;volatile
   328                           
   329                           ;main.c: 74: TRISC=0x00;
   330  0010AE  0E00               	movlw	0
   331  0010B0  6E94               	movwf	3988,c	;volatile
   332                           
   333                           ;main.c: 75: TRISD=0x00;
   334  0010B2  0E00               	movlw	0
   335  0010B4  6E95               	movwf	3989,c	;volatile
   336                           
   337                           ;main.c: 78: LATBbits.LATB0 = 1;
   338  0010B6  808A               	bsf	3978,0,c	;volatile
   339                           
   340                           ;main.c: 79: LATBbits.LATB1 = 1;
   341  0010B8  828A               	bsf	3978,1,c	;volatile
   342                           
   343                           ;main.c: 80: LATBbits.LATB2 = 1;
   344  0010BA  848A               	bsf	3978,2,c	;volatile
   345                           
   346                           ;main.c: 81: LATBbits.LATB3 = 1;
   347  0010BC  868A               	bsf	3978,3,c	;volatile
   348  0010BE  0012               	return		;funcret
   349  0010C0                     __end_of_MCU_Init:
   350                           	opt stack 0
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           prodh	equ	0xFF4
   356                           prodl	equ	0xFF3
   357                           wreg	equ	0xFE8
   358                           status	equ	0xFD8
   359                           tblptru	equ	0xFF8
   360                           tblptrh	equ	0xFF7
   361                           tblptrl	equ	0xFF6
   362                           tablat	equ	0xFF5
   363                           prodh	equ	0xFF4
   364                           prodl	equ	0xFF3
   365                           wreg	equ	0xFE8
   366                           status	equ	0xFD8
   367                           
   368                           	psect	rparam
   369  0000                     tblptru	equ	0xFF8
   370                           tblptrh	equ	0xFF7
   371                           tblptrl	equ	0xFF6
   372                           tablat	equ	0xFF5
   373                           prodh	equ	0xFF4
   374                           prodl	equ	0xFF3
   375                           wreg	equ	0xFE8
   376                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2       3
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                           _MCU_Init
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCU_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      2       3       1        2.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       3       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       3      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Aug 16 02:32:35 2020

                      _i 0003                       u57 103C                       u67 1078  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l701 104E                      l693 101C  
                    l687 1010                      l689 1014             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      wreg 000FE8             __CFG_IESO$ON 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _LATD 000F8C  
           __CFG_PWRT$ON 000000            __CFG_FCMEN$ON 000000                     _main 100C  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000      __end_of_Display7Seg 100B  
                  ?_main 0001           __CFG_DEBUG$OFF 000000         __end_of_MCU_Init 10C0  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000           __CFG_BOREN$OFF 000000                    tablat 000FF5  
                  status 000FD8          __initialization 10C0             __end_of_main 108A  
                 ??_main 0001            __activetblptr 000001                   _ADCON1 000FC1  
            _Display7Seg 1001           __CFG_XINST$OFF 000000             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 10C0            ___rparam_used 000001  
              ?_MCU_Init 0001           __pcstackCOMRAM 0001               __pnvCOMRAM 0003  
             ??_MCU_Init 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 1000                  __pcinit 10C0                  __ramtop 1000  
                __ptext0 100C                  __ptext1 108A     end_of_initialization 10C0  
      __size_of_MCU_Init 0036      start_initialization 10C0         __CFG_OSC$INTIO67 000000  
            __smallconst 1000                 _LATBbits 000F8A                 _MCU_Init 108A  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 1000  
          __size_of_main 007E              _OSCTUNEbits 000F9B               _OSCCONbits 000FD3  
