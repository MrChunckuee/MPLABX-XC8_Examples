

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Aug 16 02:17:45 2020

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40  0000                     
    41                           ; Version 1.42
    42                           ; Generated 13/04/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4620 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     _TRISD	set	3989
    76  0000                     _TRISC	set	3988
    77  0000                     _TRISB	set	3987
    78  0000                     _TRISA	set	3986
    79  0000                     _PORTC	set	3970
    80  0000                     _PORTB	set	3969
    81  0000                     _PORTA	set	3968
    82  0000                     _ADCON1	set	4033
    83  0000                     _OSCTUNEbits	set	3995
    84  0000                     _OSCCONbits	set	4051
    85  0000                     _PORTD	set	3971
    86  0000                     _PORTDbits	set	3971
    87  0000                     _SSPBUF	set	4041
    88  0000                     _SSPCON1	set	4038
    89  0000                     _SSPSTAT	set	4039
    90  0000                     _SSPADD	set	4040
    91  0000                     _RCEN	set	32299
    92  0000                     _ACKSTAT	set	32302
    93  0000                     _ACKEN	set	32300
    94  0000                     _ACKDT	set	32301
    95  0000                     _PEN	set	32298
    96  0000                     _RSEN	set	32297
    97  0000                     _SSPIF	set	31987
    98  0000                     _SEN	set	32296
    99  0000                     _TRISC3	set	31907
   100  0000                     _TRISC4	set	31908
   101                           
   102                           	psect	smallconst
   103  001000                     __psmallconst:
   104                           	opt stack 0
   105  001000  00                 	db	0
   106  001001                     STR_1:
   107  001001  20                 	db	32
   108  001002  20                 	db	32
   109  001003  4D                 	db	77	;'M'
   110  001004  72                 	db	114	;'r'
   111  001005  43                 	db	67	;'C'
   112  001006  68                 	db	104	;'h'
   113  001007  75                 	db	117	;'u'
   114  001008  6E                 	db	110	;'n'
   115  001009  63                 	db	99	;'c'
   116  00100A  6B                 	db	107	;'k'
   117  00100B  75                 	db	117	;'u'
   118  00100C  65                 	db	101	;'e'
   119  00100D  65                 	db	101	;'e'
   120  00100E  21                 	db	33
   121  00100F  20                 	db	32
   122  001010  20                 	db	32
   123  001011  00                 	db	0
   124  001012                     STR_2:
   125  001012  52                 	db	82	;'R'
   126  001013  54                 	db	84	;'T'
   127  001014  43                 	db	67	;'C'
   128  001015  3A                 	db	58	;':'
   129  001016  20                 	db	32
   130  001017  44                 	db	68	;'D'
   131  001018  53                 	db	83	;'S'
   132  001019  31                 	db	49	;'1'
   133  00101A  33                 	db	51	;'3'
   134  00101B  30                 	db	48	;'0'
   135  00101C  37                 	db	55	;'7'
   136  00101D  20                 	db	32
   137  00101E  64                 	db	100	;'d'
   138  00101F  65                 	db	101	;'e'
   139  001020  6D                 	db	109	;'m'
   140  001021  6F                 	db	111	;'o'
   141  001022  00                 	db	0
   142  001023                     STR_18:
   143  001023  3F                 	db	63	;'?'
   144  001024  3F                 	db	63	;'?'
   145  001025  3F                 	db	63	;'?'
   146  001026  00                 	db	0
   147  001027                     STR_13:
   148  001027  57                 	db	87	;'W'
   149  001028  45                 	db	69	;'E'
   150  001029  44                 	db	68	;'D'
   151  00102A  00                 	db	0
   152  00102B                     STR_12:
   153  00102B  54                 	db	84	;'T'
   154  00102C  55                 	db	85	;'U'
   155  00102D  45                 	db	69	;'E'
   156  00102E  00                 	db	0
   157  00102F                     STR_15:
   158  00102F  46                 	db	70	;'F'
   159  001030  52                 	db	82	;'R'
   160  001031  49                 	db	73	;'I'
   161  001032  00                 	db	0
   162  001033                     STR_11:
   163  001033  4D                 	db	77	;'M'
   164  001034  4F                 	db	79	;'O'
   165  001035  4E                 	db	78	;'N'
   166  001036  00                 	db	0
   167  001037                     STR_17:
   168  001037  53                 	db	83	;'S'
   169  001038  55                 	db	85	;'U'
   170  001039  4E                 	db	78	;'N'
   171  00103A  00                 	db	0
   172  00103B                     STR_16:
   173  00103B  53                 	db	83	;'S'
   174  00103C  41                 	db	65	;'A'
   175  00103D  54                 	db	84	;'T'
   176  00103E  00                 	db	0
   177  00103F                     STR_14:
   178  00103F  54                 	db	84	;'T'
   179  001040  48                 	db	72	;'H'
   180  001041  55                 	db	85	;'U'
   181  001042  00                 	db	0
   182  001043                     STR_6:
   183  001043  41                 	db	65	;'A'
   184  001044  4D                 	db	77	;'M'
   185  001045  00                 	db	0
   186  001046                     STR_7:
   187  001046  50                 	db	80	;'P'
   188  001047  4D                 	db	77	;'M'
   189  001048  00                 	db	0
   190  001049                     STR_8:
   191  001049  2F                 	db	47
   192  00104A  00                 	db	0
   193  00104B                     STR_3:
   194  00104B  3A                 	db	58	;':'
   195  00104C  00                 	db	0
   196  0000                     
   197                           ; #config settings
   198  00104D  00                 	db	0	; dummy byte at the end
   199  0000                     
   200                           	psect	cinit
   201  001D02                     __pcinit:
   202                           	opt stack 0
   203  001D02                     start_initialization:
   204                           	opt stack 0
   205  001D02                     __initialization:
   206                           	opt stack 0
   207                           
   208                           ; Clear objects allocated to COMRAM (5 bytes)
   209  001D02  6A19               	clrf	(__pbssCOMRAM+4)& (0+255),c
   210  001D04  6A18               	clrf	(__pbssCOMRAM+3)& (0+255),c
   211  001D06  6A17               	clrf	(__pbssCOMRAM+2)& (0+255),c
   212  001D08  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
   213  001D0A  6A15               	clrf	__pbssCOMRAM& (0+255),c
   214  001D0C                     end_of_initialization:
   215                           	opt stack 0
   216  001D0C                     __end_of__initialization:
   217                           	opt stack 0
   218  001D0C  0100               	movlb	0
   219  001D0E  EFBD  F00C         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222  000015                     __pbssCOMRAM:
   223                           	opt stack 0
   224  000015                     _Temp:
   225                           	opt stack 0
   226  000015                     	ds	1
   227  000016                     _pRTCArray:
   228                           	opt stack 0
   229  000016                     	ds	4
   230                           
   231                           	psect	cstackCOMRAM
   232  000001                     __pcstackCOMRAM:
   233                           	opt stack 0
   234  000001                     ??_LCD_WriteNibble:
   235  000001                     ??_LCD_WriteCommand:
   236  000001                     ??_LCD_WriteData:
   237  000001                     ?___awdiv:
   238                           	opt stack 0
   239  000001                     ?___awmod:
   240                           	opt stack 0
   241  000001                     I2C_Write_Byte@Byte:
   242                           	opt stack 0
   243  000001                     ___awdiv@dividend:
   244                           	opt stack 0
   245  000001                     ___awmod@dividend:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x0
   249  000001                     	ds	1
   250  000002                     LCD_WriteNibble@LCD_COMMAND:
   251                           	opt stack 0
   252  000002                     LCD_WriteCommand@LCD_PORT_DATA:
   253                           	opt stack 0
   254  000002                     LCD_WriteData@LCD_DATA:
   255                           	opt stack 0
   256  000002                     Write_Bytes_To_DS1307_RTC@pData:
   257                           	opt stack 0
   258  000002                     Read_Bytes_From_DS1307_RTC@pData:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x1
   262  000002                     	ds	1
   263  000003                     LCD_WriteNibble@LCD_PORT_DATA:
   264                           	opt stack 0
   265  000003                     LCD_WriteCommand@LCD_COMMAND:
   266                           	opt stack 0
   267  000003                     LCD_WriteData@LCD_PORT_DATA:
   268                           	opt stack 0
   269  000003                     ___awdiv@divisor:
   270                           	opt stack 0
   271  000003                     ___awmod@divisor:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x2
   275  000003                     	ds	1
   276  000004                     ??_LCD_Init:
   277  000004                     Write_Bytes_To_DS1307_RTC@NoOfBytes:
   278                           	opt stack 0
   279  000004                     LCD_GotoXY@LCD_Y:
   280                           	opt stack 0
   281  000004                     Read_Bytes_From_DS1307_RTC@NoOfBytes:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x3
   285  000004                     	ds	1
   286  000005                     ??_Write_Bytes_To_DS1307_RTC:
   287  000005                     LCD_GotoXY@LCD_X:
   288                           	opt stack 0
   289  000005                     ___awdiv@counter:
   290                           	opt stack 0
   291  000005                     ___awmod@counter:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x4
   295  000005                     	ds	1
   296  000006                     Read_Bytes_From_DS1307_RTC@Address:
   297                           	opt stack 0
   298  000006                     ___awdiv@sign:
   299                           	opt stack 0
   300  000006                     ___awmod@sign:
   301                           	opt stack 0
   302  000006                     LCD_Putrs@LCD_STRING:
   303                           	opt stack 0
   304                           
   305                           ; 3 bytes @ 0x5
   306  000006                     	ds	1
   307  000007                     Write_Bytes_To_DS1307_RTC@Address:
   308                           	opt stack 0
   309  000007                     Read_Bytes_From_DS1307_RTC@i:
   310                           	opt stack 0
   311  000007                     ___awdiv@quotient:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x6
   315  000007                     	ds	1
   316  000008                     Write_Bytes_To_DS1307_RTC@i:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x7
   320  000008                     	ds	1
   321  000009                     ?_Get_DS1307_RTC_Time:
   322                           	opt stack 0
   323  000009                     ?_Get_DS1307_RTC_Date:
   324                           	opt stack 0
   325  000009                     LCD_Putc_xy@LCD_X:
   326                           	opt stack 0
   327  000009                     LCD_Putrs@LCD_X:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x8
   331  000009                     	ds	1
   332  00000A                     Set_DS1307_RTC_Time@Hours:
   333                           	opt stack 0
   334  00000A                     Set_DS1307_RTC_Date@Month:
   335                           	opt stack 0
   336  00000A                     LCD_Putc_xy@LCD_Y:
   337                           	opt stack 0
   338  00000A                     LCD_Putrs@LCD_Y:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x9
   342  00000A                     	ds	1
   343  00000B                     ??_Get_DS1307_RTC_Time:
   344  00000B                     ??_Get_DS1307_RTC_Date:
   345  00000B                     ??_LCD_Putrs:
   346  00000B                     Set_DS1307_RTC_Time@Mins:
   347                           	opt stack 0
   348  00000B                     Set_DS1307_RTC_Date@Year:
   349                           	opt stack 0
   350  00000B                     LCD_Putc_xy@LCD_DATA:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0xA
   354  00000B                     	ds	1
   355  00000C                     Set_DS1307_RTC_Time@Secs:
   356                           	opt stack 0
   357  00000C                     Set_DS1307_RTC_Date@Day:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0xB
   361  00000C                     	ds	1
   362  00000D                     ??_Set_DS1307_RTC_Time:
   363  00000D                     ??_Set_DS1307_RTC_Date:
   364                           
   365                           ; 1 bytes @ 0xC
   366  00000D                     	ds	1
   367  00000E                     LCD_Putrs@LCD_WIDE_COUNT:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0xD
   371  00000E                     	ds	1
   372  00000F                     Set_DS1307_RTC_Time@Mode:
   373                           	opt stack 0
   374  00000F                     Set_DS1307_RTC_Date@Date:
   375                           	opt stack 0
   376  00000F                     LCD_Putrs@LCD_INDEX:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0xE
   380  00000F                     	ds	1
   381  000010                     ??_MCU_HelloMessage:
   382  000010                     DisplayTimeToLCD@pTimeArray:
   383                           	opt stack 0
   384  000010                     DisplayDateOnLCD@pDateArray:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0xF
   388  000010                     	ds	2
   389  000012                     ??_DisplayTimeToLCD:
   390  000012                     ??_DisplayDateOnLCD:
   391                           
   392                           ; 1 bytes @ 0x11
   393  000012                     	ds	1
   394  000013                     ??_main:
   395                           
   396                           ; 1 bytes @ 0x12
   397  000013                     	ds	2
   398                           
   399 ;;
   400 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   401 ;;
   402 ;; *************** function _main *****************
   403 ;; Defined at:
   404 ;;		line 34 in file "main.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;Total ram usage:        2 bytes
   423 ;; Hardware stack levels required when called:    5
   424 ;; This function calls:
   425 ;;		_DisplayDateOnLCD
   426 ;;		_DisplayTimeToLCD
   427 ;;		_Get_DS1307_RTC_Date
   428 ;;		_Get_DS1307_RTC_Time
   429 ;;		_InitI2C
   430 ;;		_LCD_Init
   431 ;;		_MCU_HelloMessage
   432 ;;		_MCU_Init
   433 ;;		_Set_DS1307_RTC_Date
   434 ;;		_Set_DS1307_RTC_Time
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text0
   441  00197A                     __ptext0:
   442                           	opt stack 0
   443  00197A                     _main:
   444                           	opt stack 26
   445                           
   446                           ;main.c: 35: MCU_Init();
   447                           
   448                           ;incstack = 0
   449  00197A  EC4B  F00E         	call	_MCU_Init	;wreg free
   450                           
   451                           ;main.c: 36: LCD_Init();
   452  00197E  EC5A  F00B         	call	_LCD_Init	;wreg free
   453                           
   454                           ;main.c: 37: InitI2C();
   455  001982  EC78  F00E         	call	_InitI2C	;wreg free
   456                           
   457                           ;main.c: 39: Set_DS1307_RTC_Time(1, 11, 59, 55);
   458  001986  0E0B               	movlw	11
   459  001988  6E0A               	movwf	Set_DS1307_RTC_Time@Hours,c
   460  00198A  0E3B               	movlw	59
   461  00198C  6E0B               	movwf	Set_DS1307_RTC_Time@Mins,c
   462  00198E  0E37               	movlw	55
   463  001990  6E0C               	movwf	Set_DS1307_RTC_Time@Secs,c
   464  001992  0E01               	movlw	1
   465  001994  ECF4  F00A         	call	_Set_DS1307_RTC_Time
   466                           
   467                           ;main.c: 41: Set_DS1307_RTC_Date(25, 07, 17, 2);
   468  001998  0E07               	movlw	7
   469  00199A  6E0A               	movwf	Set_DS1307_RTC_Date@Month,c
   470  00199C  0E11               	movlw	17
   471  00199E  6E0B               	movwf	Set_DS1307_RTC_Date@Year,c
   472  0019A0  0E02               	movlw	2
   473  0019A2  6E0C               	movwf	Set_DS1307_RTC_Date@Day,c
   474  0019A4  0E19               	movlw	25
   475  0019A6  EC81  F00A         	call	_Set_DS1307_RTC_Date
   476                           
   477                           ;main.c: 43: MCU_HelloMessage();
   478  0019AA  EC5F  F00D         	call	_MCU_HelloMessage	;wreg free
   479  0019AE                     l1840:
   480                           
   481                           ;main.c: 47: DisplayTimeToLCD(Get_DS1307_RTC_Time());
   482  0019AE  ECB5  F00B         	call	_Get_DS1307_RTC_Time	;wreg free
   483  0019B2  C009  F010         	movff	?_Get_DS1307_RTC_Time,DisplayTimeToLCD@pTimeArray
   484  0019B6  C00A  F011         	movff	?_Get_DS1307_RTC_Time+1,DisplayTimeToLCD@pTimeArray+1
   485  0019BA  EC86  F009         	call	_DisplayTimeToLCD	;wreg free
   486                           
   487                           ;main.c: 49: DisplayDateOnLCD(Get_DS1307_RTC_Date());
   488  0019BE  EC2B  F00D         	call	_Get_DS1307_RTC_Date	;wreg free
   489  0019C2  C009  F010         	movff	?_Get_DS1307_RTC_Date,DisplayDateOnLCD@pDateArray
   490  0019C6  C00A  F011         	movff	?_Get_DS1307_RTC_Date+1,DisplayDateOnLCD@pDateArray+1
   491  0019CA  EC27  F008         	call	_DisplayDateOnLCD	;wreg free
   492                           
   493                           ;main.c: 50: _delay((unsigned long)((1000)*(16000000/4000.0)));
   494  0019CE  0E15               	movlw	21
   495  0019D0  6E14               	movwf	(??_main+1)& (0+255),c
   496  0019D2  0E4B               	movlw	75
   497  0019D4  6E13               	movwf	??_main& (0+255),c
   498  0019D6  0EBE               	movlw	190
   499  0019D8                     u667:
   500  0019D8  2EE8               	decfsz	wreg,f,c
   501  0019DA  D7FE               	bra	u667
   502  0019DC  2E13               	decfsz	??_main& (0+255),f,c
   503  0019DE  D7FC               	bra	u667
   504  0019E0  2E14               	decfsz	(??_main+1)& (0+255),f,c
   505  0019E2  D7FA               	bra	u667
   506  0019E4  D000               	nop2	
   507  0019E6  D7E3               	goto	l1840
   508  0019E8                     __end_of_main:
   509                           	opt stack 0
   510                           wreg	equ	0xFE8
   511                           
   512 ;; *************** function _Set_DS1307_RTC_Time *****************
   513 ;; Defined at:
   514 ;;		line 117 in file "ds1307.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;  Mode            1    wreg     unsigned char 
   517 ;;  Hours           1    9[COMRAM] unsigned char 
   518 ;;  Mins            1   10[COMRAM] unsigned char 
   519 ;;  Secs            1   11[COMRAM] unsigned char 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  Mode            1   14[COMRAM] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   531 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;Total ram usage:        6 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; Hardware stack levels required when called:    2
   538 ;; This function calls:
   539 ;;		_Write_Bytes_To_DS1307_RTC
   540 ;;		___awdiv
   541 ;;		___awmod
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text1
   548  0015E8                     __ptext1:
   549                           	opt stack 0
   550  0015E8                     _Set_DS1307_RTC_Time:
   551                           	opt stack 28
   552                           
   553                           ;incstack = 0
   554                           ;Set_DS1307_RTC_Time@Mode stored from wreg
   555  0015E8  6E0F               	movwf	Set_DS1307_RTC_Time@Mode,c
   556                           
   557                           ;ds1307.c: 120: pRTCArray[0] = (((unsigned char)(Secs/10))<<4)|((unsigned char)(Secs%10)
      +                          );
   558  0015EA  C00C  F001         	movff	Set_DS1307_RTC_Time@Secs,___awmod@dividend
   559  0015EE  6A02               	clrf	___awmod@dividend+1,c
   560  0015F0  0E00               	movlw	0
   561  0015F2  6E04               	movwf	___awmod@divisor+1,c
   562  0015F4  0E0A               	movlw	10
   563  0015F6  6E03               	movwf	___awmod@divisor,c
   564  0015F8  EC85  F00C         	call	___awmod	;wreg free
   565  0015FC  C001  F00D         	movff	?___awmod,??_Set_DS1307_RTC_Time
   566  001600  C002  F00E         	movff	?___awmod+1,??_Set_DS1307_RTC_Time+1
   567  001604  C00C  F001         	movff	Set_DS1307_RTC_Time@Secs,___awdiv@dividend
   568  001608  6A02               	clrf	___awdiv@dividend+1,c
   569  00160A  0E00               	movlw	0
   570  00160C  6E04               	movwf	___awdiv@divisor+1,c
   571  00160E  0E0A               	movlw	10
   572  001610  6E03               	movwf	___awdiv@divisor,c
   573  001612  EC02  F00C         	call	___awdiv	;wreg free
   574  001616  3801               	swapf	?___awdiv,w,c
   575  001618  0BF0               	andlw	240
   576  00161A  100D               	iorwf	??_Set_DS1307_RTC_Time,w,c
   577  00161C  6E16               	movwf	_pRTCArray,c
   578                           
   579                           ;ds1307.c: 121: pRTCArray[1] = (((unsigned char)(Mins/10))<<4)|((unsigned char)(Mins%10)
      +                          );
   580  00161E  C00B  F001         	movff	Set_DS1307_RTC_Time@Mins,___awmod@dividend
   581  001622  6A02               	clrf	___awmod@dividend+1,c
   582  001624  0E00               	movlw	0
   583  001626  6E04               	movwf	___awmod@divisor+1,c
   584  001628  0E0A               	movlw	10
   585  00162A  6E03               	movwf	___awmod@divisor,c
   586  00162C  EC85  F00C         	call	___awmod	;wreg free
   587  001630  C001  F00D         	movff	?___awmod,??_Set_DS1307_RTC_Time
   588  001634  C002  F00E         	movff	?___awmod+1,??_Set_DS1307_RTC_Time+1
   589  001638  C00B  F001         	movff	Set_DS1307_RTC_Time@Mins,___awdiv@dividend
   590  00163C  6A02               	clrf	___awdiv@dividend+1,c
   591  00163E  0E00               	movlw	0
   592  001640  6E04               	movwf	___awdiv@divisor+1,c
   593  001642  0E0A               	movlw	10
   594  001644  6E03               	movwf	___awdiv@divisor,c
   595  001646  EC02  F00C         	call	___awdiv	;wreg free
   596  00164A  3801               	swapf	?___awdiv,w,c
   597  00164C  0BF0               	andlw	240
   598  00164E  100D               	iorwf	??_Set_DS1307_RTC_Time,w,c
   599  001650  6E17               	movwf	_pRTCArray+1,c
   600                           
   601                           ;ds1307.c: 122: pRTCArray[2] = (((unsigned char)(Hours/10))<<4)|((unsigned char)(Hours%1
      +                          0));
   602  001652  C00A  F001         	movff	Set_DS1307_RTC_Time@Hours,___awmod@dividend
   603  001656  6A02               	clrf	___awmod@dividend+1,c
   604  001658  0E00               	movlw	0
   605  00165A  6E04               	movwf	___awmod@divisor+1,c
   606  00165C  0E0A               	movlw	10
   607  00165E  6E03               	movwf	___awmod@divisor,c
   608  001660  EC85  F00C         	call	___awmod	;wreg free
   609  001664  C001  F00D         	movff	?___awmod,??_Set_DS1307_RTC_Time
   610  001668  C002  F00E         	movff	?___awmod+1,??_Set_DS1307_RTC_Time+1
   611  00166C  C00A  F001         	movff	Set_DS1307_RTC_Time@Hours,___awdiv@dividend
   612  001670  6A02               	clrf	___awdiv@dividend+1,c
   613  001672  0E00               	movlw	0
   614  001674  6E04               	movwf	___awdiv@divisor+1,c
   615  001676  0E0A               	movlw	10
   616  001678  6E03               	movwf	___awdiv@divisor,c
   617  00167A  EC02  F00C         	call	___awdiv	;wreg free
   618  00167E  3801               	swapf	?___awdiv,w,c
   619  001680  0BF0               	andlw	240
   620  001682  100D               	iorwf	??_Set_DS1307_RTC_Time,w,c
   621  001684  6E18               	movwf	_pRTCArray+2,c
   622                           
   623                           ;ds1307.c: 124: switch(Mode)
   624  001686  D005               	goto	l1668
   625  001688                     l1662:
   626  001688  8C18               	bsf	_pRTCArray+2,6,c
   627  00168A  D00A               	goto	l1670
   628  00168C                     l1664:
   629  00168C  0E60               	movlw	96
   630  00168E  1218               	iorwf	_pRTCArray+2,f,c
   631                           
   632                           ;ds1307.c: 130: }
   633                           
   634                           ;ds1307.c: 129: default: break;
   635  001690  D007               	goto	l1670
   636  001692                     l1668:
   637  001692  500F               	movf	Set_DS1307_RTC_Time@Mode,w,c
   638                           
   639                           ; Switch size 1, requested type "space"
   640                           ; Number of cases is 2, Range of values is 0 to 1
   641                           ; switch strategies available:
   642                           ; Name         Instructions Cycles
   643                           ; simple_byte            7     4 (average)
   644                           ;	Chosen strategy is simple_byte
   645  001694  0A00               	xorlw	0	; case 0
   646  001696  B4D8               	btfsc	status,2,c
   647  001698  D7F7               	goto	l1662
   648  00169A  0A01               	xorlw	1	; case 1
   649  00169C  B4D8               	btfsc	status,2,c
   650  00169E  D7F6               	goto	l1664
   651  0016A0                     l1670:
   652                           
   653                           ;ds1307.c: 133: Write_Bytes_To_DS1307_RTC(0x00, pRTCArray, 3);
   654  0016A0  0E16               	movlw	low _pRTCArray
   655  0016A2  6E02               	movwf	Write_Bytes_To_DS1307_RTC@pData,c
   656  0016A4  0E00               	movlw	high _pRTCArray
   657  0016A6  6E03               	movwf	Write_Bytes_To_DS1307_RTC@pData+1,c
   658  0016A8  0E03               	movlw	3
   659  0016AA  6E04               	movwf	Write_Bytes_To_DS1307_RTC@NoOfBytes,c
   660  0016AC  0E00               	movlw	0
   661  0016AE  ECC0  F00D         	call	_Write_Bytes_To_DS1307_RTC
   662  0016B2  0012               	return		;funcret
   663  0016B4                     __end_of_Set_DS1307_RTC_Time:
   664                           	opt stack 0
   665                           wreg	equ	0xFE8
   666                           status	equ	0xFD8
   667                           
   668 ;; *************** function _Set_DS1307_RTC_Date *****************
   669 ;; Defined at:
   670 ;;		line 189 in file "ds1307.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  Date            1    wreg     unsigned char 
   673 ;;  Month           1    9[COMRAM] unsigned char 
   674 ;;  Year            1   10[COMRAM] unsigned char 
   675 ;;  Day             1   11[COMRAM] unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  Date            1   14[COMRAM] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   687 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;Total ram usage:        6 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    2
   694 ;; This function calls:
   695 ;;		_Write_Bytes_To_DS1307_RTC
   696 ;;		___awdiv
   697 ;;		___awmod
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text2
   704  001502                     __ptext2:
   705                           	opt stack 0
   706  001502                     _Set_DS1307_RTC_Date:
   707                           	opt stack 28
   708                           
   709                           ;incstack = 0
   710                           ;Set_DS1307_RTC_Date@Date stored from wreg
   711  001502  6E0F               	movwf	Set_DS1307_RTC_Date@Date,c
   712                           
   713                           ;ds1307.c: 192: pRTCArray[0] = (((unsigned char)(Day/10))<<4)|((unsigned char)(Day%10));
   714  001504  C00C  F001         	movff	Set_DS1307_RTC_Date@Day,___awmod@dividend
   715  001508  6A02               	clrf	___awmod@dividend+1,c
   716  00150A  0E00               	movlw	0
   717  00150C  6E04               	movwf	___awmod@divisor+1,c
   718  00150E  0E0A               	movlw	10
   719  001510  6E03               	movwf	___awmod@divisor,c
   720  001512  EC85  F00C         	call	___awmod	;wreg free
   721  001516  C001  F00D         	movff	?___awmod,??_Set_DS1307_RTC_Date
   722  00151A  C002  F00E         	movff	?___awmod+1,??_Set_DS1307_RTC_Date+1
   723  00151E  C00C  F001         	movff	Set_DS1307_RTC_Date@Day,___awdiv@dividend
   724  001522  6A02               	clrf	___awdiv@dividend+1,c
   725  001524  0E00               	movlw	0
   726  001526  6E04               	movwf	___awdiv@divisor+1,c
   727  001528  0E0A               	movlw	10
   728  00152A  6E03               	movwf	___awdiv@divisor,c
   729  00152C  EC02  F00C         	call	___awdiv	;wreg free
   730  001530  3801               	swapf	?___awdiv,w,c
   731  001532  0BF0               	andlw	240
   732  001534  100D               	iorwf	??_Set_DS1307_RTC_Date,w,c
   733  001536  6E16               	movwf	_pRTCArray,c
   734                           
   735                           ;ds1307.c: 193: pRTCArray[1] = (((unsigned char)(Date/10))<<4)|((unsigned char)(Date%10)
      +                          );
   736  001538  C00F  F001         	movff	Set_DS1307_RTC_Date@Date,___awmod@dividend
   737  00153C  6A02               	clrf	___awmod@dividend+1,c
   738  00153E  0E00               	movlw	0
   739  001540  6E04               	movwf	___awmod@divisor+1,c
   740  001542  0E0A               	movlw	10
   741  001544  6E03               	movwf	___awmod@divisor,c
   742  001546  EC85  F00C         	call	___awmod	;wreg free
   743  00154A  C001  F00D         	movff	?___awmod,??_Set_DS1307_RTC_Date
   744  00154E  C002  F00E         	movff	?___awmod+1,??_Set_DS1307_RTC_Date+1
   745  001552  C00F  F001         	movff	Set_DS1307_RTC_Date@Date,___awdiv@dividend
   746  001556  6A02               	clrf	___awdiv@dividend+1,c
   747  001558  0E00               	movlw	0
   748  00155A  6E04               	movwf	___awdiv@divisor+1,c
   749  00155C  0E0A               	movlw	10
   750  00155E  6E03               	movwf	___awdiv@divisor,c
   751  001560  EC02  F00C         	call	___awdiv	;wreg free
   752  001564  3801               	swapf	?___awdiv,w,c
   753  001566  0BF0               	andlw	240
   754  001568  100D               	iorwf	??_Set_DS1307_RTC_Date,w,c
   755  00156A  6E17               	movwf	_pRTCArray+1,c
   756                           
   757                           ;ds1307.c: 194: pRTCArray[2] = (((unsigned char)(Month/10))<<4)|((unsigned char)(Month%1
      +                          0));
   758  00156C  C00A  F001         	movff	Set_DS1307_RTC_Date@Month,___awmod@dividend
   759  001570  6A02               	clrf	___awmod@dividend+1,c
   760  001572  0E00               	movlw	0
   761  001574  6E04               	movwf	___awmod@divisor+1,c
   762  001576  0E0A               	movlw	10
   763  001578  6E03               	movwf	___awmod@divisor,c
   764  00157A  EC85  F00C         	call	___awmod	;wreg free
   765  00157E  C001  F00D         	movff	?___awmod,??_Set_DS1307_RTC_Date
   766  001582  C002  F00E         	movff	?___awmod+1,??_Set_DS1307_RTC_Date+1
   767  001586  C00A  F001         	movff	Set_DS1307_RTC_Date@Month,___awdiv@dividend
   768  00158A  6A02               	clrf	___awdiv@dividend+1,c
   769  00158C  0E00               	movlw	0
   770  00158E  6E04               	movwf	___awdiv@divisor+1,c
   771  001590  0E0A               	movlw	10
   772  001592  6E03               	movwf	___awdiv@divisor,c
   773  001594  EC02  F00C         	call	___awdiv	;wreg free
   774  001598  3801               	swapf	?___awdiv,w,c
   775  00159A  0BF0               	andlw	240
   776  00159C  100D               	iorwf	??_Set_DS1307_RTC_Date,w,c
   777  00159E  6E18               	movwf	_pRTCArray+2,c
   778                           
   779                           ;ds1307.c: 195: pRTCArray[3] = (((unsigned char)(Year/10))<<4)|((unsigned char)(Year%10)
      +                          );
   780  0015A0  C00B  F001         	movff	Set_DS1307_RTC_Date@Year,___awmod@dividend
   781  0015A4  6A02               	clrf	___awmod@dividend+1,c
   782  0015A6  0E00               	movlw	0
   783  0015A8  6E04               	movwf	___awmod@divisor+1,c
   784  0015AA  0E0A               	movlw	10
   785  0015AC  6E03               	movwf	___awmod@divisor,c
   786  0015AE  EC85  F00C         	call	___awmod	;wreg free
   787  0015B2  C001  F00D         	movff	?___awmod,??_Set_DS1307_RTC_Date
   788  0015B6  C002  F00E         	movff	?___awmod+1,??_Set_DS1307_RTC_Date+1
   789  0015BA  C00B  F001         	movff	Set_DS1307_RTC_Date@Year,___awdiv@dividend
   790  0015BE  6A02               	clrf	___awdiv@dividend+1,c
   791  0015C0  0E00               	movlw	0
   792  0015C2  6E04               	movwf	___awdiv@divisor+1,c
   793  0015C4  0E0A               	movlw	10
   794  0015C6  6E03               	movwf	___awdiv@divisor,c
   795  0015C8  EC02  F00C         	call	___awdiv	;wreg free
   796  0015CC  3801               	swapf	?___awdiv,w,c
   797  0015CE  0BF0               	andlw	240
   798  0015D0  100D               	iorwf	??_Set_DS1307_RTC_Date,w,c
   799  0015D2  6E19               	movwf	_pRTCArray+3,c
   800                           
   801                           ;ds1307.c: 198: Write_Bytes_To_DS1307_RTC(0x03, pRTCArray, 4);
   802  0015D4  0E16               	movlw	low _pRTCArray
   803  0015D6  6E02               	movwf	Write_Bytes_To_DS1307_RTC@pData,c
   804  0015D8  0E00               	movlw	high _pRTCArray
   805  0015DA  6E03               	movwf	Write_Bytes_To_DS1307_RTC@pData+1,c
   806  0015DC  0E04               	movlw	4
   807  0015DE  6E04               	movwf	Write_Bytes_To_DS1307_RTC@NoOfBytes,c
   808  0015E0  0E03               	movlw	3
   809  0015E2  ECC0  F00D         	call	_Write_Bytes_To_DS1307_RTC
   810  0015E6  0012               	return		;funcret
   811  0015E8                     __end_of_Set_DS1307_RTC_Date:
   812                           	opt stack 0
   813                           wreg	equ	0xFE8
   814                           status	equ	0xFD8
   815                           
   816 ;; *************** function _Write_Bytes_To_DS1307_RTC *****************
   817 ;; Defined at:
   818 ;;		line 57 in file "ds1307.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  Address         1    wreg     unsigned char 
   821 ;;  pData           2    1[COMRAM] PTR unsigned char 
   822 ;;		 -> pRTCArray(4), 
   823 ;;  NoOfBytes       1    3[COMRAM] unsigned char 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  Address         1    6[COMRAM] unsigned char 
   826 ;;  i               2    7[COMRAM] unsigned int 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   836 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;Total ram usage:        8 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    1
   843 ;; This function calls:
   844 ;;		_I2C_Start
   845 ;;		_I2C_Stop
   846 ;;		_I2C_Write_Byte
   847 ;; This function is called by:
   848 ;;		_Set_DS1307_RTC_Time
   849 ;;		_Set_DS1307_RTC_Date
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text3
   854  001B80                     __ptext3:
   855                           	opt stack 0
   856  001B80                     _Write_Bytes_To_DS1307_RTC:
   857                           	opt stack 28
   858                           
   859                           ;incstack = 0
   860                           ;Write_Bytes_To_DS1307_RTC@Address stored from wreg
   861  001B80  6E07               	movwf	Write_Bytes_To_DS1307_RTC@Address,c
   862                           
   863                           ;ds1307.c: 59: unsigned int i;
   864                           ;ds1307.c: 61: I2C_Start();
   865  001B82  ECA7  F00E         	call	_I2C_Start	;wreg free
   866                           
   867                           ;ds1307.c: 64: while(I2C_Write_Byte(0xD0 + 0) == 1)
   868  001B86  D002               	goto	l1520
   869  001B88                     l1518:
   870                           
   871                           ;ds1307.c: 65: { I2C_Start(); }
   872  001B88  ECA7  F00E         	call	_I2C_Start	;wreg free
   873  001B8C                     l1520:
   874  001B8C  0ED0               	movlw	208
   875  001B8E  EC62  F00E         	call	_I2C_Write_Byte
   876  001B92  B0D8               	btfsc	status,0,c
   877  001B94  D7F9               	goto	l1518
   878                           
   879                           ;ds1307.c: 67: I2C_Write_Byte(Address);
   880  001B96  5007               	movf	Write_Bytes_To_DS1307_RTC@Address,w,c
   881  001B98  EC62  F00E         	call	_I2C_Write_Byte
   882                           
   883                           ;ds1307.c: 69: for(i=0;i<NoOfBytes;i++)
   884  001B9C  0E00               	movlw	0
   885  001B9E  6E09               	movwf	Write_Bytes_To_DS1307_RTC@i+1,c
   886  001BA0  0E00               	movlw	0
   887  001BA2  6E08               	movwf	Write_Bytes_To_DS1307_RTC@i,c
   888  001BA4  D00B               	goto	l1530
   889  001BA6                     l1526:
   890                           
   891                           ;ds1307.c: 70: I2C_Write_Byte(pData[i]);
   892  001BA6  5008               	movf	Write_Bytes_To_DS1307_RTC@i,w,c
   893  001BA8  2402               	addwf	Write_Bytes_To_DS1307_RTC@pData,w,c
   894  001BAA  6ED9               	movwf	fsr2l,c
   895  001BAC  5009               	movf	Write_Bytes_To_DS1307_RTC@i+1,w,c
   896  001BAE  2003               	addwfc	Write_Bytes_To_DS1307_RTC@pData+1,w,c
   897  001BB0  6EDA               	movwf	fsr2h,c
   898  001BB2  50DF               	movf	indf2,w,c
   899  001BB4  EC62  F00E         	call	_I2C_Write_Byte
   900  001BB8  4A08               	infsnz	Write_Bytes_To_DS1307_RTC@i,f,c
   901  001BBA  2A09               	incf	Write_Bytes_To_DS1307_RTC@i+1,f,c
   902  001BBC                     l1530:
   903  001BBC  5004               	movf	Write_Bytes_To_DS1307_RTC@NoOfBytes,w,c
   904  001BBE  6E05               	movwf	??_Write_Bytes_To_DS1307_RTC& (0+255),c
   905  001BC0  6A06               	clrf	(??_Write_Bytes_To_DS1307_RTC+1)& (0+255),c
   906  001BC2  5005               	movf	??_Write_Bytes_To_DS1307_RTC,w,c
   907  001BC4  5C08               	subwf	Write_Bytes_To_DS1307_RTC@i,w,c
   908  001BC6  5006               	movf	??_Write_Bytes_To_DS1307_RTC+1,w,c
   909  001BC8  5809               	subwfb	Write_Bytes_To_DS1307_RTC@i+1,w,c
   910  001BCA  A0D8               	btfss	status,0,c
   911  001BCC  D7EC               	goto	l1526
   912                           
   913                           ;ds1307.c: 72: I2C_Stop();
   914  001BCE  ECA2  F00E         	call	_I2C_Stop	;wreg free
   915  001BD2  0012               	return		;funcret
   916  001BD4                     __end_of_Write_Bytes_To_DS1307_RTC:
   917                           	opt stack 0
   918                           wreg	equ	0xFE8
   919                           indf2	equ	0xFDF
   920                           fsr2h	equ	0xFDA
   921                           fsr2l	equ	0xFD9
   922                           status	equ	0xFD8
   923                           
   924 ;; *************** function _MCU_Init *****************
   925 ;; Defined at:
   926 ;;		line 54 in file "main.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;Total ram usage:        0 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text4
   954  001C96                     __ptext4:
   955                           	opt stack 0
   956  001C96                     _MCU_Init:
   957                           	opt stack 30
   958                           
   959                           ;main.c: 56: OSCCONbits.IRCF=0b110;
   960                           
   961                           ;incstack = 0
   962  001C96  50D3               	movf	4051,w,c	;volatile
   963  001C98  0B8F               	andlw	-113
   964  001C9A  0960               	iorlw	96
   965  001C9C  6ED3               	movwf	4051,c	;volatile
   966                           
   967                           ;main.c: 57: OSCTUNEbits.PLLEN = 1;
   968  001C9E  8C9B               	bsf	3995,6,c	;volatile
   969                           
   970                           ;main.c: 59: ADCON1=0xFF;
   971  001CA0  68C1               	setf	4033,c	;volatile
   972                           
   973                           ;main.c: 61: PORTA=0x00;
   974  001CA2  0E00               	movlw	0
   975  001CA4  6E80               	movwf	3968,c	;volatile
   976                           
   977                           ;main.c: 62: PORTB=0x00;
   978  001CA6  0E00               	movlw	0
   979  001CA8  6E81               	movwf	3969,c	;volatile
   980                           
   981                           ;main.c: 63: PORTC=0x00;
   982  001CAA  0E00               	movlw	0
   983  001CAC  6E82               	movwf	3970,c	;volatile
   984                           
   985                           ;main.c: 64: PORTD=0x00;
   986  001CAE  0E00               	movlw	0
   987  001CB0  6E83               	movwf	3971,c	;volatile
   988                           
   989                           ;main.c: 66: TRISA=0x00;
   990  001CB2  0E00               	movlw	0
   991  001CB4  6E92               	movwf	3986,c	;volatile
   992                           
   993                           ;main.c: 67: TRISB=0x00;
   994  001CB6  0E00               	movlw	0
   995  001CB8  6E93               	movwf	3987,c	;volatile
   996                           
   997                           ;main.c: 68: TRISC=0x00;
   998  001CBA  0E00               	movlw	0
   999  001CBC  6E94               	movwf	3988,c	;volatile
  1000                           
  1001                           ;main.c: 69: TRISD=0x00;
  1002  001CBE  0E00               	movlw	0
  1003  001CC0  6E95               	movwf	3989,c	;volatile
  1004  001CC2  0012               	return		;funcret
  1005  001CC4                     __end_of_MCU_Init:
  1006                           	opt stack 0
  1007                           wreg	equ	0xFE8
  1008                           indf2	equ	0xFDF
  1009                           fsr2h	equ	0xFDA
  1010                           fsr2l	equ	0xFD9
  1011                           status	equ	0xFD8
  1012                           
  1013 ;; *************** function _MCU_HelloMessage *****************
  1014 ;; Defined at:
  1015 ;;		line 72 in file "main.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;Total ram usage:        2 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    4
  1036 ;; This function calls:
  1037 ;;		_LCD_Putrs
  1038 ;;		_LCD_WriteCommand
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text5
  1045  001ABE                     __ptext5:
  1046                           	opt stack 0
  1047  001ABE                     _MCU_HelloMessage:
  1048                           	opt stack 26
  1049                           
  1050                           ;main.c: 73: LCD_WriteCommand(1);
  1051                           
  1052                           ;incstack = 0
  1053  001ABE  0E01               	movlw	1
  1054  001AC0  EC90  F00D         	call	_LCD_WriteCommand
  1055                           
  1056                           ;main.c: 74: LCD_Putrs("  MrChunckuee!  ",0,0);
  1057  001AC4  0E01               	movlw	low STR_1
  1058  001AC6  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  1059  001AC8  0E10               	movlw	high STR_1
  1060  001ACA  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  1061  001ACC  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  1062  001ACE  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  1063  001AD0  A4D8               	btfss	status,2,c
  1064  001AD2  0E00               	movlw	low (__mediumconst shr (0+16))
  1065  001AD4  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  1066  001AD6  0E00               	movlw	0
  1067  001AD8  6E09               	movwf	LCD_Putrs@LCD_X,c
  1068  001ADA  0E00               	movlw	0
  1069  001ADC  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  1070  001ADE  EC44  F00C         	call	_LCD_Putrs	;wreg free
  1071                           
  1072                           ;main.c: 75: LCD_Putrs("RTC: DS1307 demo",0,1);
  1073  001AE2  0E12               	movlw	low STR_2
  1074  001AE4  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  1075  001AE6  0E10               	movlw	high STR_2
  1076  001AE8  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  1077  001AEA  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  1078  001AEC  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  1079  001AEE  A4D8               	btfss	status,2,c
  1080  001AF0  0E00               	movlw	low (__mediumconst shr (0+16))
  1081  001AF2  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  1082  001AF4  0E00               	movlw	0
  1083  001AF6  6E09               	movwf	LCD_Putrs@LCD_X,c
  1084  001AF8  0E01               	movlw	1
  1085  001AFA  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  1086  001AFC  EC44  F00C         	call	_LCD_Putrs	;wreg free
  1087                           
  1088                           ;main.c: 76: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1089  001B00  0E29               	movlw	41
  1090  001B02  6E11               	movwf	(??_MCU_HelloMessage+1)& (0+255),c
  1091  001B04  0E96               	movlw	150
  1092  001B06  6E10               	movwf	??_MCU_HelloMessage& (0+255),c
  1093  001B08  0E7F               	movlw	127
  1094  001B0A                     u677:
  1095  001B0A  2EE8               	decfsz	wreg,f,c
  1096  001B0C  D7FE               	bra	u677
  1097  001B0E  2E10               	decfsz	??_MCU_HelloMessage& (0+255),f,c
  1098  001B10  D7FC               	bra	u677
  1099  001B12  2E11               	decfsz	(??_MCU_HelloMessage+1)& (0+255),f,c
  1100  001B14  D7FA               	bra	u677
  1101  001B16  F000               	nop	
  1102                           
  1103                           ;main.c: 77: LCD_WriteCommand(1);
  1104  001B18  0E01               	movlw	1
  1105  001B1A  EC90  F00D         	call	_LCD_WriteCommand
  1106  001B1E  0012               	return		;funcret
  1107  001B20                     __end_of_MCU_HelloMessage:
  1108                           	opt stack 0
  1109                           wreg	equ	0xFE8
  1110                           indf2	equ	0xFDF
  1111                           fsr2h	equ	0xFDA
  1112                           fsr2l	equ	0xFD9
  1113                           status	equ	0xFD8
  1114                           
  1115 ;; *************** function _LCD_Init *****************
  1116 ;; Defined at:
  1117 ;;		line 17 in file "lcd.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;Total ram usage:        1 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    2
  1138 ;; This function calls:
  1139 ;;		_LCD_WriteCommand
  1140 ;;		_LCD_WriteData
  1141 ;;		_LCD_WriteNibble
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text6
  1148  0016B4                     __ptext6:
  1149                           	opt stack 0
  1150  0016B4                     _LCD_Init:
  1151                           	opt stack 28
  1152                           
  1153                           ;lcd.c: 19: _delay((unsigned long)((20)*(16000000/4000.0)));
  1154                           
  1155                           ;incstack = 0
  1156  0016B4  0E68               	movlw	104
  1157  0016B6  6E04               	movwf	??_LCD_Init& (0+255),c
  1158  0016B8  0EE4               	movlw	228
  1159  0016BA                     u687:
  1160  0016BA  2EE8               	decfsz	wreg,f,c
  1161  0016BC  D7FE               	bra	u687
  1162  0016BE  2E04               	decfsz	??_LCD_Init& (0+255),f,c
  1163  0016C0  D7FC               	bra	u687
  1164  0016C2  D000               	nop2	
  1165                           
  1166                           ;lcd.c: 20: LCD_WriteNibble(0x03);
  1167  0016C4  0E03               	movlw	3
  1168  0016C6  EC2F  F00E         	call	_LCD_WriteNibble
  1169                           
  1170                           ;lcd.c: 21: _delay((unsigned long)((5)*(16000000/4000.0)));
  1171  0016CA  0E1A               	movlw	26
  1172  0016CC  6E04               	movwf	??_LCD_Init& (0+255),c
  1173  0016CE  0EF8               	movlw	248
  1174  0016D0                     u697:
  1175  0016D0  2EE8               	decfsz	wreg,f,c
  1176  0016D2  D7FE               	bra	u697
  1177  0016D4  2E04               	decfsz	??_LCD_Init& (0+255),f,c
  1178  0016D6  D7FC               	bra	u697
  1179  0016D8  D000               	nop2	
  1180                           
  1181                           ;lcd.c: 22: LCD_WriteNibble(0x03);
  1182  0016DA  0E03               	movlw	3
  1183  0016DC  EC2F  F00E         	call	_LCD_WriteNibble
  1184                           
  1185                           ;lcd.c: 23: LCD_WriteNibble(0x03);
  1186  0016E0  0E03               	movlw	3
  1187  0016E2  EC2F  F00E         	call	_LCD_WriteNibble
  1188                           
  1189                           ;lcd.c: 25: LCD_WriteNibble(0x02);
  1190  0016E6  0E02               	movlw	2
  1191  0016E8  EC2F  F00E         	call	_LCD_WriteNibble
  1192                           
  1193                           ;lcd.c: 26: LCD_WriteCommand(0x20);
  1194  0016EC  0E20               	movlw	32
  1195  0016EE  EC90  F00D         	call	_LCD_WriteCommand
  1196                           
  1197                           ;lcd.c: 28: LCD_WriteCommand(0x28);
  1198  0016F2  0E28               	movlw	40
  1199  0016F4  EC90  F00D         	call	_LCD_WriteCommand
  1200                           
  1201                           ;lcd.c: 29: LCD_WriteCommand(0x14);
  1202  0016F8  0E14               	movlw	20
  1203  0016FA  EC90  F00D         	call	_LCD_WriteCommand
  1204                           
  1205                           ;lcd.c: 30: LCD_WriteCommand(0x0F);
  1206  0016FE  0E0F               	movlw	15
  1207  001700  EC90  F00D         	call	_LCD_WriteCommand
  1208                           
  1209                           ;lcd.c: 31: LCD_WriteCommand(0x01);
  1210  001704  0E01               	movlw	1
  1211  001706  EC90  F00D         	call	_LCD_WriteCommand
  1212                           
  1213                           ;lcd.c: 33: LCD_WriteCommand(0x06);
  1214  00170A  0E06               	movlw	6
  1215  00170C  EC90  F00D         	call	_LCD_WriteCommand
  1216                           
  1217                           ;lcd.c: 34: LCD_WriteCommand(12);
  1218  001710  0E0C               	movlw	12
  1219  001712  EC90  F00D         	call	_LCD_WriteCommand
  1220                           
  1221                           ;lcd.c: 35: _delay((unsigned long)((20)*(16000000/4000.0)));
  1222  001716  0E68               	movlw	104
  1223  001718  6E04               	movwf	??_LCD_Init& (0+255),c
  1224  00171A  0EE4               	movlw	228
  1225  00171C                     u707:
  1226  00171C  2EE8               	decfsz	wreg,f,c
  1227  00171E  D7FE               	bra	u707
  1228  001720  2E04               	decfsz	??_LCD_Init& (0+255),f,c
  1229  001722  D7FC               	bra	u707
  1230  001724  D000               	nop2	
  1231                           
  1232                           ;lcd.c: 36: LCD_WriteCommand(12);
  1233  001726  0E0C               	movlw	12
  1234  001728  EC90  F00D         	call	_LCD_WriteCommand
  1235                           
  1236                           ;lcd.c: 38: LCD_WriteCommand(0x40);
  1237  00172C  0E40               	movlw	64
  1238  00172E  EC90  F00D         	call	_LCD_WriteCommand
  1239                           
  1240                           ;lcd.c: 39: LCD_WriteData(0x08);
  1241  001732  0E08               	movlw	8
  1242  001734  EC0E  F00E         	call	_LCD_WriteData
  1243                           
  1244                           ;lcd.c: 40: LCD_WriteData(0x0C);
  1245  001738  0E0C               	movlw	12
  1246  00173A  EC0E  F00E         	call	_LCD_WriteData
  1247                           
  1248                           ;lcd.c: 41: LCD_WriteData(0x0E);
  1249  00173E  0E0E               	movlw	14
  1250  001740  EC0E  F00E         	call	_LCD_WriteData
  1251                           
  1252                           ;lcd.c: 42: LCD_WriteData(0x0F);
  1253  001744  0E0F               	movlw	15
  1254  001746  EC0E  F00E         	call	_LCD_WriteData
  1255                           
  1256                           ;lcd.c: 43: LCD_WriteData(0x0E);
  1257  00174A  0E0E               	movlw	14
  1258  00174C  EC0E  F00E         	call	_LCD_WriteData
  1259                           
  1260                           ;lcd.c: 44: LCD_WriteData(0x0C);
  1261  001750  0E0C               	movlw	12
  1262  001752  EC0E  F00E         	call	_LCD_WriteData
  1263                           
  1264                           ;lcd.c: 45: LCD_WriteData(0x08);
  1265  001756  0E08               	movlw	8
  1266  001758  EC0E  F00E         	call	_LCD_WriteData
  1267                           
  1268                           ;lcd.c: 46: LCD_WriteData(0x00);
  1269  00175C  0E00               	movlw	0
  1270  00175E  EC0E  F00E         	call	_LCD_WriteData
  1271                           
  1272                           ;lcd.c: 47: LCD_WriteCommand(2);
  1273  001762  0E02               	movlw	2
  1274  001764  EC90  F00D         	call	_LCD_WriteCommand
  1275  001768  0012               	return		;funcret
  1276  00176A                     __end_of_LCD_Init:
  1277                           	opt stack 0
  1278                           wreg	equ	0xFE8
  1279                           indf2	equ	0xFDF
  1280                           fsr2h	equ	0xFDA
  1281                           fsr2l	equ	0xFD9
  1282                           status	equ	0xFD8
  1283                           
  1284 ;; *************** function _LCD_WriteNibble *****************
  1285 ;; Defined at:
  1286 ;;		line 66 in file "lcd.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  LCD_COMMAND     1    wreg     unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  LCD_COMMAND     1    1[COMRAM] unsigned char 
  1291 ;;  LCD_PORT_DAT    1    2[COMRAM] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;Total ram usage:        3 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    1
  1308 ;; This function calls:
  1309 ;;		_LCD_Strobe
  1310 ;; This function is called by:
  1311 ;;		_LCD_Init
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text7
  1316  001C5E                     __ptext7:
  1317                           	opt stack 0
  1318  001C5E                     _LCD_WriteNibble:
  1319                           	opt stack 28
  1320                           
  1321                           ;incstack = 0
  1322                           ;LCD_WriteNibble@LCD_COMMAND stored from wreg
  1323  001C5E  6E02               	movwf	LCD_WriteNibble@LCD_COMMAND,c
  1324                           
  1325                           ;lcd.c: 67: char LCD_PORT_DATA=0;
  1326  001C60  0E00               	movlw	0
  1327  001C62  6E03               	movwf	LCD_WriteNibble@LCD_PORT_DATA,c
  1328                           
  1329                           ;lcd.c: 68: PORTDbits.RD1=0;
  1330  001C64  9283               	bcf	3971,1,c	;volatile
  1331                           
  1332                           ;lcd.c: 69: PORTDbits.RD0=0;
  1333  001C66  9083               	bcf	3971,0,c	;volatile
  1334                           
  1335                           ;lcd.c: 70: PORTD=(PORTD&(0x0F));
  1336  001C68  5083               	movf	3971,w,c	;volatile
  1337  001C6A  0B0F               	andlw	15
  1338  001C6C  6E83               	movwf	3971,c	;volatile
  1339                           
  1340                           ;lcd.c: 71: LCD_PORT_DATA=((0x0F)&LCD_COMMAND)<<4;
  1341  001C6E  C002  F001         	movff	LCD_WriteNibble@LCD_COMMAND,??_LCD_WriteNibble
  1342  001C72  0E0F               	movlw	15
  1343  001C74  1601               	andwf	??_LCD_WriteNibble,f,c
  1344  001C76  3801               	swapf	??_LCD_WriteNibble,w,c
  1345  001C78  0BF0               	andlw	240
  1346  001C7A  6E03               	movwf	LCD_WriteNibble@LCD_PORT_DATA,c
  1347                           
  1348                           ;lcd.c: 72: PORTD|=LCD_PORT_DATA;
  1349  001C7C  5003               	movf	LCD_WriteNibble@LCD_PORT_DATA,w,c
  1350  001C7E  1283               	iorwf	3971,f,c	;volatile
  1351                           
  1352                           ;lcd.c: 73: LCD_Strobe();
  1353  001C80  EC89  F00E         	call	_LCD_Strobe	;wreg free
  1354                           
  1355                           ;lcd.c: 74: _delay((unsigned long)((2)*(16000000/4000.0)));
  1356  001C84  0E0B               	movlw	11
  1357  001C86  6E01               	movwf	??_LCD_WriteNibble& (0+255),c
  1358  001C88  0E62               	movlw	98
  1359  001C8A                     u717:
  1360  001C8A  2EE8               	decfsz	wreg,f,c
  1361  001C8C  D7FE               	bra	u717
  1362  001C8E  2E01               	decfsz	??_LCD_WriteNibble& (0+255),f,c
  1363  001C90  D7FC               	bra	u717
  1364  001C92  D000               	nop2	
  1365  001C94  0012               	return		;funcret
  1366  001C96                     __end_of_LCD_WriteNibble:
  1367                           	opt stack 0
  1368                           wreg	equ	0xFE8
  1369                           indf2	equ	0xFDF
  1370                           fsr2h	equ	0xFDA
  1371                           fsr2l	equ	0xFD9
  1372                           status	equ	0xFD8
  1373                           
  1374 ;; *************** function _InitI2C *****************
  1375 ;; Defined at:
  1376 ;;		line 8 in file "i2c.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text8
  1404  001CF0                     __ptext8:
  1405                           	opt stack 0
  1406  001CF0                     _InitI2C:
  1407                           	opt stack 30
  1408                           
  1409                           ;i2c.c: 9: TRISC4 = 1;
  1410                           
  1411                           ;incstack = 0
  1412  001CF0  8894               	bsf	3988,4,c	;volatile
  1413                           
  1414                           ;i2c.c: 10: TRISC3 = 1;
  1415  001CF2  8694               	bsf	3988,3,c	;volatile
  1416                           
  1417                           ;i2c.c: 12: SSPADD = ((16000000/4000)/100) - 1;
  1418  001CF4  0E27               	movlw	39
  1419  001CF6  6EC8               	movwf	4040,c	;volatile
  1420                           
  1421                           ;i2c.c: 13: SSPSTAT = 0b10000000;
  1422  001CF8  0E80               	movlw	128
  1423  001CFA  6EC7               	movwf	4039,c	;volatile
  1424                           
  1425                           ;i2c.c: 14: SSPCON1 = 0b00101000;
  1426  001CFC  0E28               	movlw	40
  1427  001CFE  6EC6               	movwf	4038,c	;volatile
  1428  001D00  0012               	return		;funcret
  1429  001D02                     __end_of_InitI2C:
  1430                           	opt stack 0
  1431                           wreg	equ	0xFE8
  1432                           indf2	equ	0xFDF
  1433                           fsr2h	equ	0xFDA
  1434                           fsr2l	equ	0xFD9
  1435                           status	equ	0xFD8
  1436                           
  1437 ;; *************** function _Get_DS1307_RTC_Time *****************
  1438 ;; Defined at:
  1439 ;;		line 146 in file "ds1307.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  2    8[COMRAM] PTR unsigned char 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;Total ram usage:        3 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    2
  1460 ;; This function calls:
  1461 ;;		_Read_Bytes_From_DS1307_RTC
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text9
  1468  00176A                     __ptext9:
  1469                           	opt stack 0
  1470  00176A                     _Get_DS1307_RTC_Time:
  1471                           	opt stack 28
  1472                           
  1473                           ;ds1307.c: 149: Read_Bytes_From_DS1307_RTC(0x00, pRTCArray, 3);
  1474                           
  1475                           ;incstack = 0
  1476  00176A  0E16               	movlw	low _pRTCArray
  1477  00176C  6E02               	movwf	Read_Bytes_From_DS1307_RTC@pData,c
  1478  00176E  0E00               	movlw	high _pRTCArray
  1479  001770  6E03               	movwf	Read_Bytes_From_DS1307_RTC@pData+1,c
  1480  001772  0E00               	movlw	0
  1481  001774  6E05               	movwf	Read_Bytes_From_DS1307_RTC@NoOfBytes+1,c
  1482  001776  0E03               	movlw	3
  1483  001778  6E04               	movwf	Read_Bytes_From_DS1307_RTC@NoOfBytes,c
  1484  00177A  0E00               	movlw	0
  1485  00177C  ECF4  F00C         	call	_Read_Bytes_From_DS1307_RTC
  1486                           
  1487                           ;ds1307.c: 152: Temp = pRTCArray[0];
  1488  001780  C016  F015         	movff	_pRTCArray,_Temp
  1489                           
  1490                           ;ds1307.c: 153: pRTCArray[0] = ((Temp&0x7F)>>4)*10 + (Temp&0x0F);
  1491  001784  C015  F00B         	movff	_Temp,??_Get_DS1307_RTC_Time
  1492  001788  0E0F               	movlw	15
  1493  00178A  160B               	andwf	??_Get_DS1307_RTC_Time,f,c
  1494  00178C  3815               	swapf	_Temp,w,c
  1495  00178E  0B0F               	andlw	15
  1496  001790  0B07               	andlw	7
  1497  001792  0D0A               	mullw	10
  1498  001794  50F3               	movf	prodl,w,c
  1499  001796  240B               	addwf	??_Get_DS1307_RTC_Time,w,c
  1500  001798  6E16               	movwf	_pRTCArray,c
  1501                           
  1502                           ;ds1307.c: 156: Temp = pRTCArray[1];
  1503  00179A  C017  F015         	movff	_pRTCArray+1,_Temp
  1504                           
  1505                           ;ds1307.c: 157: pRTCArray[1] = (Temp>>4)*10 + (Temp&0x0F);
  1506  00179E  C015  F00B         	movff	_Temp,??_Get_DS1307_RTC_Time
  1507  0017A2  0E0F               	movlw	15
  1508  0017A4  160B               	andwf	??_Get_DS1307_RTC_Time,f,c
  1509  0017A6  3815               	swapf	_Temp,w,c
  1510  0017A8  0B0F               	andlw	15
  1511  0017AA  0D0A               	mullw	10
  1512  0017AC  50F3               	movf	prodl,w,c
  1513  0017AE  240B               	addwf	??_Get_DS1307_RTC_Time,w,c
  1514  0017B0  6E17               	movwf	_pRTCArray+1,c
  1515                           
  1516                           ;ds1307.c: 160: if(pRTCArray[2]&0x40)
  1517  0017B2  AC18               	btfss	_pRTCArray+2,6,c
  1518  0017B4  D014               	goto	l59
  1519                           
  1520                           ;ds1307.c: 161: {
  1521                           ;ds1307.c: 162: if(pRTCArray[2]&0x20)
  1522  0017B6  AA18               	btfss	_pRTCArray+2,5,c
  1523  0017B8  D002               	goto	l1688
  1524                           
  1525                           ;ds1307.c: 163: pRTCArray[3] = 1;
  1526  0017BA  0E01               	movlw	1
  1527  0017BC  D001               	goto	L1
  1528  0017BE                     l1688:
  1529                           
  1530                           ;ds1307.c: 164: else
  1531                           ;ds1307.c: 165: pRTCArray[3] = 0;
  1532  0017BE  0E00               	movlw	0
  1533  0017C0                     L1:
  1534  0017C0  6E19               	movwf	_pRTCArray+3,c
  1535                           
  1536                           ;ds1307.c: 167: Temp = pRTCArray[2];
  1537  0017C2  C018  F015         	movff	_pRTCArray+2,_Temp
  1538                           
  1539                           ;ds1307.c: 168: pRTCArray[2] = ((Temp&0x1F)>>4)*10 + (Temp&0x0F);
  1540  0017C6  C015  F00B         	movff	_Temp,??_Get_DS1307_RTC_Time
  1541  0017CA  0E0F               	movlw	15
  1542  0017CC  160B               	andwf	??_Get_DS1307_RTC_Time,f,c
  1543  0017CE  3815               	swapf	_Temp,w,c
  1544  0017D0  0B0F               	andlw	15
  1545  0017D2  0B01               	andlw	1
  1546  0017D4  0D0A               	mullw	10
  1547  0017D6  50F3               	movf	prodl,w,c
  1548  0017D8  240B               	addwf	??_Get_DS1307_RTC_Time,w,c
  1549  0017DA  6E18               	movwf	_pRTCArray+2,c
  1550                           
  1551                           ;ds1307.c: 169: }
  1552  0017DC  D00E               	goto	l1698
  1553  0017DE                     l59:
  1554                           
  1555                           ;ds1307.c: 170: else
  1556                           ;ds1307.c: 171: {
  1557                           ;ds1307.c: 172: Temp = pRTCArray[2];
  1558  0017DE  C018  F015         	movff	_pRTCArray+2,_Temp
  1559                           
  1560                           ;ds1307.c: 173: pRTCArray[2] = (Temp>>4)*10 + (Temp&0x0F);
  1561  0017E2  C015  F00B         	movff	_Temp,??_Get_DS1307_RTC_Time
  1562  0017E6  0E0F               	movlw	15
  1563  0017E8  160B               	andwf	??_Get_DS1307_RTC_Time,f,c
  1564  0017EA  3815               	swapf	_Temp,w,c
  1565  0017EC  0B0F               	andlw	15
  1566  0017EE  0D0A               	mullw	10
  1567  0017F0  50F3               	movf	prodl,w,c
  1568  0017F2  240B               	addwf	??_Get_DS1307_RTC_Time,w,c
  1569  0017F4  6E18               	movwf	_pRTCArray+2,c
  1570                           
  1571                           ;ds1307.c: 174: pRTCArray[3] = 2;
  1572  0017F6  0E02               	movlw	2
  1573  0017F8  6E19               	movwf	_pRTCArray+3,c
  1574  0017FA                     l1698:
  1575                           
  1576                           ;ds1307.c: 175: }
  1577                           ;ds1307.c: 177: return pRTCArray;
  1578  0017FA  0E16               	movlw	low _pRTCArray
  1579  0017FC  6E09               	movwf	?_Get_DS1307_RTC_Time,c
  1580  0017FE  0E00               	movlw	high _pRTCArray
  1581  001800  6E0A               	movwf	?_Get_DS1307_RTC_Time+1,c
  1582  001802  0012               	return	
  1583  001804                     __end_of_Get_DS1307_RTC_Time:
  1584                           	opt stack 0
  1585                           prodl	equ	0xFF3
  1586                           wreg	equ	0xFE8
  1587                           indf2	equ	0xFDF
  1588                           fsr2h	equ	0xFDA
  1589                           fsr2l	equ	0xFD9
  1590                           status	equ	0xFD8
  1591                           
  1592 ;; *************** function _Get_DS1307_RTC_Date *****************
  1593 ;; Defined at:
  1594 ;;		line 210 in file "ds1307.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  2    8[COMRAM] PTR unsigned char 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;Total ram usage:        3 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    2
  1615 ;; This function calls:
  1616 ;;		_Read_Bytes_From_DS1307_RTC
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text10
  1623  001A56                     __ptext10:
  1624                           	opt stack 0
  1625  001A56                     _Get_DS1307_RTC_Date:
  1626                           	opt stack 28
  1627                           
  1628                           ;ds1307.c: 213: Read_Bytes_From_DS1307_RTC(0x03, pRTCArray, 4);
  1629                           
  1630                           ;incstack = 0
  1631  001A56  0E16               	movlw	low _pRTCArray
  1632  001A58  6E02               	movwf	Read_Bytes_From_DS1307_RTC@pData,c
  1633  001A5A  0E00               	movlw	high _pRTCArray
  1634  001A5C  6E03               	movwf	Read_Bytes_From_DS1307_RTC@pData+1,c
  1635  001A5E  0E00               	movlw	0
  1636  001A60  6E05               	movwf	Read_Bytes_From_DS1307_RTC@NoOfBytes+1,c
  1637  001A62  0E04               	movlw	4
  1638  001A64  6E04               	movwf	Read_Bytes_From_DS1307_RTC@NoOfBytes,c
  1639  001A66  0E03               	movlw	3
  1640  001A68  ECF4  F00C         	call	_Read_Bytes_From_DS1307_RTC
  1641                           
  1642                           ;ds1307.c: 216: Temp = pRTCArray[1];
  1643  001A6C  C017  F015         	movff	_pRTCArray+1,_Temp
  1644                           
  1645                           ;ds1307.c: 217: pRTCArray[1] = (Temp>>4)*10 + (Temp&0x0F);
  1646  001A70  C015  F00B         	movff	_Temp,??_Get_DS1307_RTC_Date
  1647  001A74  0E0F               	movlw	15
  1648  001A76  160B               	andwf	??_Get_DS1307_RTC_Date,f,c
  1649  001A78  3815               	swapf	_Temp,w,c
  1650  001A7A  0B0F               	andlw	15
  1651  001A7C  0D0A               	mullw	10
  1652  001A7E  50F3               	movf	prodl,w,c
  1653  001A80  240B               	addwf	??_Get_DS1307_RTC_Date,w,c
  1654  001A82  6E17               	movwf	_pRTCArray+1,c
  1655                           
  1656                           ;ds1307.c: 220: Temp = pRTCArray[2];
  1657  001A84  C018  F015         	movff	_pRTCArray+2,_Temp
  1658                           
  1659                           ;ds1307.c: 221: pRTCArray[2] = (Temp>>4)*10 + (Temp&0x0F);
  1660  001A88  C015  F00B         	movff	_Temp,??_Get_DS1307_RTC_Date
  1661  001A8C  0E0F               	movlw	15
  1662  001A8E  160B               	andwf	??_Get_DS1307_RTC_Date,f,c
  1663  001A90  3815               	swapf	_Temp,w,c
  1664  001A92  0B0F               	andlw	15
  1665  001A94  0D0A               	mullw	10
  1666  001A96  50F3               	movf	prodl,w,c
  1667  001A98  240B               	addwf	??_Get_DS1307_RTC_Date,w,c
  1668  001A9A  6E18               	movwf	_pRTCArray+2,c
  1669                           
  1670                           ;ds1307.c: 224: Temp = pRTCArray[3];
  1671  001A9C  C019  F015         	movff	_pRTCArray+3,_Temp
  1672                           
  1673                           ;ds1307.c: 225: pRTCArray[3] = (Temp>>4)*10 + (Temp&0x0F);
  1674  001AA0  C015  F00B         	movff	_Temp,??_Get_DS1307_RTC_Date
  1675  001AA4  0E0F               	movlw	15
  1676  001AA6  160B               	andwf	??_Get_DS1307_RTC_Date,f,c
  1677  001AA8  3815               	swapf	_Temp,w,c
  1678  001AAA  0B0F               	andlw	15
  1679  001AAC  0D0A               	mullw	10
  1680  001AAE  50F3               	movf	prodl,w,c
  1681  001AB0  240B               	addwf	??_Get_DS1307_RTC_Date,w,c
  1682  001AB2  6E19               	movwf	_pRTCArray+3,c
  1683                           
  1684                           ;ds1307.c: 227: return pRTCArray;
  1685  001AB4  0E16               	movlw	low _pRTCArray
  1686  001AB6  6E09               	movwf	?_Get_DS1307_RTC_Date,c
  1687  001AB8  0E00               	movlw	high _pRTCArray
  1688  001ABA  6E0A               	movwf	?_Get_DS1307_RTC_Date+1,c
  1689  001ABC  0012               	return	
  1690  001ABE                     __end_of_Get_DS1307_RTC_Date:
  1691                           	opt stack 0
  1692                           prodl	equ	0xFF3
  1693                           wreg	equ	0xFE8
  1694                           indf2	equ	0xFDF
  1695                           fsr2h	equ	0xFDA
  1696                           fsr2l	equ	0xFD9
  1697                           status	equ	0xFD8
  1698                           
  1699 ;; *************** function _Read_Bytes_From_DS1307_RTC *****************
  1700 ;; Defined at:
  1701 ;;		line 81 in file "ds1307.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  Address         1    wreg     unsigned char 
  1704 ;;  pData           2    1[COMRAM] PTR unsigned char 
  1705 ;;		 -> pRTCArray(4), 
  1706 ;;  NoOfBytes       2    3[COMRAM] unsigned int 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  Address         1    5[COMRAM] unsigned char 
  1709 ;;  i               2    6[COMRAM] unsigned int 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;Total ram usage:        7 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    1
  1726 ;; This function calls:
  1727 ;;		_I2C_ReStart
  1728 ;;		_I2C_Read_Byte
  1729 ;;		_I2C_Send_ACK
  1730 ;;		_I2C_Send_NACK
  1731 ;;		_I2C_Start
  1732 ;;		_I2C_Stop
  1733 ;;		_I2C_Write_Byte
  1734 ;; This function is called by:
  1735 ;;		_Get_DS1307_RTC_Time
  1736 ;;		_Get_DS1307_RTC_Date
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text11
  1741  0019E8                     __ptext11:
  1742                           	opt stack 0
  1743  0019E8                     _Read_Bytes_From_DS1307_RTC:
  1744                           	opt stack 28
  1745                           
  1746                           ;incstack = 0
  1747                           ;Read_Bytes_From_DS1307_RTC@Address stored from wreg
  1748  0019E8  6E06               	movwf	Read_Bytes_From_DS1307_RTC@Address,c
  1749                           
  1750                           ;ds1307.c: 83: unsigned int i;
  1751                           ;ds1307.c: 85: I2C_Start();
  1752  0019EA  ECA7  F00E         	call	_I2C_Start	;wreg free
  1753                           
  1754                           ;ds1307.c: 88: while(I2C_Write_Byte(0xD0 + 0) == 1)
  1755  0019EE  D002               	goto	l1538
  1756  0019F0                     l1536:
  1757                           
  1758                           ;ds1307.c: 89: { I2C_Start(); }
  1759  0019F0  ECA7  F00E         	call	_I2C_Start	;wreg free
  1760  0019F4                     l1538:
  1761  0019F4  0ED0               	movlw	208
  1762  0019F6  EC62  F00E         	call	_I2C_Write_Byte
  1763  0019FA  B0D8               	btfsc	status,0,c
  1764  0019FC  D7F9               	goto	l1536
  1765                           
  1766                           ;ds1307.c: 91: I2C_Write_Byte(Address);
  1767  0019FE  5006               	movf	Read_Bytes_From_DS1307_RTC@Address,w,c
  1768  001A00  EC62  F00E         	call	_I2C_Write_Byte
  1769                           
  1770                           ;ds1307.c: 92: I2C_ReStart();
  1771  001A04  ECAC  F00E         	call	_I2C_ReStart	;wreg free
  1772                           
  1773                           ;ds1307.c: 95: I2C_Write_Byte(0xD0 + 1);
  1774  001A08  0ED1               	movlw	209
  1775  001A0A  EC62  F00E         	call	_I2C_Write_Byte
  1776                           
  1777                           ;ds1307.c: 97: pData[0] = I2C_Read_Byte();
  1778  001A0E  EC9C  F00E         	call	_I2C_Read_Byte	;wreg free
  1779  001A12  C002  FFD9         	movff	Read_Bytes_From_DS1307_RTC@pData,fsr2l
  1780  001A16  C003  FFDA         	movff	Read_Bytes_From_DS1307_RTC@pData+1,fsr2h
  1781  001A1A  6EDF               	movwf	indf2,c
  1782                           
  1783                           ;ds1307.c: 99: for(i=1;i<NoOfBytes;i++)
  1784  001A1C  0E00               	movlw	0
  1785  001A1E  6E08               	movwf	Read_Bytes_From_DS1307_RTC@i+1,c
  1786  001A20  0E01               	movlw	1
  1787  001A22  6E07               	movwf	Read_Bytes_From_DS1307_RTC@i,c
  1788  001A24  D00D               	goto	l1556
  1789  001A26                     l1550:
  1790                           
  1791                           ;ds1307.c: 100: {
  1792                           ;ds1307.c: 101: I2C_Send_ACK();
  1793  001A26  EC96  F00E         	call	_I2C_Send_ACK	;wreg free
  1794                           
  1795                           ;ds1307.c: 102: pData[i] = I2C_Read_Byte();
  1796  001A2A  5007               	movf	Read_Bytes_From_DS1307_RTC@i,w,c
  1797  001A2C  2402               	addwf	Read_Bytes_From_DS1307_RTC@pData,w,c
  1798  001A2E  6ED9               	movwf	fsr2l,c
  1799  001A30  5008               	movf	Read_Bytes_From_DS1307_RTC@i+1,w,c
  1800  001A32  2003               	addwfc	Read_Bytes_From_DS1307_RTC@pData+1,w,c
  1801  001A34  6EDA               	movwf	fsr2h,c
  1802  001A36  EC9C  F00E         	call	_I2C_Read_Byte	;wreg free
  1803  001A3A  6EDF               	movwf	indf2,c
  1804  001A3C  4A07               	infsnz	Read_Bytes_From_DS1307_RTC@i,f,c
  1805  001A3E  2A08               	incf	Read_Bytes_From_DS1307_RTC@i+1,f,c
  1806  001A40                     l1556:
  1807  001A40  5004               	movf	Read_Bytes_From_DS1307_RTC@NoOfBytes,w,c
  1808  001A42  5C07               	subwf	Read_Bytes_From_DS1307_RTC@i,w,c
  1809  001A44  5005               	movf	Read_Bytes_From_DS1307_RTC@NoOfBytes+1,w,c
  1810  001A46  5808               	subwfb	Read_Bytes_From_DS1307_RTC@i+1,w,c
  1811  001A48  A0D8               	btfss	status,0,c
  1812  001A4A  D7ED               	goto	l1550
  1813                           
  1814                           ;ds1307.c: 103: }
  1815                           ;ds1307.c: 105: I2C_Send_NACK();
  1816  001A4C  EC90  F00E         	call	_I2C_Send_NACK	;wreg free
  1817                           
  1818                           ;ds1307.c: 106: I2C_Stop();
  1819  001A50  ECA2  F00E         	call	_I2C_Stop	;wreg free
  1820  001A54  0012               	return		;funcret
  1821  001A56                     __end_of_Read_Bytes_From_DS1307_RTC:
  1822                           	opt stack 0
  1823                           prodl	equ	0xFF3
  1824                           wreg	equ	0xFE8
  1825                           indf2	equ	0xFDF
  1826                           fsr2h	equ	0xFDA
  1827                           fsr2l	equ	0xFD9
  1828                           status	equ	0xFD8
  1829                           
  1830 ;; *************** function _I2C_Write_Byte *****************
  1831 ;; Defined at:
  1832 ;;		line 67 in file "i2c.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  Byte            1    wreg     unsigned char 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  Byte            1    0[COMRAM] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;		None               void
  1839 ;; Registers used:
  1840 ;;		wreg, status,0
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;Total ram usage:        1 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_Write_Bytes_To_DS1307_RTC
  1856 ;;		_Read_Bytes_From_DS1307_RTC
  1857 ;;		_Write_Byte_To_DS1307_RTC
  1858 ;;		_Read_Byte_From_DS1307_RTC
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text12
  1863  001CC4                     __ptext12:
  1864                           	opt stack 0
  1865  001CC4                     _I2C_Write_Byte:
  1866                           	opt stack 28
  1867                           
  1868                           ;incstack = 0
  1869                           ;I2C_Write_Byte@Byte stored from wreg
  1870  001CC4  6E01               	movwf	I2C_Write_Byte@Byte,c
  1871                           
  1872                           ;i2c.c: 69: SSPBUF = Byte;
  1873  001CC6  C001  FFC9         	movff	I2C_Write_Byte@Byte,4041	;volatile
  1874  001CCA                     l133:
  1875  001CCA  A69E               	btfss	3998,3,c	;volatile
  1876  001CCC  D7FE               	goto	l133
  1877                           
  1878                           ;i2c.c: 71: SSPIF = 0;
  1879  001CCE  969E               	bcf	3998,3,c	;volatile
  1880                           
  1881                           ;i2c.c: 73: return ACKSTAT;
  1882  001CD0  BCC5               	btfsc	4037,6,c	;volatile
  1883  001CD2  D002               	goto	l1008
  1884  001CD4  90D8               	bcf	status,0,c
  1885  001CD6  0012               	return	
  1886  001CD8                     l1008:
  1887  001CD8  80D8               	bsf	status,0,c
  1888  001CDA  0012               	return	
  1889  001CDC                     __end_of_I2C_Write_Byte:
  1890                           	opt stack 0
  1891                           prodl	equ	0xFF3
  1892                           wreg	equ	0xFE8
  1893                           indf2	equ	0xFDF
  1894                           fsr2h	equ	0xFDA
  1895                           fsr2l	equ	0xFD9
  1896                           status	equ	0xFD8
  1897                           
  1898 ;; *************** function _I2C_Stop *****************
  1899 ;; Defined at:
  1900 ;;		line 37 in file "i2c.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		None
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_Write_Bytes_To_DS1307_RTC
  1924 ;;		_Read_Bytes_From_DS1307_RTC
  1925 ;;		_Write_Byte_To_DS1307_RTC
  1926 ;;		_Read_Byte_From_DS1307_RTC
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text13
  1931  001D44                     __ptext13:
  1932                           	opt stack 0
  1933  001D44                     _I2C_Stop:
  1934                           	opt stack 28
  1935                           
  1936                           ;i2c.c: 39: PEN = 1;
  1937                           
  1938                           ;incstack = 0
  1939  001D44  84C5               	bsf	4037,2,c	;volatile
  1940  001D46                     l115:
  1941  001D46  A69E               	btfss	3998,3,c	;volatile
  1942  001D48  D7FE               	goto	l115
  1943                           
  1944                           ;i2c.c: 41: SSPIF = 0;
  1945  001D4A  969E               	bcf	3998,3,c	;volatile
  1946  001D4C  0012               	return		;funcret
  1947  001D4E                     __end_of_I2C_Stop:
  1948                           	opt stack 0
  1949                           prodl	equ	0xFF3
  1950                           wreg	equ	0xFE8
  1951                           indf2	equ	0xFDF
  1952                           fsr2h	equ	0xFDA
  1953                           fsr2l	equ	0xFD9
  1954                           status	equ	0xFD8
  1955                           
  1956 ;; *************** function _I2C_Start *****************
  1957 ;; Defined at:
  1958 ;;		line 19 in file "i2c.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		None
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_Write_Bytes_To_DS1307_RTC
  1982 ;;		_Read_Bytes_From_DS1307_RTC
  1983 ;;		_Write_Byte_To_DS1307_RTC
  1984 ;;		_Read_Byte_From_DS1307_RTC
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text14
  1989  001D4E                     __ptext14:
  1990                           	opt stack 0
  1991  001D4E                     _I2C_Start:
  1992                           	opt stack 28
  1993                           
  1994                           ;i2c.c: 21: SEN = 1;
  1995                           
  1996                           ;incstack = 0
  1997  001D4E  80C5               	bsf	4037,0,c	;volatile
  1998  001D50                     l103:
  1999  001D50  A69E               	btfss	3998,3,c	;volatile
  2000  001D52  D7FE               	goto	l103
  2001                           
  2002                           ;i2c.c: 23: SSPIF = 0;
  2003  001D54  969E               	bcf	3998,3,c	;volatile
  2004  001D56  0012               	return		;funcret
  2005  001D58                     __end_of_I2C_Start:
  2006                           	opt stack 0
  2007                           prodl	equ	0xFF3
  2008                           wreg	equ	0xFE8
  2009                           indf2	equ	0xFDF
  2010                           fsr2h	equ	0xFDA
  2011                           fsr2l	equ	0xFD9
  2012                           status	equ	0xFD8
  2013                           
  2014 ;; *************** function _I2C_Send_NACK *****************
  2015 ;; Defined at:
  2016 ;;		line 57 in file "i2c.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		None
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;Total ram usage:        0 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_Read_Bytes_From_DS1307_RTC
  2040 ;;		_Read_Byte_From_DS1307_RTC
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text15
  2045  001D20                     __ptext15:
  2046                           	opt stack 0
  2047  001D20                     _I2C_Send_NACK:
  2048                           	opt stack 28
  2049                           
  2050                           ;i2c.c: 59: ACKDT = 1;
  2051                           
  2052                           ;incstack = 0
  2053  001D20  8AC5               	bsf	4037,5,c	;volatile
  2054                           
  2055                           ;i2c.c: 60: ACKEN = 1;
  2056  001D22  88C5               	bsf	4037,4,c	;volatile
  2057  001D24                     l127:
  2058  001D24  A69E               	btfss	3998,3,c	;volatile
  2059  001D26  D7FE               	goto	l127
  2060                           
  2061                           ;i2c.c: 62: SSPIF = 0;
  2062  001D28  969E               	bcf	3998,3,c	;volatile
  2063  001D2A  0012               	return		;funcret
  2064  001D2C                     __end_of_I2C_Send_NACK:
  2065                           	opt stack 0
  2066                           prodl	equ	0xFF3
  2067                           wreg	equ	0xFE8
  2068                           indf2	equ	0xFDF
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8
  2072                           
  2073 ;; *************** function _I2C_Send_ACK *****************
  2074 ;; Defined at:
  2075 ;;		line 47 in file "i2c.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		None
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_Read_Bytes_From_DS1307_RTC
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text16
  2103  001D2C                     __ptext16:
  2104                           	opt stack 0
  2105  001D2C                     _I2C_Send_ACK:
  2106                           	opt stack 28
  2107                           
  2108                           ;i2c.c: 49: ACKDT = 0;
  2109                           
  2110                           ;incstack = 0
  2111  001D2C  9AC5               	bcf	4037,5,c	;volatile
  2112                           
  2113                           ;i2c.c: 50: ACKEN = 1;
  2114  001D2E  88C5               	bsf	4037,4,c	;volatile
  2115  001D30                     l121:
  2116  001D30  A69E               	btfss	3998,3,c	;volatile
  2117  001D32  D7FE               	goto	l121
  2118                           
  2119                           ;i2c.c: 52: SSPIF = 0;
  2120  001D34  969E               	bcf	3998,3,c	;volatile
  2121  001D36  0012               	return		;funcret
  2122  001D38                     __end_of_I2C_Send_ACK:
  2123                           	opt stack 0
  2124                           prodl	equ	0xFF3
  2125                           wreg	equ	0xFE8
  2126                           indf2	equ	0xFDF
  2127                           fsr2h	equ	0xFDA
  2128                           fsr2l	equ	0xFD9
  2129                           status	equ	0xFD8
  2130                           
  2131 ;; *************** function _I2C_Read_Byte *****************
  2132 ;; Defined at:
  2133 ;;		line 78 in file "i2c.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      unsigned char 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;Total ram usage:        0 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_Read_Bytes_From_DS1307_RTC
  2157 ;;		_Read_Byte_From_DS1307_RTC
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text17
  2162  001D38                     __ptext17:
  2163                           	opt stack 0
  2164  001D38                     _I2C_Read_Byte:
  2165                           	opt stack 28
  2166                           
  2167                           ;i2c.c: 80: RCEN = 1;
  2168                           
  2169                           ;incstack = 0
  2170  001D38  86C5               	bsf	4037,3,c	;volatile
  2171  001D3A                     l139:
  2172  001D3A  A69E               	btfss	3998,3,c	;volatile
  2173  001D3C  D7FE               	goto	l139
  2174                           
  2175                           ;i2c.c: 82: SSPIF = 0;
  2176  001D3E  969E               	bcf	3998,3,c	;volatile
  2177                           
  2178                           ;i2c.c: 84: return SSPBUF;
  2179  001D40  50C9               	movf	4041,w,c	;volatile
  2180  001D42  0012               	return	
  2181  001D44                     __end_of_I2C_Read_Byte:
  2182                           	opt stack 0
  2183                           prodl	equ	0xFF3
  2184                           wreg	equ	0xFE8
  2185                           indf2	equ	0xFDF
  2186                           fsr2h	equ	0xFDA
  2187                           fsr2l	equ	0xFD9
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _I2C_ReStart *****************
  2191 ;; Defined at:
  2192 ;;		line 28 in file "i2c.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		None
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_Read_Bytes_From_DS1307_RTC
  2216 ;;		_Read_Byte_From_DS1307_RTC
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text18
  2221  001D58                     __ptext18:
  2222                           	opt stack 0
  2223  001D58                     _I2C_ReStart:
  2224                           	opt stack 28
  2225                           
  2226                           ;i2c.c: 30: RSEN = 1;
  2227                           
  2228                           ;incstack = 0
  2229  001D58  82C5               	bsf	4037,1,c	;volatile
  2230  001D5A                     l109:
  2231  001D5A  A69E               	btfss	3998,3,c	;volatile
  2232  001D5C  D7FE               	goto	l109
  2233                           
  2234                           ;i2c.c: 32: SSPIF = 0;
  2235  001D5E  969E               	bcf	3998,3,c	;volatile
  2236  001D60  0012               	return		;funcret
  2237  001D62                     __end_of_I2C_ReStart:
  2238                           	opt stack 0
  2239                           prodl	equ	0xFF3
  2240                           wreg	equ	0xFE8
  2241                           indf2	equ	0xFDF
  2242                           fsr2h	equ	0xFDA
  2243                           fsr2l	equ	0xFD9
  2244                           status	equ	0xFD8
  2245                           
  2246 ;; *************** function _DisplayTimeToLCD *****************
  2247 ;; Defined at:
  2248 ;;		line 80 in file "main.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  pTimeArray      2   15[COMRAM] PTR unsigned char 
  2251 ;;		 -> pRTCArray(4), 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;Total ram usage:        3 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    4
  2270 ;; This function calls:
  2271 ;;		_LCD_Putc_xy
  2272 ;;		_LCD_Putrs
  2273 ;;		___awdiv
  2274 ;;		___awmod
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text19
  2281  00130C                     __ptext19:
  2282                           	opt stack 0
  2283  00130C                     _DisplayTimeToLCD:
  2284                           	opt stack 26
  2285                           
  2286                           ;main.c: 82: LCD_Putc_xy( (pTimeArray[2]/10)+0x30, 0, 0 );
  2287                           
  2288                           ;incstack = 0
  2289  00130C  0E00               	movlw	0
  2290  00130E  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2291  001310  0E00               	movlw	0
  2292  001312  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2293  001314  EE20 F002          	lfsr	2,2
  2294  001318  5010               	movf	DisplayTimeToLCD@pTimeArray,w,c
  2295  00131A  26D9               	addwf	fsr2l,f,c
  2296  00131C  5011               	movf	DisplayTimeToLCD@pTimeArray+1,w,c
  2297  00131E  22DA               	addwfc	fsr2h,f,c
  2298  001320  50DF               	movf	indf2,w,c
  2299  001322  6E12               	movwf	??_DisplayTimeToLCD& (0+255),c
  2300  001324  5012               	movf	??_DisplayTimeToLCD,w,c
  2301  001326  6E01               	movwf	___awdiv@dividend,c
  2302  001328  6A02               	clrf	___awdiv@dividend+1,c
  2303  00132A  0E00               	movlw	0
  2304  00132C  6E04               	movwf	___awdiv@divisor+1,c
  2305  00132E  0E0A               	movlw	10
  2306  001330  6E03               	movwf	___awdiv@divisor,c
  2307  001332  EC02  F00C         	call	___awdiv	;wreg free
  2308  001336  5001               	movf	?___awdiv,w,c
  2309  001338  0F30               	addlw	48
  2310  00133A  EC6E  F00E         	call	_LCD_Putc_xy
  2311                           
  2312                           ;main.c: 83: LCD_Putc_xy( (pTimeArray[2]%10)+0x30, 1, 0 );
  2313  00133E  0E01               	movlw	1
  2314  001340  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2315  001342  0E00               	movlw	0
  2316  001344  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2317  001346  EE20 F002          	lfsr	2,2
  2318  00134A  5010               	movf	DisplayTimeToLCD@pTimeArray,w,c
  2319  00134C  26D9               	addwf	fsr2l,f,c
  2320  00134E  5011               	movf	DisplayTimeToLCD@pTimeArray+1,w,c
  2321  001350  22DA               	addwfc	fsr2h,f,c
  2322  001352  50DF               	movf	indf2,w,c
  2323  001354  6E12               	movwf	??_DisplayTimeToLCD& (0+255),c
  2324  001356  5012               	movf	??_DisplayTimeToLCD,w,c
  2325  001358  6E01               	movwf	___awmod@dividend,c
  2326  00135A  6A02               	clrf	___awmod@dividend+1,c
  2327  00135C  0E00               	movlw	0
  2328  00135E  6E04               	movwf	___awmod@divisor+1,c
  2329  001360  0E0A               	movlw	10
  2330  001362  6E03               	movwf	___awmod@divisor,c
  2331  001364  EC85  F00C         	call	___awmod	;wreg free
  2332  001368  5001               	movf	?___awmod,w,c
  2333  00136A  0F30               	addlw	48
  2334  00136C  EC6E  F00E         	call	_LCD_Putc_xy
  2335                           
  2336                           ;main.c: 84: LCD_Putrs(":", 2, 0);
  2337  001370  0E4B               	movlw	low STR_3
  2338  001372  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2339  001374  0E10               	movlw	high STR_3
  2340  001376  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2341  001378  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2342  00137A  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2343  00137C  A4D8               	btfss	status,2,c
  2344  00137E  0E00               	movlw	low (__mediumconst shr (0+16))
  2345  001380  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2346  001382  0E02               	movlw	2
  2347  001384  6E09               	movwf	LCD_Putrs@LCD_X,c
  2348  001386  0E00               	movlw	0
  2349  001388  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2350  00138A  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2351                           
  2352                           ;main.c: 86: LCD_Putc_xy( (pTimeArray[1]/10)+0x30, 3, 0 );
  2353  00138E  0E03               	movlw	3
  2354  001390  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2355  001392  0E00               	movlw	0
  2356  001394  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2357  001396  EE20 F001          	lfsr	2,1
  2358  00139A  5010               	movf	DisplayTimeToLCD@pTimeArray,w,c
  2359  00139C  26D9               	addwf	fsr2l,f,c
  2360  00139E  5011               	movf	DisplayTimeToLCD@pTimeArray+1,w,c
  2361  0013A0  22DA               	addwfc	fsr2h,f,c
  2362  0013A2  50DF               	movf	indf2,w,c
  2363  0013A4  6E12               	movwf	??_DisplayTimeToLCD& (0+255),c
  2364  0013A6  5012               	movf	??_DisplayTimeToLCD,w,c
  2365  0013A8  6E01               	movwf	___awdiv@dividend,c
  2366  0013AA  6A02               	clrf	___awdiv@dividend+1,c
  2367  0013AC  0E00               	movlw	0
  2368  0013AE  6E04               	movwf	___awdiv@divisor+1,c
  2369  0013B0  0E0A               	movlw	10
  2370  0013B2  6E03               	movwf	___awdiv@divisor,c
  2371  0013B4  EC02  F00C         	call	___awdiv	;wreg free
  2372  0013B8  5001               	movf	?___awdiv,w,c
  2373  0013BA  0F30               	addlw	48
  2374  0013BC  EC6E  F00E         	call	_LCD_Putc_xy
  2375                           
  2376                           ;main.c: 87: LCD_Putc_xy( (pTimeArray[1]%10)+0x30, 4, 0 );
  2377  0013C0  0E04               	movlw	4
  2378  0013C2  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2379  0013C4  0E00               	movlw	0
  2380  0013C6  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2381  0013C8  EE20 F001          	lfsr	2,1
  2382  0013CC  5010               	movf	DisplayTimeToLCD@pTimeArray,w,c
  2383  0013CE  26D9               	addwf	fsr2l,f,c
  2384  0013D0  5011               	movf	DisplayTimeToLCD@pTimeArray+1,w,c
  2385  0013D2  22DA               	addwfc	fsr2h,f,c
  2386  0013D4  50DF               	movf	indf2,w,c
  2387  0013D6  6E12               	movwf	??_DisplayTimeToLCD& (0+255),c
  2388  0013D8  5012               	movf	??_DisplayTimeToLCD,w,c
  2389  0013DA  6E01               	movwf	___awmod@dividend,c
  2390  0013DC  6A02               	clrf	___awmod@dividend+1,c
  2391  0013DE  0E00               	movlw	0
  2392  0013E0  6E04               	movwf	___awmod@divisor+1,c
  2393  0013E2  0E0A               	movlw	10
  2394  0013E4  6E03               	movwf	___awmod@divisor,c
  2395  0013E6  EC85  F00C         	call	___awmod	;wreg free
  2396  0013EA  5001               	movf	?___awmod,w,c
  2397  0013EC  0F30               	addlw	48
  2398  0013EE  EC6E  F00E         	call	_LCD_Putc_xy
  2399                           
  2400                           ;main.c: 88: LCD_Putrs(":", 5, 0);
  2401  0013F2  0E4B               	movlw	low STR_3
  2402  0013F4  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2403  0013F6  0E10               	movlw	high STR_3
  2404  0013F8  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2405  0013FA  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2406  0013FC  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2407  0013FE  A4D8               	btfss	status,2,c
  2408  001400  0E00               	movlw	low (__mediumconst shr (0+16))
  2409  001402  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2410  001404  0E05               	movlw	5
  2411  001406  6E09               	movwf	LCD_Putrs@LCD_X,c
  2412  001408  0E00               	movlw	0
  2413  00140A  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2414  00140C  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2415                           
  2416                           ;main.c: 90: LCD_Putc_xy( (pTimeArray[0]/10)+0x30, 6, 0 );
  2417  001410  0E06               	movlw	6
  2418  001412  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2419  001414  0E00               	movlw	0
  2420  001416  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2421  001418  C010  FFD9         	movff	DisplayTimeToLCD@pTimeArray,fsr2l
  2422  00141C  C011  FFDA         	movff	DisplayTimeToLCD@pTimeArray+1,fsr2h
  2423  001420  50DF               	movf	indf2,w,c
  2424  001422  6E12               	movwf	??_DisplayTimeToLCD& (0+255),c
  2425  001424  5012               	movf	??_DisplayTimeToLCD,w,c
  2426  001426  6E01               	movwf	___awdiv@dividend,c
  2427  001428  6A02               	clrf	___awdiv@dividend+1,c
  2428  00142A  0E00               	movlw	0
  2429  00142C  6E04               	movwf	___awdiv@divisor+1,c
  2430  00142E  0E0A               	movlw	10
  2431  001430  6E03               	movwf	___awdiv@divisor,c
  2432  001432  EC02  F00C         	call	___awdiv	;wreg free
  2433  001436  5001               	movf	?___awdiv,w,c
  2434  001438  0F30               	addlw	48
  2435  00143A  EC6E  F00E         	call	_LCD_Putc_xy
  2436                           
  2437                           ;main.c: 91: LCD_Putc_xy( (pTimeArray[0]%10)+0x30, 7, 0 );
  2438  00143E  0E07               	movlw	7
  2439  001440  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2440  001442  0E00               	movlw	0
  2441  001444  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2442  001446  C010  FFD9         	movff	DisplayTimeToLCD@pTimeArray,fsr2l
  2443  00144A  C011  FFDA         	movff	DisplayTimeToLCD@pTimeArray+1,fsr2h
  2444  00144E  50DF               	movf	indf2,w,c
  2445  001450  6E12               	movwf	??_DisplayTimeToLCD& (0+255),c
  2446  001452  5012               	movf	??_DisplayTimeToLCD,w,c
  2447  001454  6E01               	movwf	___awmod@dividend,c
  2448  001456  6A02               	clrf	___awmod@dividend+1,c
  2449  001458  0E00               	movlw	0
  2450  00145A  6E04               	movwf	___awmod@divisor+1,c
  2451  00145C  0E0A               	movlw	10
  2452  00145E  6E03               	movwf	___awmod@divisor,c
  2453  001460  EC85  F00C         	call	___awmod	;wreg free
  2454  001464  5001               	movf	?___awmod,w,c
  2455  001466  0F30               	addlw	48
  2456  001468  EC6E  F00E         	call	_LCD_Putc_xy
  2457                           
  2458                           ;main.c: 92: LCD_Putrs(" ", 8, 0 );
  2459  00146C  0E10               	movlw	low (STR_1+15)
  2460  00146E  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2461  001470  0E10               	movlw	high (STR_1+15)
  2462  001472  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2463  001474  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2464  001476  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2465  001478  A4D8               	btfss	status,2,c
  2466  00147A  0E00               	movlw	low (__mediumconst shr (0+16))
  2467  00147C  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2468  00147E  0E08               	movlw	8
  2469  001480  6E09               	movwf	LCD_Putrs@LCD_X,c
  2470  001482  0E00               	movlw	0
  2471  001484  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2472  001486  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2473                           
  2474                           ;main.c: 94: switch(pTimeArray[3]){
  2475  00148A  D02D               	goto	l1754
  2476  00148C                     l1746:
  2477  00148C  0E43               	movlw	low STR_6
  2478  00148E  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2479  001490  0E10               	movlw	high STR_6
  2480  001492  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2481  001494  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2482  001496  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2483  001498  A4D8               	btfss	status,2,c
  2484  00149A  0E00               	movlw	low (__mediumconst shr (0+16))
  2485  00149C  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2486  00149E  0E09               	movlw	9
  2487  0014A0  6E09               	movwf	LCD_Putrs@LCD_X,c
  2488  0014A2  0E00               	movlw	0
  2489  0014A4  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2490  0014A6  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2491  0014AA  0012               	return	
  2492  0014AC                     l1748:
  2493  0014AC  0E46               	movlw	low STR_7
  2494  0014AE  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2495  0014B0  0E10               	movlw	high STR_7
  2496  0014B2  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2497  0014B4  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2498  0014B6  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2499  0014B8  A4D8               	btfss	status,2,c
  2500  0014BA  0E00               	movlw	low (__mediumconst shr (0+16))
  2501  0014BC  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2502  0014BE  0E09               	movlw	9
  2503  0014C0  6E09               	movwf	LCD_Putrs@LCD_X,c
  2504  0014C2  0E00               	movlw	0
  2505  0014C4  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2506  0014C6  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2507  0014CA  0012               	return	
  2508  0014CC                     l1750:
  2509  0014CC  0E48               	movlw	72
  2510  0014CE  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2511  0014D0  0E00               	movlw	0
  2512  0014D2  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2513  0014D4  0E00               	movlw	0
  2514  0014D6  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2515  0014D8  0E09               	movlw	9
  2516  0014DA  6E09               	movwf	LCD_Putrs@LCD_X,c
  2517  0014DC  0E00               	movlw	0
  2518  0014DE  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2519  0014E0  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2520                           
  2521                           ;main.c: 98: }
  2522  0014E4  0012               	return	
  2523  0014E6                     l1754:
  2524  0014E6  EE20 F003          	lfsr	2,3
  2525  0014EA  5010               	movf	DisplayTimeToLCD@pTimeArray,w,c
  2526  0014EC  26D9               	addwf	fsr2l,f,c
  2527  0014EE  5011               	movf	DisplayTimeToLCD@pTimeArray+1,w,c
  2528  0014F0  22DA               	addwfc	fsr2h,f,c
  2529  0014F2  50DF               	movf	indf2,w,c
  2530                           
  2531                           ; Switch size 1, requested type "space"
  2532                           ; Number of cases is 2, Range of values is 0 to 1
  2533                           ; switch strategies available:
  2534                           ; Name         Instructions Cycles
  2535                           ; simple_byte            7     4 (average)
  2536                           ;	Chosen strategy is simple_byte
  2537  0014F4  0A00               	xorlw	0	; case 0
  2538  0014F6  B4D8               	btfsc	status,2,c
  2539  0014F8  D7C9               	goto	l1746
  2540  0014FA  0A01               	xorlw	1	; case 1
  2541  0014FC  B4D8               	btfsc	status,2,c
  2542  0014FE  D7D6               	goto	l1748
  2543  001500  D7E5               	goto	l1750
  2544  001502                     __end_of_DisplayTimeToLCD:
  2545                           	opt stack 0
  2546                           prodl	equ	0xFF3
  2547                           wreg	equ	0xFE8
  2548                           indf2	equ	0xFDF
  2549                           fsr2h	equ	0xFDA
  2550                           fsr2l	equ	0xFD9
  2551                           status	equ	0xFD8
  2552                           
  2553 ;; *************** function _DisplayDateOnLCD *****************
  2554 ;; Defined at:
  2555 ;;		line 104 in file "main.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  pDateArray      2   15[COMRAM] PTR unsigned char 
  2558 ;;		 -> pRTCArray(4), 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;Total ram usage:        3 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    4
  2577 ;; This function calls:
  2578 ;;		_LCD_Putc_xy
  2579 ;;		_LCD_Putrs
  2580 ;;		___awdiv
  2581 ;;		___awmod
  2582 ;; This function is called by:
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text20
  2588  00104E                     __ptext20:
  2589                           	opt stack 0
  2590  00104E                     _DisplayDateOnLCD:
  2591                           	opt stack 26
  2592                           
  2593                           ;main.c: 106: LCD_Putc_xy( (pDateArray[1]/10)+0x30, 0, 1 );
  2594                           
  2595                           ;incstack = 0
  2596  00104E  0E00               	movlw	0
  2597  001050  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2598  001052  0E01               	movlw	1
  2599  001054  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2600  001056  EE20 F001          	lfsr	2,1
  2601  00105A  5010               	movf	DisplayDateOnLCD@pDateArray,w,c
  2602  00105C  26D9               	addwf	fsr2l,f,c
  2603  00105E  5011               	movf	DisplayDateOnLCD@pDateArray+1,w,c
  2604  001060  22DA               	addwfc	fsr2h,f,c
  2605  001062  50DF               	movf	indf2,w,c
  2606  001064  6E12               	movwf	??_DisplayDateOnLCD& (0+255),c
  2607  001066  5012               	movf	??_DisplayDateOnLCD,w,c
  2608  001068  6E01               	movwf	___awdiv@dividend,c
  2609  00106A  6A02               	clrf	___awdiv@dividend+1,c
  2610  00106C  0E00               	movlw	0
  2611  00106E  6E04               	movwf	___awdiv@divisor+1,c
  2612  001070  0E0A               	movlw	10
  2613  001072  6E03               	movwf	___awdiv@divisor,c
  2614  001074  EC02  F00C         	call	___awdiv	;wreg free
  2615  001078  5001               	movf	?___awdiv,w,c
  2616  00107A  0F30               	addlw	48
  2617  00107C  EC6E  F00E         	call	_LCD_Putc_xy
  2618                           
  2619                           ;main.c: 107: LCD_Putc_xy( (pDateArray[1]%10)+0x30, 1, 1 );
  2620  001080  0E01               	movlw	1
  2621  001082  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2622  001084  0E01               	movlw	1
  2623  001086  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2624  001088  EE20 F001          	lfsr	2,1
  2625  00108C  5010               	movf	DisplayDateOnLCD@pDateArray,w,c
  2626  00108E  26D9               	addwf	fsr2l,f,c
  2627  001090  5011               	movf	DisplayDateOnLCD@pDateArray+1,w,c
  2628  001092  22DA               	addwfc	fsr2h,f,c
  2629  001094  50DF               	movf	indf2,w,c
  2630  001096  6E12               	movwf	??_DisplayDateOnLCD& (0+255),c
  2631  001098  5012               	movf	??_DisplayDateOnLCD,w,c
  2632  00109A  6E01               	movwf	___awmod@dividend,c
  2633  00109C  6A02               	clrf	___awmod@dividend+1,c
  2634  00109E  0E00               	movlw	0
  2635  0010A0  6E04               	movwf	___awmod@divisor+1,c
  2636  0010A2  0E0A               	movlw	10
  2637  0010A4  6E03               	movwf	___awmod@divisor,c
  2638  0010A6  EC85  F00C         	call	___awmod	;wreg free
  2639  0010AA  5001               	movf	?___awmod,w,c
  2640  0010AC  0F30               	addlw	48
  2641  0010AE  EC6E  F00E         	call	_LCD_Putc_xy
  2642                           
  2643                           ;main.c: 108: LCD_Putrs("/", 2, 1);
  2644  0010B2  0E49               	movlw	low STR_8
  2645  0010B4  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2646  0010B6  0E10               	movlw	high STR_8
  2647  0010B8  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2648  0010BA  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2649  0010BC  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2650  0010BE  A4D8               	btfss	status,2,c
  2651  0010C0  0E00               	movlw	low (__mediumconst shr (0+16))
  2652  0010C2  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2653  0010C4  0E02               	movlw	2
  2654  0010C6  6E09               	movwf	LCD_Putrs@LCD_X,c
  2655  0010C8  0E01               	movlw	1
  2656  0010CA  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2657  0010CC  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2658                           
  2659                           ;main.c: 110: LCD_Putc_xy( (pDateArray[2]/10)+0x30, 3, 1 );
  2660  0010D0  0E03               	movlw	3
  2661  0010D2  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2662  0010D4  0E01               	movlw	1
  2663  0010D6  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2664  0010D8  EE20 F002          	lfsr	2,2
  2665  0010DC  5010               	movf	DisplayDateOnLCD@pDateArray,w,c
  2666  0010DE  26D9               	addwf	fsr2l,f,c
  2667  0010E0  5011               	movf	DisplayDateOnLCD@pDateArray+1,w,c
  2668  0010E2  22DA               	addwfc	fsr2h,f,c
  2669  0010E4  50DF               	movf	indf2,w,c
  2670  0010E6  6E12               	movwf	??_DisplayDateOnLCD& (0+255),c
  2671  0010E8  5012               	movf	??_DisplayDateOnLCD,w,c
  2672  0010EA  6E01               	movwf	___awdiv@dividend,c
  2673  0010EC  6A02               	clrf	___awdiv@dividend+1,c
  2674  0010EE  0E00               	movlw	0
  2675  0010F0  6E04               	movwf	___awdiv@divisor+1,c
  2676  0010F2  0E0A               	movlw	10
  2677  0010F4  6E03               	movwf	___awdiv@divisor,c
  2678  0010F6  EC02  F00C         	call	___awdiv	;wreg free
  2679  0010FA  5001               	movf	?___awdiv,w,c
  2680  0010FC  0F30               	addlw	48
  2681  0010FE  EC6E  F00E         	call	_LCD_Putc_xy
  2682                           
  2683                           ;main.c: 111: LCD_Putc_xy( (pDateArray[2]%10)+0x30, 4, 1 );
  2684  001102  0E04               	movlw	4
  2685  001104  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2686  001106  0E01               	movlw	1
  2687  001108  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2688  00110A  EE20 F002          	lfsr	2,2
  2689  00110E  5010               	movf	DisplayDateOnLCD@pDateArray,w,c
  2690  001110  26D9               	addwf	fsr2l,f,c
  2691  001112  5011               	movf	DisplayDateOnLCD@pDateArray+1,w,c
  2692  001114  22DA               	addwfc	fsr2h,f,c
  2693  001116  50DF               	movf	indf2,w,c
  2694  001118  6E12               	movwf	??_DisplayDateOnLCD& (0+255),c
  2695  00111A  5012               	movf	??_DisplayDateOnLCD,w,c
  2696  00111C  6E01               	movwf	___awmod@dividend,c
  2697  00111E  6A02               	clrf	___awmod@dividend+1,c
  2698  001120  0E00               	movlw	0
  2699  001122  6E04               	movwf	___awmod@divisor+1,c
  2700  001124  0E0A               	movlw	10
  2701  001126  6E03               	movwf	___awmod@divisor,c
  2702  001128  EC85  F00C         	call	___awmod	;wreg free
  2703  00112C  5001               	movf	?___awmod,w,c
  2704  00112E  0F30               	addlw	48
  2705  001130  EC6E  F00E         	call	_LCD_Putc_xy
  2706                           
  2707                           ;main.c: 112: LCD_Putrs("/", 5, 1);
  2708  001134  0E49               	movlw	low STR_8
  2709  001136  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2710  001138  0E10               	movlw	high STR_8
  2711  00113A  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2712  00113C  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2713  00113E  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2714  001140  A4D8               	btfss	status,2,c
  2715  001142  0E00               	movlw	low (__mediumconst shr (0+16))
  2716  001144  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2717  001146  0E05               	movlw	5
  2718  001148  6E09               	movwf	LCD_Putrs@LCD_X,c
  2719  00114A  0E01               	movlw	1
  2720  00114C  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2721  00114E  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2722                           
  2723                           ;main.c: 114: LCD_Putc_xy( (pDateArray[3]/10)+0x30, 6, 1 );
  2724  001152  0E06               	movlw	6
  2725  001154  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2726  001156  0E01               	movlw	1
  2727  001158  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2728  00115A  EE20 F003          	lfsr	2,3
  2729  00115E  5010               	movf	DisplayDateOnLCD@pDateArray,w,c
  2730  001160  26D9               	addwf	fsr2l,f,c
  2731  001162  5011               	movf	DisplayDateOnLCD@pDateArray+1,w,c
  2732  001164  22DA               	addwfc	fsr2h,f,c
  2733  001166  50DF               	movf	indf2,w,c
  2734  001168  6E12               	movwf	??_DisplayDateOnLCD& (0+255),c
  2735  00116A  5012               	movf	??_DisplayDateOnLCD,w,c
  2736  00116C  6E01               	movwf	___awdiv@dividend,c
  2737  00116E  6A02               	clrf	___awdiv@dividend+1,c
  2738  001170  0E00               	movlw	0
  2739  001172  6E04               	movwf	___awdiv@divisor+1,c
  2740  001174  0E0A               	movlw	10
  2741  001176  6E03               	movwf	___awdiv@divisor,c
  2742  001178  EC02  F00C         	call	___awdiv	;wreg free
  2743  00117C  5001               	movf	?___awdiv,w,c
  2744  00117E  0F30               	addlw	48
  2745  001180  EC6E  F00E         	call	_LCD_Putc_xy
  2746                           
  2747                           ;main.c: 115: LCD_Putc_xy( (pDateArray[3]%10)+0x30, 7, 1 );
  2748  001184  0E07               	movlw	7
  2749  001186  6E09               	movwf	LCD_Putc_xy@LCD_X,c
  2750  001188  0E01               	movlw	1
  2751  00118A  6E0A               	movwf	LCD_Putc_xy@LCD_Y,c
  2752  00118C  EE20 F003          	lfsr	2,3
  2753  001190  5010               	movf	DisplayDateOnLCD@pDateArray,w,c
  2754  001192  26D9               	addwf	fsr2l,f,c
  2755  001194  5011               	movf	DisplayDateOnLCD@pDateArray+1,w,c
  2756  001196  22DA               	addwfc	fsr2h,f,c
  2757  001198  50DF               	movf	indf2,w,c
  2758  00119A  6E12               	movwf	??_DisplayDateOnLCD& (0+255),c
  2759  00119C  5012               	movf	??_DisplayDateOnLCD,w,c
  2760  00119E  6E01               	movwf	___awmod@dividend,c
  2761  0011A0  6A02               	clrf	___awmod@dividend+1,c
  2762  0011A2  0E00               	movlw	0
  2763  0011A4  6E04               	movwf	___awmod@divisor+1,c
  2764  0011A6  0E0A               	movlw	10
  2765  0011A8  6E03               	movwf	___awmod@divisor,c
  2766  0011AA  EC85  F00C         	call	___awmod	;wreg free
  2767  0011AE  5001               	movf	?___awmod,w,c
  2768  0011B0  0F30               	addlw	48
  2769  0011B2  EC6E  F00E         	call	_LCD_Putc_xy
  2770                           
  2771                           ;main.c: 116: LCD_Putrs(" ", 8, 1);
  2772  0011B6  0E10               	movlw	low (STR_1+15)
  2773  0011B8  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2774  0011BA  0E10               	movlw	high (STR_1+15)
  2775  0011BC  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2776  0011BE  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2777  0011C0  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2778  0011C2  A4D8               	btfss	status,2,c
  2779  0011C4  0E00               	movlw	low (__mediumconst shr (0+16))
  2780  0011C6  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2781  0011C8  0E08               	movlw	8
  2782  0011CA  6E09               	movwf	LCD_Putrs@LCD_X,c
  2783  0011CC  0E01               	movlw	1
  2784  0011CE  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2785  0011D0  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2786                           
  2787                           ;main.c: 118: switch(pDateArray[0]){
  2788  0011D4  D080               	goto	l1786
  2789  0011D6                     l1768:
  2790  0011D6  0E33               	movlw	low STR_11
  2791  0011D8  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2792  0011DA  0E10               	movlw	high STR_11
  2793  0011DC  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2794  0011DE  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2795  0011E0  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2796  0011E2  A4D8               	btfss	status,2,c
  2797  0011E4  0E00               	movlw	low (__mediumconst shr (0+16))
  2798  0011E6  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2799  0011E8  0E09               	movlw	9
  2800  0011EA  6E09               	movwf	LCD_Putrs@LCD_X,c
  2801  0011EC  0E01               	movlw	1
  2802  0011EE  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2803  0011F0  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2804  0011F4  0012               	return	
  2805  0011F6                     l1770:
  2806  0011F6  0E2B               	movlw	low STR_12
  2807  0011F8  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2808  0011FA  0E10               	movlw	high STR_12
  2809  0011FC  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2810  0011FE  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2811  001200  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2812  001202  A4D8               	btfss	status,2,c
  2813  001204  0E00               	movlw	low (__mediumconst shr (0+16))
  2814  001206  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2815  001208  0E09               	movlw	9
  2816  00120A  6E09               	movwf	LCD_Putrs@LCD_X,c
  2817  00120C  0E01               	movlw	1
  2818  00120E  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2819  001210  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2820  001214  0012               	return	
  2821  001216                     l1772:
  2822  001216  0E27               	movlw	low STR_13
  2823  001218  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2824  00121A  0E10               	movlw	high STR_13
  2825  00121C  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2826  00121E  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2827  001220  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2828  001222  A4D8               	btfss	status,2,c
  2829  001224  0E00               	movlw	low (__mediumconst shr (0+16))
  2830  001226  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2831  001228  0E09               	movlw	9
  2832  00122A  6E09               	movwf	LCD_Putrs@LCD_X,c
  2833  00122C  0E01               	movlw	1
  2834  00122E  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2835  001230  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2836  001234  0012               	return	
  2837  001236                     l1774:
  2838  001236  0E3F               	movlw	low STR_14
  2839  001238  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2840  00123A  0E10               	movlw	high STR_14
  2841  00123C  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2842  00123E  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2843  001240  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2844  001242  A4D8               	btfss	status,2,c
  2845  001244  0E00               	movlw	low (__mediumconst shr (0+16))
  2846  001246  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2847  001248  0E09               	movlw	9
  2848  00124A  6E09               	movwf	LCD_Putrs@LCD_X,c
  2849  00124C  0E01               	movlw	1
  2850  00124E  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2851  001250  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2852  001254  0012               	return	
  2853  001256                     l1776:
  2854  001256  0E2F               	movlw	low STR_15
  2855  001258  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2856  00125A  0E10               	movlw	high STR_15
  2857  00125C  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2858  00125E  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2859  001260  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2860  001262  A4D8               	btfss	status,2,c
  2861  001264  0E00               	movlw	low (__mediumconst shr (0+16))
  2862  001266  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2863  001268  0E09               	movlw	9
  2864  00126A  6E09               	movwf	LCD_Putrs@LCD_X,c
  2865  00126C  0E01               	movlw	1
  2866  00126E  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2867  001270  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2868  001274  0012               	return	
  2869  001276                     l1778:
  2870  001276  0E3B               	movlw	low STR_16
  2871  001278  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2872  00127A  0E10               	movlw	high STR_16
  2873  00127C  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2874  00127E  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2875  001280  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2876  001282  A4D8               	btfss	status,2,c
  2877  001284  0E00               	movlw	low (__mediumconst shr (0+16))
  2878  001286  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2879  001288  0E09               	movlw	9
  2880  00128A  6E09               	movwf	LCD_Putrs@LCD_X,c
  2881  00128C  0E01               	movlw	1
  2882  00128E  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2883  001290  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2884  001294  0012               	return	
  2885  001296                     l1780:
  2886  001296  0E37               	movlw	low STR_17
  2887  001298  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2888  00129A  0E10               	movlw	high STR_17
  2889  00129C  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2890  00129E  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2891  0012A0  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2892  0012A2  A4D8               	btfss	status,2,c
  2893  0012A4  0E00               	movlw	low (__mediumconst shr (0+16))
  2894  0012A6  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2895  0012A8  0E09               	movlw	9
  2896  0012AA  6E09               	movwf	LCD_Putrs@LCD_X,c
  2897  0012AC  0E01               	movlw	1
  2898  0012AE  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2899  0012B0  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2900  0012B4  0012               	return	
  2901  0012B6                     l1782:
  2902  0012B6  0E23               	movlw	low STR_18
  2903  0012B8  6E06               	movwf	LCD_Putrs@LCD_STRING,c
  2904  0012BA  0E10               	movlw	high STR_18
  2905  0012BC  6E07               	movwf	LCD_Putrs@LCD_STRING+1,c
  2906  0012BE  5006               	movf	LCD_Putrs@LCD_STRING,w,c
  2907  0012C0  1007               	iorwf	LCD_Putrs@LCD_STRING+1,w,c
  2908  0012C2  A4D8               	btfss	status,2,c
  2909  0012C4  0E00               	movlw	low (__mediumconst shr (0+16))
  2910  0012C6  6E08               	movwf	LCD_Putrs@LCD_STRING+2,c
  2911  0012C8  0E09               	movlw	9
  2912  0012CA  6E09               	movwf	LCD_Putrs@LCD_X,c
  2913  0012CC  0E01               	movlw	1
  2914  0012CE  6E0A               	movwf	LCD_Putrs@LCD_Y,c
  2915  0012D0  EC44  F00C         	call	_LCD_Putrs	;wreg free
  2916                           
  2917                           ;main.c: 127: }
  2918  0012D4  0012               	return	
  2919  0012D6                     l1786:
  2920  0012D6  C010  FFD9         	movff	DisplayDateOnLCD@pDateArray,fsr2l
  2921  0012DA  C011  FFDA         	movff	DisplayDateOnLCD@pDateArray+1,fsr2h
  2922  0012DE  50DF               	movf	indf2,w,c
  2923                           
  2924                           ; Switch size 1, requested type "space"
  2925                           ; Number of cases is 7, Range of values is 1 to 7
  2926                           ; switch strategies available:
  2927                           ; Name         Instructions Cycles
  2928                           ; simple_byte           22    12 (average)
  2929                           ;	Chosen strategy is simple_byte
  2930  0012E0  0A01               	xorlw	1	; case 1
  2931  0012E2  B4D8               	btfsc	status,2,c
  2932  0012E4  D778               	goto	l1768
  2933  0012E6  0A03               	xorlw	3	; case 2
  2934  0012E8  B4D8               	btfsc	status,2,c
  2935  0012EA  D785               	goto	l1770
  2936  0012EC  0A01               	xorlw	1	; case 3
  2937  0012EE  B4D8               	btfsc	status,2,c
  2938  0012F0  D792               	goto	l1772
  2939  0012F2  0A07               	xorlw	7	; case 4
  2940  0012F4  B4D8               	btfsc	status,2,c
  2941  0012F6  D79F               	goto	l1774
  2942  0012F8  0A01               	xorlw	1	; case 5
  2943  0012FA  B4D8               	btfsc	status,2,c
  2944  0012FC  D7AC               	goto	l1776
  2945  0012FE  0A03               	xorlw	3	; case 6
  2946  001300  B4D8               	btfsc	status,2,c
  2947  001302  D7B9               	goto	l1778
  2948  001304  0A01               	xorlw	1	; case 7
  2949  001306  B4D8               	btfsc	status,2,c
  2950  001308  D7C6               	goto	l1780
  2951  00130A  D7D5               	goto	l1782
  2952  00130C                     __end_of_DisplayDateOnLCD:
  2953                           	opt stack 0
  2954                           prodl	equ	0xFF3
  2955                           wreg	equ	0xFE8
  2956                           indf2	equ	0xFDF
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8
  2960                           
  2961 ;; *************** function ___awmod *****************
  2962 ;; Defined at:
  2963 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  dividend        2    0[COMRAM] int 
  2966 ;;  divisor         2    2[COMRAM] int 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  sign            1    5[COMRAM] unsigned char 
  2969 ;;  counter         1    4[COMRAM] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  2    0[COMRAM] int 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;Total ram usage:        6 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_Set_DS1307_RTC_Time
  2989 ;;		_Set_DS1307_RTC_Date
  2990 ;;		_DisplayTimeToLCD
  2991 ;;		_DisplayDateOnLCD
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text21
  2996  00190A                     __ptext21:
  2997                           	opt stack 0
  2998  00190A                     ___awmod:
  2999                           	opt stack 29
  3000                           
  3001                           ;incstack = 0
  3002  00190A  0E00               	movlw	0
  3003  00190C  6E06               	movwf	___awmod@sign,c
  3004  00190E  AE02               	btfss	___awmod@dividend+1,7,c
  3005  001910  D006               	goto	l1632
  3006  001912  6C01               	negf	___awmod@dividend,c
  3007  001914  1E02               	comf	___awmod@dividend+1,f,c
  3008  001916  B0D8               	btfsc	status,0,c
  3009  001918  2A02               	incf	___awmod@dividend+1,f,c
  3010  00191A  0E01               	movlw	1
  3011  00191C  6E06               	movwf	___awmod@sign,c
  3012  00191E                     l1632:
  3013  00191E  AE04               	btfss	___awmod@divisor+1,7,c
  3014  001920  D004               	goto	l1636
  3015  001922  6C03               	negf	___awmod@divisor,c
  3016  001924  1E04               	comf	___awmod@divisor+1,f,c
  3017  001926  B0D8               	btfsc	status,0,c
  3018  001928  2A04               	incf	___awmod@divisor+1,f,c
  3019  00192A                     l1636:
  3020  00192A  5003               	movf	___awmod@divisor,w,c
  3021  00192C  1004               	iorwf	___awmod@divisor+1,w,c
  3022  00192E  B4D8               	btfsc	status,2,c
  3023  001930  D018               	goto	l1652
  3024  001932  0E01               	movlw	1
  3025  001934  6E05               	movwf	___awmod@counter,c
  3026  001936  D004               	goto	l1642
  3027  001938                     l1640:
  3028  001938  90D8               	bcf	status,0,c
  3029  00193A  3603               	rlcf	___awmod@divisor,f,c
  3030  00193C  3604               	rlcf	___awmod@divisor+1,f,c
  3031  00193E  2A05               	incf	___awmod@counter,f,c
  3032  001940                     l1642:
  3033  001940  AE04               	btfss	___awmod@divisor+1,7,c
  3034  001942  D7FA               	goto	l1640
  3035  001944                     l1644:
  3036  001944  5003               	movf	___awmod@divisor,w,c
  3037  001946  5C01               	subwf	___awmod@dividend,w,c
  3038  001948  5004               	movf	___awmod@divisor+1,w,c
  3039  00194A  5802               	subwfb	___awmod@dividend+1,w,c
  3040  00194C  A0D8               	btfss	status,0,c
  3041  00194E  D004               	goto	l1648
  3042  001950  5003               	movf	___awmod@divisor,w,c
  3043  001952  5E01               	subwf	___awmod@dividend,f,c
  3044  001954  5004               	movf	___awmod@divisor+1,w,c
  3045  001956  5A02               	subwfb	___awmod@dividend+1,f,c
  3046  001958                     l1648:
  3047  001958  90D8               	bcf	status,0,c
  3048  00195A  3204               	rrcf	___awmod@divisor+1,f,c
  3049  00195C  3203               	rrcf	___awmod@divisor,f,c
  3050  00195E  2E05               	decfsz	___awmod@counter,f,c
  3051  001960  D7F1               	goto	l1644
  3052  001962                     l1652:
  3053  001962  5006               	movf	___awmod@sign,w,c
  3054  001964  B4D8               	btfsc	status,2,c
  3055  001966  D004               	goto	l1656
  3056  001968  6C01               	negf	___awmod@dividend,c
  3057  00196A  1E02               	comf	___awmod@dividend+1,f,c
  3058  00196C  B0D8               	btfsc	status,0,c
  3059  00196E  2A02               	incf	___awmod@dividend+1,f,c
  3060  001970                     l1656:
  3061  001970  C001  F001         	movff	___awmod@dividend,?___awmod
  3062  001974  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3063  001978  0012               	return	
  3064  00197A                     __end_of___awmod:
  3065                           	opt stack 0
  3066                           prodl	equ	0xFF3
  3067                           wreg	equ	0xFE8
  3068                           indf2	equ	0xFDF
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073 ;; *************** function ___awdiv *****************
  3074 ;; Defined at:
  3075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  dividend        2    0[COMRAM] int 
  3078 ;;  divisor         2    2[COMRAM] int 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  quotient        2    6[COMRAM] int 
  3081 ;;  sign            1    5[COMRAM] unsigned char 
  3082 ;;  counter         1    4[COMRAM] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  2    0[COMRAM] int 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3092 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;Total ram usage:        8 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_Set_DS1307_RTC_Time
  3102 ;;		_Set_DS1307_RTC_Date
  3103 ;;		_DisplayTimeToLCD
  3104 ;;		_DisplayDateOnLCD
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text22
  3109  001804                     __ptext22:
  3110                           	opt stack 0
  3111  001804                     ___awdiv:
  3112                           	opt stack 29
  3113                           
  3114                           ;incstack = 0
  3115  001804  0E00               	movlw	0
  3116  001806  6E06               	movwf	___awdiv@sign,c
  3117  001808  AE04               	btfss	___awdiv@divisor+1,7,c
  3118  00180A  D006               	goto	l1588
  3119  00180C  6C03               	negf	___awdiv@divisor,c
  3120  00180E  1E04               	comf	___awdiv@divisor+1,f,c
  3121  001810  B0D8               	btfsc	status,0,c
  3122  001812  2A04               	incf	___awdiv@divisor+1,f,c
  3123  001814  0E01               	movlw	1
  3124  001816  6E06               	movwf	___awdiv@sign,c
  3125  001818                     l1588:
  3126  001818  AE02               	btfss	___awdiv@dividend+1,7,c
  3127  00181A  D006               	goto	l1594
  3128  00181C  6C01               	negf	___awdiv@dividend,c
  3129  00181E  1E02               	comf	___awdiv@dividend+1,f,c
  3130  001820  B0D8               	btfsc	status,0,c
  3131  001822  2A02               	incf	___awdiv@dividend+1,f,c
  3132  001824  0E01               	movlw	1
  3133  001826  1A06               	xorwf	___awdiv@sign,f,c
  3134  001828                     l1594:
  3135  001828  0E00               	movlw	0
  3136  00182A  6E08               	movwf	___awdiv@quotient+1,c
  3137  00182C  0E00               	movlw	0
  3138  00182E  6E07               	movwf	___awdiv@quotient,c
  3139  001830  5003               	movf	___awdiv@divisor,w,c
  3140  001832  1004               	iorwf	___awdiv@divisor+1,w,c
  3141  001834  B4D8               	btfsc	status,2,c
  3142  001836  D01C               	goto	l1616
  3143  001838  0E01               	movlw	1
  3144  00183A  6E05               	movwf	___awdiv@counter,c
  3145  00183C  D004               	goto	l1602
  3146  00183E                     l1600:
  3147  00183E  90D8               	bcf	status,0,c
  3148  001840  3603               	rlcf	___awdiv@divisor,f,c
  3149  001842  3604               	rlcf	___awdiv@divisor+1,f,c
  3150  001844  2A05               	incf	___awdiv@counter,f,c
  3151  001846                     l1602:
  3152  001846  AE04               	btfss	___awdiv@divisor+1,7,c
  3153  001848  D7FA               	goto	l1600
  3154  00184A                     l1604:
  3155  00184A  90D8               	bcf	status,0,c
  3156  00184C  3607               	rlcf	___awdiv@quotient,f,c
  3157  00184E  3608               	rlcf	___awdiv@quotient+1,f,c
  3158  001850  5003               	movf	___awdiv@divisor,w,c
  3159  001852  5C01               	subwf	___awdiv@dividend,w,c
  3160  001854  5004               	movf	___awdiv@divisor+1,w,c
  3161  001856  5802               	subwfb	___awdiv@dividend+1,w,c
  3162  001858  A0D8               	btfss	status,0,c
  3163  00185A  D005               	goto	l1612
  3164  00185C  5003               	movf	___awdiv@divisor,w,c
  3165  00185E  5E01               	subwf	___awdiv@dividend,f,c
  3166  001860  5004               	movf	___awdiv@divisor+1,w,c
  3167  001862  5A02               	subwfb	___awdiv@dividend+1,f,c
  3168  001864  8007               	bsf	___awdiv@quotient,0,c
  3169  001866                     l1612:
  3170  001866  90D8               	bcf	status,0,c
  3171  001868  3204               	rrcf	___awdiv@divisor+1,f,c
  3172  00186A  3203               	rrcf	___awdiv@divisor,f,c
  3173  00186C  2E05               	decfsz	___awdiv@counter,f,c
  3174  00186E  D7ED               	goto	l1604
  3175  001870                     l1616:
  3176  001870  5006               	movf	___awdiv@sign,w,c
  3177  001872  B4D8               	btfsc	status,2,c
  3178  001874  D004               	goto	l1620
  3179  001876  6C07               	negf	___awdiv@quotient,c
  3180  001878  1E08               	comf	___awdiv@quotient+1,f,c
  3181  00187A  B0D8               	btfsc	status,0,c
  3182  00187C  2A08               	incf	___awdiv@quotient+1,f,c
  3183  00187E                     l1620:
  3184  00187E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3185  001882  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3186  001886  0012               	return	
  3187  001888                     __end_of___awdiv:
  3188                           	opt stack 0
  3189                           prodl	equ	0xFF3
  3190                           wreg	equ	0xFE8
  3191                           indf2	equ	0xFDF
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           status	equ	0xFD8
  3195                           
  3196 ;; *************** function _LCD_Putrs *****************
  3197 ;; Defined at:
  3198 ;;		line 271 in file "lcd.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  LCD_STRING      3    5[COMRAM] PTR const unsigned char 
  3201 ;;		 -> STR_18(4), STR_17(4), STR_16(4), STR_15(4), 
  3202 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
  3203 ;;		 -> STR_10(2), STR_9(2), STR_8(2), ROM(65535), 
  3204 ;;		 -> STR_7(3), STR_6(3), STR_5(2), STR_4(2), 
  3205 ;;		 -> STR_3(2), STR_2(17), STR_1(17), 
  3206 ;;  LCD_X           1    8[COMRAM] unsigned char 
  3207 ;;  LCD_Y           1    9[COMRAM] unsigned char 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  LCD_INDEX       1   14[COMRAM] unsigned char 
  3210 ;;  LCD_WIDE_COU    1   13[COMRAM] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3220 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;Total ram usage:       10 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    3
  3227 ;; This function calls:
  3228 ;;		_LCD_GotoXY
  3229 ;;		_LCD_WriteData
  3230 ;; This function is called by:
  3231 ;;		_MCU_HelloMessage
  3232 ;;		_DisplayTimeToLCD
  3233 ;;		_DisplayDateOnLCD
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text23
  3238  001888                     __ptext23:
  3239                           	opt stack 0
  3240  001888                     _LCD_Putrs:
  3241                           	opt stack 26
  3242                           
  3243                           ;lcd.c: 273: char LCD_INDEX=0;
  3244                           
  3245                           ;incstack = 0
  3246  001888  0E00               	movlw	0
  3247  00188A  6E0F               	movwf	LCD_Putrs@LCD_INDEX,c
  3248                           
  3249                           ;lcd.c: 274: char LCD_WIDE_COUNT=0;
  3250  00188C  0E00               	movlw	0
  3251  00188E  6E0E               	movwf	LCD_Putrs@LCD_WIDE_COUNT,c
  3252                           
  3253                           ;lcd.c: 276: LCD_WIDE_COUNT=16-LCD_X;
  3254  001890  5009               	movf	LCD_Putrs@LCD_X,w,c
  3255  001892  0800               	sublw	0
  3256  001894  0F10               	addlw	16
  3257  001896  6E0E               	movwf	LCD_Putrs@LCD_WIDE_COUNT,c
  3258                           
  3259                           ;lcd.c: 278: LCD_GotoXY(LCD_X,LCD_Y);
  3260  001898  C00A  F004         	movff	LCD_Putrs@LCD_Y,LCD_GotoXY@LCD_Y
  3261  00189C  5009               	movf	LCD_Putrs@LCD_X,w,c
  3262  00189E  ECEA  F00D         	call	_LCD_GotoXY
  3263                           
  3264                           ;lcd.c: 280: for(LCD_INDEX=0;(*(LCD_STRING+LCD_INDEX)&&LCD_WIDE_COUNT);LCD_INDEX++,LCD_W
      +                          IDE_COUNT--)
  3265  0018A2  0E00               	movlw	0
  3266  0018A4  6E0F               	movwf	LCD_Putrs@LCD_INDEX,c
  3267  0018A6  D017               	goto	l1576
  3268  0018A8                     l1570:
  3269                           
  3270                           ;lcd.c: 281: LCD_WriteData(*(LCD_STRING+LCD_INDEX));
  3271  0018A8  500F               	movf	LCD_Putrs@LCD_INDEX,w,c
  3272  0018AA  0D01               	mullw	1
  3273  0018AC  50F3               	movf	prodl,w,c
  3274  0018AE  2406               	addwf	LCD_Putrs@LCD_STRING,w,c
  3275  0018B0  6E0B               	movwf	??_LCD_Putrs& (0+255),c
  3276  0018B2  50F4               	movf	prodh,w,c
  3277  0018B4  2007               	addwfc	LCD_Putrs@LCD_STRING+1,w,c
  3278  0018B6  6E0C               	movwf	(??_LCD_Putrs+1)& (0+255),c
  3279  0018B8  0E00               	movlw	0
  3280  0018BA  2008               	addwfc	LCD_Putrs@LCD_STRING+2,w,c
  3281  0018BC  6E0D               	movwf	(??_LCD_Putrs+2)& (0+255),c
  3282  0018BE  C00B  FFF6         	movff	??_LCD_Putrs,tblptrl
  3283  0018C2  C00C  FFF7         	movff	??_LCD_Putrs+1,tblptrh
  3284  0018C6  C00D  FFF8         	movff	??_LCD_Putrs+2,tblptru
  3285  0018CA  0008               	tblrd		*
  3286  0018CC  50F5               	movf	tablat,w,c
  3287  0018CE  EC0E  F00E         	call	_LCD_WriteData
  3288  0018D2  2A0F               	incf	LCD_Putrs@LCD_INDEX,f,c
  3289  0018D4  060E               	decf	LCD_Putrs@LCD_WIDE_COUNT,f,c
  3290  0018D6                     l1576:
  3291  0018D6  500F               	movf	LCD_Putrs@LCD_INDEX,w,c
  3292  0018D8  0D01               	mullw	1
  3293  0018DA  50F3               	movf	prodl,w,c
  3294  0018DC  2406               	addwf	LCD_Putrs@LCD_STRING,w,c
  3295  0018DE  6E0B               	movwf	??_LCD_Putrs& (0+255),c
  3296  0018E0  50F4               	movf	prodh,w,c
  3297  0018E2  2007               	addwfc	LCD_Putrs@LCD_STRING+1,w,c
  3298  0018E4  6E0C               	movwf	(??_LCD_Putrs+1)& (0+255),c
  3299  0018E6  0E00               	movlw	0
  3300  0018E8  2008               	addwfc	LCD_Putrs@LCD_STRING+2,w,c
  3301  0018EA  6E0D               	movwf	(??_LCD_Putrs+2)& (0+255),c
  3302  0018EC  C00B  FFF6         	movff	??_LCD_Putrs,tblptrl
  3303  0018F0  C00C  FFF7         	movff	??_LCD_Putrs+1,tblptrh
  3304  0018F4  C00D  FFF8         	movff	??_LCD_Putrs+2,tblptru
  3305  0018F8  0008               	tblrd		*
  3306  0018FA  50F5               	movf	tablat,w,c
  3307  0018FC  0900               	iorlw	0
  3308  0018FE  B4D8               	btfsc	status,2,c
  3309  001900  0012               	return	
  3310  001902  500E               	movf	LCD_Putrs@LCD_WIDE_COUNT,w,c
  3311  001904  B4D8               	btfsc	status,2,c
  3312  001906  0012               	return	
  3313  001908  D7CF               	goto	l1570
  3314  00190A                     __end_of_LCD_Putrs:
  3315                           	opt stack 0
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           wreg	equ	0xFE8
  3323                           indf2	equ	0xFDF
  3324                           fsr2h	equ	0xFDA
  3325                           fsr2l	equ	0xFD9
  3326                           status	equ	0xFD8
  3327                           
  3328 ;; *************** function _LCD_Putc_xy *****************
  3329 ;; Defined at:
  3330 ;;		line 132 in file "lcd.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  LCD_DATA        1    wreg     unsigned char 
  3333 ;;  LCD_X           1    8[COMRAM] unsigned char 
  3334 ;;  LCD_Y           1    9[COMRAM] unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  LCD_DATA        1   10[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;Total ram usage:        3 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    3
  3353 ;; This function calls:
  3354 ;;		_LCD_GotoXY
  3355 ;;		_LCD_WriteData
  3356 ;; This function is called by:
  3357 ;;		_DisplayTimeToLCD
  3358 ;;		_DisplayDateOnLCD
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text24
  3363  001CDC                     __ptext24:
  3364                           	opt stack 0
  3365  001CDC                     _LCD_Putc_xy:
  3366                           	opt stack 26
  3367                           
  3368                           ;incstack = 0
  3369                           ;LCD_Putc_xy@LCD_DATA stored from wreg
  3370  001CDC  6E0B               	movwf	LCD_Putc_xy@LCD_DATA,c
  3371                           
  3372                           ;lcd.c: 134: LCD_GotoXY(LCD_X,LCD_Y);
  3373  001CDE  C00A  F004         	movff	LCD_Putc_xy@LCD_Y,LCD_GotoXY@LCD_Y
  3374  001CE2  5009               	movf	LCD_Putc_xy@LCD_X,w,c
  3375  001CE4  ECEA  F00D         	call	_LCD_GotoXY
  3376                           
  3377                           ;lcd.c: 135: LCD_WriteData(LCD_DATA);
  3378  001CE8  500B               	movf	LCD_Putc_xy@LCD_DATA,w,c
  3379  001CEA  EC0E  F00E         	call	_LCD_WriteData
  3380  001CEE  0012               	return		;funcret
  3381  001CF0                     __end_of_LCD_Putc_xy:
  3382                           	opt stack 0
  3383                           tblptru	equ	0xFF8
  3384                           tblptrh	equ	0xFF7
  3385                           tblptrl	equ	0xFF6
  3386                           tablat	equ	0xFF5
  3387                           prodh	equ	0xFF4
  3388                           prodl	equ	0xFF3
  3389                           wreg	equ	0xFE8
  3390                           indf2	equ	0xFDF
  3391                           fsr2h	equ	0xFDA
  3392                           fsr2l	equ	0xFD9
  3393                           status	equ	0xFD8
  3394                           
  3395 ;; *************** function _LCD_WriteData *****************
  3396 ;; Defined at:
  3397 ;;		line 108 in file "lcd.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  LCD_DATA        1    wreg     unsigned char 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  LCD_DATA        1    1[COMRAM] unsigned char 
  3402 ;;  LCD_PORT_DAT    1    2[COMRAM] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, status,2, status,0, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;Total ram usage:        3 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    1
  3419 ;; This function calls:
  3420 ;;		_LCD_Strobe
  3421 ;; This function is called by:
  3422 ;;		_LCD_Init
  3423 ;;		_LCD_Putc_xy
  3424 ;;		_LCD_Putrs
  3425 ;;		_LCD_ClearSpace
  3426 ;;		_LCD_ClearLine
  3427 ;;		_LCD_Puts
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text25
  3432  001C1C                     __ptext25:
  3433                           	opt stack 0
  3434  001C1C                     _LCD_WriteData:
  3435                           	opt stack 27
  3436                           
  3437                           ;incstack = 0
  3438                           ;LCD_WriteData@LCD_DATA stored from wreg
  3439  001C1C  6E02               	movwf	LCD_WriteData@LCD_DATA,c
  3440                           
  3441                           ;lcd.c: 110: char LCD_PORT_DATA=0;
  3442  001C1E  0E00               	movlw	0
  3443  001C20  6E03               	movwf	LCD_WriteData@LCD_PORT_DATA,c
  3444                           
  3445                           ;lcd.c: 111: PORTDbits.RD1=0;
  3446  001C22  9283               	bcf	3971,1,c	;volatile
  3447                           
  3448                           ;lcd.c: 112: PORTDbits.RD0=1;
  3449  001C24  8083               	bsf	3971,0,c	;volatile
  3450                           
  3451                           ;lcd.c: 113: PORTD=(PORTD&(0x0F));
  3452  001C26  5083               	movf	3971,w,c	;volatile
  3453  001C28  0B0F               	andlw	15
  3454  001C2A  6E83               	movwf	3971,c	;volatile
  3455                           
  3456                           ;lcd.c: 114: LCD_PORT_DATA=((0xF0)&LCD_DATA);
  3457  001C2C  5002               	movf	LCD_WriteData@LCD_DATA,w,c
  3458  001C2E  0BF0               	andlw	240
  3459  001C30  6E03               	movwf	LCD_WriteData@LCD_PORT_DATA,c
  3460                           
  3461                           ;lcd.c: 115: PORTD|=LCD_PORT_DATA;
  3462  001C32  5003               	movf	LCD_WriteData@LCD_PORT_DATA,w,c
  3463  001C34  1283               	iorwf	3971,f,c	;volatile
  3464                           
  3465                           ;lcd.c: 116: LCD_Strobe();
  3466  001C36  EC89  F00E         	call	_LCD_Strobe	;wreg free
  3467                           
  3468                           ;lcd.c: 117: PORTD=(PORTD&(0x0F));
  3469  001C3A  5083               	movf	3971,w,c	;volatile
  3470  001C3C  0B0F               	andlw	15
  3471  001C3E  6E83               	movwf	3971,c	;volatile
  3472                           
  3473                           ;lcd.c: 118: LCD_PORT_DATA=((0x0F)&LCD_DATA)<<4;
  3474  001C40  C002  F001         	movff	LCD_WriteData@LCD_DATA,??_LCD_WriteData
  3475  001C44  0E0F               	movlw	15
  3476  001C46  1601               	andwf	??_LCD_WriteData,f,c
  3477  001C48  3801               	swapf	??_LCD_WriteData,w,c
  3478  001C4A  0BF0               	andlw	240
  3479  001C4C  6E03               	movwf	LCD_WriteData@LCD_PORT_DATA,c
  3480                           
  3481                           ;lcd.c: 119: PORTD|=LCD_PORT_DATA;
  3482  001C4E  5003               	movf	LCD_WriteData@LCD_PORT_DATA,w,c
  3483  001C50  1283               	iorwf	3971,f,c	;volatile
  3484                           
  3485                           ;lcd.c: 120: LCD_Strobe();
  3486  001C52  EC89  F00E         	call	_LCD_Strobe	;wreg free
  3487                           
  3488                           ;lcd.c: 121: _delay((unsigned long)((45)*(16000000/4000000.0)));
  3489  001C56  0E3C               	movlw	60
  3490  001C58                     u727:
  3491  001C58  2EE8               	decfsz	wreg,f,c
  3492  001C5A  D7FE               	bra	u727
  3493  001C5C  0012               	return		;funcret
  3494  001C5E                     __end_of_LCD_WriteData:
  3495                           	opt stack 0
  3496                           tblptru	equ	0xFF8
  3497                           tblptrh	equ	0xFF7
  3498                           tblptrl	equ	0xFF6
  3499                           tablat	equ	0xFF5
  3500                           prodh	equ	0xFF4
  3501                           prodl	equ	0xFF3
  3502                           wreg	equ	0xFE8
  3503                           indf2	equ	0xFDF
  3504                           fsr2h	equ	0xFDA
  3505                           fsr2l	equ	0xFD9
  3506                           status	equ	0xFD8
  3507                           
  3508 ;; *************** function _LCD_GotoXY *****************
  3509 ;; Defined at:
  3510 ;;		line 149 in file "lcd.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  LCD_X           1    wreg     unsigned char 
  3513 ;;  LCD_Y           1    3[COMRAM] unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  LCD_X           1    4[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3525 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;Total ram usage:        2 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    2
  3532 ;; This function calls:
  3533 ;;		_LCD_WriteCommand
  3534 ;; This function is called by:
  3535 ;;		_LCD_Putc_xy
  3536 ;;		_LCD_Putrs
  3537 ;;		_LCD_ClearSpace
  3538 ;;		_LCD_Puts
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text26
  3543  001BD4                     __ptext26:
  3544                           	opt stack 0
  3545  001BD4                     _LCD_GotoXY:
  3546                           	opt stack 26
  3547                           
  3548                           ;incstack = 0
  3549                           ;LCD_GotoXY@LCD_X stored from wreg
  3550  001BD4  6E05               	movwf	LCD_GotoXY@LCD_X,c
  3551                           
  3552                           ;lcd.c: 152: switch(LCD_Y)
  3553  001BD6  D014               	goto	l1514
  3554  001BD8                     l1504:
  3555                           
  3556                           ;lcd.c: 155: LCD_WriteCommand(0x80+LCD_X);
  3557  001BD8  5005               	movf	LCD_GotoXY@LCD_X,w,c
  3558  001BDA  0F80               	addlw	128
  3559  001BDC  EC90  F00D         	call	_LCD_WriteCommand
  3560                           
  3561                           ;lcd.c: 156: break;
  3562  001BE0  0012               	return	
  3563  001BE2                     l1506:
  3564                           
  3565                           ;lcd.c: 158: LCD_WriteCommand(0xC0+LCD_X);
  3566  001BE2  5005               	movf	LCD_GotoXY@LCD_X,w,c
  3567  001BE4  0FC0               	addlw	192
  3568  001BE6  EC90  F00D         	call	_LCD_WriteCommand
  3569                           
  3570                           ;lcd.c: 159: break;
  3571  001BEA  0012               	return	
  3572  001BEC                     l1508:
  3573                           
  3574                           ;lcd.c: 161: LCD_WriteCommand(0x90+LCD_X);
  3575  001BEC  5005               	movf	LCD_GotoXY@LCD_X,w,c
  3576  001BEE  0F90               	addlw	144
  3577  001BF0  EC90  F00D         	call	_LCD_WriteCommand
  3578                           
  3579                           ;lcd.c: 162: break;
  3580  001BF4  0012               	return	
  3581  001BF6                     l1510:
  3582                           
  3583                           ;lcd.c: 164: LCD_WriteCommand(0xD0+LCD_X);
  3584  001BF6  5005               	movf	LCD_GotoXY@LCD_X,w,c
  3585  001BF8  0FD0               	addlw	208
  3586  001BFA  EC90  F00D         	call	_LCD_WriteCommand
  3587                           
  3588                           ;lcd.c: 168: }
  3589                           
  3590                           ;lcd.c: 167: break;
  3591                           
  3592                           ;lcd.c: 166: default:
  3593                           
  3594                           ;lcd.c: 165: break;
  3595  001BFE  0012               	return	
  3596  001C00                     l1514:
  3597  001C00  5004               	movf	LCD_GotoXY@LCD_Y,w,c
  3598                           
  3599                           ; Switch size 1, requested type "space"
  3600                           ; Number of cases is 4, Range of values is 0 to 3
  3601                           ; switch strategies available:
  3602                           ; Name         Instructions Cycles
  3603                           ; simple_byte           13     7 (average)
  3604                           ;	Chosen strategy is simple_byte
  3605  001C02  0A00               	xorlw	0	; case 0
  3606  001C04  B4D8               	btfsc	status,2,c
  3607  001C06  D7E8               	goto	l1504
  3608  001C08  0A01               	xorlw	1	; case 1
  3609  001C0A  B4D8               	btfsc	status,2,c
  3610  001C0C  D7EA               	goto	l1506
  3611  001C0E  0A03               	xorlw	3	; case 2
  3612  001C10  B4D8               	btfsc	status,2,c
  3613  001C12  D7EC               	goto	l1508
  3614  001C14  0A01               	xorlw	1	; case 3
  3615  001C16  A4D8               	btfss	status,2,c
  3616  001C18  0012               	return	
  3617  001C1A  D7ED               	goto	l1510
  3618  001C1C                     __end_of_LCD_GotoXY:
  3619                           	opt stack 0
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           prodh	equ	0xFF4
  3625                           prodl	equ	0xFF3
  3626                           wreg	equ	0xFE8
  3627                           indf2	equ	0xFDF
  3628                           fsr2h	equ	0xFDA
  3629                           fsr2l	equ	0xFD9
  3630                           status	equ	0xFD8
  3631                           
  3632 ;; *************** function _LCD_WriteCommand *****************
  3633 ;; Defined at:
  3634 ;;		line 83 in file "lcd.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  LCD_COMMAND     1    wreg     unsigned char 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  LCD_COMMAND     1    2[COMRAM] unsigned char 
  3639 ;;  LCD_PORT_DAT    1    1[COMRAM] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;Total ram usage:        3 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    1
  3656 ;; This function calls:
  3657 ;;		_LCD_Strobe
  3658 ;; This function is called by:
  3659 ;;		_LCD_Init
  3660 ;;		_LCD_GotoXY
  3661 ;;		_MCU_HelloMessage
  3662 ;;		_LCD_ClearLine
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text27
  3667  001B20                     __ptext27:
  3668                           	opt stack 0
  3669  001B20                     _LCD_WriteCommand:
  3670                           	opt stack 28
  3671                           
  3672                           ;incstack = 0
  3673                           ;LCD_WriteCommand@LCD_COMMAND stored from wreg
  3674  001B20  6E03               	movwf	LCD_WriteCommand@LCD_COMMAND,c
  3675                           
  3676                           ;lcd.c: 85: char LCD_PORT_DATA=0;
  3677  001B22  0E00               	movlw	0
  3678  001B24  6E02               	movwf	LCD_WriteCommand@LCD_PORT_DATA,c
  3679                           
  3680                           ;lcd.c: 86: PORTDbits.RD1=0;
  3681  001B26  9283               	bcf	3971,1,c	;volatile
  3682                           
  3683                           ;lcd.c: 87: PORTDbits.RD0=0;
  3684  001B28  9083               	bcf	3971,0,c	;volatile
  3685                           
  3686                           ;lcd.c: 88: PORTD=(PORTD&(0x0F));
  3687  001B2A  5083               	movf	3971,w,c	;volatile
  3688  001B2C  0B0F               	andlw	15
  3689  001B2E  6E83               	movwf	3971,c	;volatile
  3690                           
  3691                           ;lcd.c: 89: LCD_PORT_DATA=((0xF0)&LCD_COMMAND);
  3692  001B30  5003               	movf	LCD_WriteCommand@LCD_COMMAND,w,c
  3693  001B32  0BF0               	andlw	240
  3694  001B34  6E02               	movwf	LCD_WriteCommand@LCD_PORT_DATA,c
  3695                           
  3696                           ;lcd.c: 90: PORTD|=LCD_PORT_DATA;
  3697  001B36  5002               	movf	LCD_WriteCommand@LCD_PORT_DATA,w,c
  3698  001B38  1283               	iorwf	3971,f,c	;volatile
  3699                           
  3700                           ;lcd.c: 91: LCD_Strobe();
  3701  001B3A  EC89  F00E         	call	_LCD_Strobe	;wreg free
  3702                           
  3703                           ;lcd.c: 92: PORTD=(PORTD&(0x0F));
  3704  001B3E  5083               	movf	3971,w,c	;volatile
  3705  001B40  0B0F               	andlw	15
  3706  001B42  6E83               	movwf	3971,c	;volatile
  3707                           
  3708                           ;lcd.c: 93: LCD_PORT_DATA=((0x0F)&LCD_COMMAND)<<4;
  3709  001B44  C003  F001         	movff	LCD_WriteCommand@LCD_COMMAND,??_LCD_WriteCommand
  3710  001B48  0E0F               	movlw	15
  3711  001B4A  1601               	andwf	??_LCD_WriteCommand,f,c
  3712  001B4C  3801               	swapf	??_LCD_WriteCommand,w,c
  3713  001B4E  0BF0               	andlw	240
  3714  001B50  6E02               	movwf	LCD_WriteCommand@LCD_PORT_DATA,c
  3715                           
  3716                           ;lcd.c: 94: PORTD|=LCD_PORT_DATA;
  3717  001B52  5002               	movf	LCD_WriteCommand@LCD_PORT_DATA,w,c
  3718  001B54  1283               	iorwf	3971,f,c	;volatile
  3719                           
  3720                           ;lcd.c: 95: LCD_Strobe();
  3721  001B56  EC89  F00E         	call	_LCD_Strobe	;wreg free
  3722                           
  3723                           ;lcd.c: 96: _delay((unsigned long)((45)*(16000000/4000000.0)));
  3724  001B5A  0E3C               	movlw	60
  3725  001B5C                     u737:
  3726  001B5C  2EE8               	decfsz	wreg,f,c
  3727  001B5E  D7FE               	bra	u737
  3728                           
  3729                           ;lcd.c: 97: if((LCD_COMMAND==2)||(LCD_COMMAND==1))
  3730  001B60  0E02               	movlw	2
  3731  001B62  1803               	xorwf	LCD_WriteCommand@LCD_COMMAND,w,c
  3732  001B64  B4D8               	btfsc	status,2,c
  3733  001B66  D003               	goto	l1000
  3734  001B68  0403               	decf	LCD_WriteCommand@LCD_COMMAND,w,c
  3735  001B6A  A4D8               	btfss	status,2,c
  3736  001B6C  0012               	return	
  3737  001B6E                     l1000:
  3738                           
  3739                           ;lcd.c: 98: _delay((unsigned long)((2)*(16000000/4000.0)));
  3740  001B6E  0E0B               	movlw	11
  3741  001B70  6E01               	movwf	??_LCD_WriteCommand& (0+255),c
  3742  001B72  0E62               	movlw	98
  3743  001B74                     u747:
  3744  001B74  2EE8               	decfsz	wreg,f,c
  3745  001B76  D7FE               	bra	u747
  3746  001B78  2E01               	decfsz	??_LCD_WriteCommand& (0+255),f,c
  3747  001B7A  D7FC               	bra	u747
  3748  001B7C  D000               	nop2	
  3749  001B7E  0012               	return	
  3750  001B80                     __end_of_LCD_WriteCommand:
  3751                           	opt stack 0
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           prodh	equ	0xFF4
  3757                           prodl	equ	0xFF3
  3758                           wreg	equ	0xFE8
  3759                           indf2	equ	0xFDF
  3760                           fsr2h	equ	0xFDA
  3761                           fsr2l	equ	0xFD9
  3762                           status	equ	0xFD8
  3763                           
  3764 ;; *************** function _LCD_Strobe *****************
  3765 ;; Defined at:
  3766 ;;		line 58 in file "lcd.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		None
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;Total ram usage:        0 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_LCD_WriteNibble
  3790 ;;		_LCD_WriteCommand
  3791 ;;		_LCD_WriteData
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text28
  3796  001D12                     __ptext28:
  3797                           	opt stack 0
  3798  001D12                     _LCD_Strobe:
  3799                           	opt stack 28
  3800                           
  3801                           ;lcd.c: 59: PORTDbits.RD1=1;
  3802                           
  3803                           ;incstack = 0
  3804  001D12  8283               	bsf	3971,1,c	;volatile
  3805                           
  3806                           ;lcd.c: 60: _delay((unsigned long)((1)*(16000000/4000000.0)));
  3807  001D14  D000               	nop2		;2 cycle nop
  3808  001D16  D000               	nop2		;2 cycle nop
  3809                           
  3810                           ;lcd.c: 61: PORTDbits.RD1=0;
  3811  001D18  9283               	bcf	3971,1,c	;volatile
  3812                           
  3813                           ;lcd.c: 62: _delay((unsigned long)((1)*(16000000/4000000.0)));
  3814  001D1A  D000               	nop2		;2 cycle nop
  3815  001D1C  D000               	nop2		;2 cycle nop
  3816  001D1E  0012               	return		;funcret
  3817  001D20                     __end_of_LCD_Strobe:
  3818                           	opt stack 0
  3819                           tblptru	equ	0xFF8
  3820                           tblptrh	equ	0xFF7
  3821                           tblptrl	equ	0xFF6
  3822                           tablat	equ	0xFF5
  3823                           prodh	equ	0xFF4
  3824                           prodl	equ	0xFF3
  3825                           wreg	equ	0xFE8
  3826                           indf2	equ	0xFDF
  3827                           fsr2h	equ	0xFDA
  3828                           fsr2l	equ	0xFD9
  3829                           status	equ	0xFD8
  3830                           tblptru	equ	0xFF8
  3831                           tblptrh	equ	0xFF7
  3832                           tblptrl	equ	0xFF6
  3833                           tablat	equ	0xFF5
  3834                           prodh	equ	0xFF4
  3835                           prodl	equ	0xFF3
  3836                           wreg	equ	0xFE8
  3837                           indf2	equ	0xFDF
  3838                           fsr2h	equ	0xFDA
  3839                           fsr2l	equ	0xFD9
  3840                           status	equ	0xFD8
  3841                           
  3842                           	psect	rparam
  3843  0000                     tblptru	equ	0xFF8
  3844                           tblptrh	equ	0xFF7
  3845                           tblptrl	equ	0xFF6
  3846                           tablat	equ	0xFF5
  3847                           prodh	equ	0xFF4
  3848                           prodl	equ	0xFF3
  3849                           wreg	equ	0xFE8
  3850                           indf2	equ	0xFDF
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8


Data Sizes:
    Strings     76
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      25
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    DisplayDateOnLCD@pDateArray	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 

    DisplayTimeToLCD@pTimeArray	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 

    LCD_Putrs@LCD_STRING	PTR const unsigned char  size(3) Largest target is 65535
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), ROM(CODE[65535]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sp__Get_DS1307_RTC_Date	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 

    sp__Get_DS1307_RTC_Time	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 

    Read_Bytes_From_DS1307_RTC@pData	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 

    Write_Bytes_To_DS1307_RTC@pData	PTR unsigned char  size(2) Largest target is 4
		 -> pRTCArray(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_DisplayDateOnLCD
    _main->_DisplayTimeToLCD
    _Set_DS1307_RTC_Time->_Write_Bytes_To_DS1307_RTC
    _Set_DS1307_RTC_Date->_Write_Bytes_To_DS1307_RTC
    _Write_Bytes_To_DS1307_RTC->_I2C_Write_Byte
    _MCU_HelloMessage->_LCD_Putrs
    _LCD_Init->_LCD_WriteCommand
    _LCD_Init->_LCD_WriteData
    _LCD_Init->_LCD_WriteNibble
    _Get_DS1307_RTC_Time->_Read_Bytes_From_DS1307_RTC
    _Get_DS1307_RTC_Date->_Read_Bytes_From_DS1307_RTC
    _Read_Bytes_From_DS1307_RTC->_I2C_Write_Byte
    _DisplayTimeToLCD->_LCD_Putrs
    _DisplayDateOnLCD->_LCD_Putrs
    _LCD_Putrs->_LCD_GotoXY
    _LCD_Putc_xy->___awdiv
    _LCD_GotoXY->_LCD_WriteCommand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   41998
                                             18 COMRAM     2     2      0
                   _DisplayDateOnLCD
                   _DisplayTimeToLCD
                _Get_DS1307_RTC_Date
                _Get_DS1307_RTC_Time
                            _InitI2C
                           _LCD_Init
                   _MCU_HelloMessage
                           _MCU_Init
                _Set_DS1307_RTC_Date
                _Set_DS1307_RTC_Time
 ---------------------------------------------------------------------------------
 (1) _Set_DS1307_RTC_Time                                  6     3      3    5361
                                              9 COMRAM     6     3      3
          _Write_Bytes_To_DS1307_RTC
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _Set_DS1307_RTC_Date                                  6     3      3    5383
                                              9 COMRAM     6     3      3
          _Write_Bytes_To_DS1307_RTC
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _Write_Bytes_To_DS1307_RTC                            8     5      3     431
                                              1 COMRAM     8     5      3
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCU_HelloMessage                                     2     2      0    5244
                                             15 COMRAM     2     2      0
                          _LCD_Putrs
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     180
                                              3 COMRAM     1     1      0
                   _LCD_WriteCommand
                      _LCD_WriteData
                    _LCD_WriteNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteNibble                                      3     3      0      30
                                              0 COMRAM     3     3      0
                         _LCD_Strobe
 ---------------------------------------------------------------------------------
 (1) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_DS1307_RTC_Time                                  3     1      2     453
                                              8 COMRAM     3     1      2
         _Read_Bytes_From_DS1307_RTC
 ---------------------------------------------------------------------------------
 (1) _Get_DS1307_RTC_Date                                  3     1      2     453
                                              8 COMRAM     3     1      2
         _Read_Bytes_From_DS1307_RTC
 ---------------------------------------------------------------------------------
 (2) _Read_Bytes_From_DS1307_RTC                           7     3      4     453
                                              1 COMRAM     7     3      4
                        _I2C_ReStart
                      _I2C_Read_Byte
                       _I2C_Send_ACK
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Send_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Send_ACK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Byte                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplayTimeToLCD                                     3     1      2   12462
                                             15 COMRAM     3     1      2
                _Get_DS1307_RTC_Time (ARG)
                        _LCD_Putc_xy
                          _LCD_Putrs
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _DisplayDateOnLCD                                     3     1      2   12462
                                             15 COMRAM     3     1      2
                _Get_DS1307_RTC_Date (ARG)
                        _LCD_Putc_xy
                          _LCD_Putrs
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2272
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2276
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Putrs                                           10     5      5    5154
                                              5 COMRAM    10     5      5
                         _LCD_GotoXY
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_Putc_xy                                          3     1      2    2530
                                              8 COMRAM     3     1      2
                         _LCD_GotoXY
                      _LCD_WriteData
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      60
                                              0 COMRAM     3     3      0
                         _LCD_Strobe
 ---------------------------------------------------------------------------------
 (3) _LCD_GotoXY                                           2     1      1     580
                                              3 COMRAM     2     1      1
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCommand                                     3     3      0      90
                                              0 COMRAM     3     3      0
                         _LCD_Strobe
 ---------------------------------------------------------------------------------
 (3) _LCD_Strobe                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayDateOnLCD
     _Get_DS1307_RTC_Date (ARG)
       _Read_Bytes_From_DS1307_RTC
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_ACK
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _LCD_Putc_xy (ARG)
       _LCD_GotoXY
         _LCD_WriteCommand
           _LCD_Strobe
       _LCD_WriteData
         _LCD_Strobe
       ___awdiv (ARG)
       ___awmod (ARG)
     _LCD_Putrs (ARG)
       _LCD_GotoXY
         _LCD_WriteCommand
           _LCD_Strobe
       _LCD_WriteData
         _LCD_Strobe
     ___awdiv (ARG)
     ___awmod (ARG)
   _DisplayTimeToLCD
     _Get_DS1307_RTC_Time (ARG)
       _Read_Bytes_From_DS1307_RTC
         _I2C_ReStart
         _I2C_Read_Byte
         _I2C_Send_ACK
         _I2C_Send_NACK
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Byte
     _LCD_Putc_xy (ARG)
       _LCD_GotoXY
         _LCD_WriteCommand
           _LCD_Strobe
       _LCD_WriteData
         _LCD_Strobe
       ___awdiv (ARG)
       ___awmod (ARG)
     _LCD_Putrs (ARG)
       _LCD_GotoXY
         _LCD_WriteCommand
           _LCD_Strobe
       _LCD_WriteData
         _LCD_Strobe
     ___awdiv (ARG)
     ___awmod (ARG)
   _Get_DS1307_RTC_Date
     _Read_Bytes_From_DS1307_RTC
       _I2C_ReStart
       _I2C_Read_Byte
       _I2C_Send_ACK
       _I2C_Send_NACK
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
   _Get_DS1307_RTC_Time
     _Read_Bytes_From_DS1307_RTC
       _I2C_ReStart
       _I2C_Read_Byte
       _I2C_Send_ACK
       _I2C_Send_NACK
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
   _InitI2C
   _LCD_Init
     _LCD_WriteCommand
       _LCD_Strobe
     _LCD_WriteData
       _LCD_Strobe
     _LCD_WriteNibble
       _LCD_Strobe
   _MCU_HelloMessage
     _LCD_Putrs
       _LCD_GotoXY
         _LCD_WriteCommand
           _LCD_Strobe
       _LCD_WriteData
         _LCD_Strobe
     _LCD_WriteCommand
       _LCD_Strobe
   _MCU_Init
   _Set_DS1307_RTC_Date
     _Write_Bytes_To_DS1307_RTC
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
     ___awdiv
     ___awmod
   _Set_DS1307_RTC_Time
     _Write_Bytes_To_DS1307_RTC
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      19       1       19.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      34        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Aug 16 02:17:45 2020

                        ?_LCD_GotoXY 0004                   __size_of_I2C_Start 000A  
                                 l59 17DE                         ___awdiv@sign 0006  
                        ?_LCD_Strobe 0001                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l103 1D50  
                                l121 1D30                                  l115 1D46  
                                l109 1D5A                                  l133 1CCA  
                                l127 1D24                                  l139 1D3A  
                       __CFG_CPB$OFF 000000                    ??_LCD_WriteNibble 0001  
                                _PEN 007E2A                         __CFG_CPD$OFF 000000  
                                u707 171C                                  _SEN 007E28  
                                u717 1C8A                                  u727 1C58  
                                u737 1B5C                                  u747 1B74  
                                u667 19D8                                  u677 1B0A  
                                u687 16BA                                  u697 16D0  
               __size_of_I2C_ReStart 000A                         ___awmod@sign 0006  
                 I2C_Write_Byte@Byte 0001        LCD_WriteCommand@LCD_PORT_DATA 0002  
                       ?_LCD_Putc_xy 0009                                  wreg 000FE8  
                       __CFG_IESO$ON 000000                    ?_LCD_WriteCommand 0001  
                       __CFG_LVP$OFF 000000              Set_DS1307_RTC_Time@Mode 000F  
            Set_DS1307_RTC_Time@Mins 000B              Set_DS1307_RTC_Time@Secs 000C  
                 ??_LCD_WriteCommand 0001                         __CFG_WDT$OFF 000000  
                               l1000 1B6E                                 l1008 1CD8  
                               l1510 1BF6                                 l1504 1BD8  
                               l1600 183E                                 l1520 1B8C  
                               l1506 1BE2                                 l1514 1C00  
                               l1602 1846                                 l1530 1BBC  
                               l1508 1BEC                                 l1620 187E  
                               l1612 1866                                 l1604 184A  
                               l1550 1A26                                 l1526 1BA6  
                               l1518 1B88                                 l1616 1870  
                               l1640 1938                                 l1632 191E  
                               l1536 19F0                                 l1570 18A8  
                               l1642 1940                                 l1538 19F4  
                               l1644 1944                                 l1652 1962  
                               l1636 192A                                 l1556 1A40  
                               l1750 14CC                                 l1670 16A0  
                               l1662 1688                                 l1576 18D6  
                               l1656 1970                                 l1648 1958  
                               l1664 168C                                 l1840 19AE  
                               l1594 1828                                 l1770 11F6  
                               l1746 148C                                 l1754 14E6  
                               l1588 1818                                 l1780 1296  
                               l1772 1216                                 l1748 14AC  
                               l1668 1692                                 l1782 12B6  
                               l1774 1236                                 l1776 1256  
                               l1768 11D6                                 l1688 17BE  
                               l1778 1276                                 l1786 12D6  
                               l1698 17FA                      LCD_GotoXY@LCD_X 0005  
                    LCD_GotoXY@LCD_Y 0004                                 STR_1 1001  
                               STR_2 1012                                 STR_3 104B  
                               STR_4 104B                                 STR_5 1010  
                               STR_6 1043                                 STR_7 1046  
                               STR_8 1049                                 STR_9 1049  
                               _RCEN 007E2B                                 _RSEN 007E29  
                       __CFG_PWRT$ON 000000                        __CFG_FCMEN$ON 000000  
                               _Temp 0015          ??_Write_Bytes_To_DS1307_RTC 0005  
                               _main 197A                                 fsr2h 000FDA  
                               indf2 000FDF                                 fsr2l 000FD9  
                   __end_of_I2C_Stop 1D4E                                 prodh 000FF4  
                               prodl 000FF3                __size_of_I2C_Send_ACK 000C  
                               start 0000                   __size_of_LCD_Putrs 0082  
                      _LCD_WriteData 1C1C                        __CFG_MCLRE$ON 000000  
                       ___param_bank 000000                      __end_of_InitI2C 1D02  
                   __end_of_LCD_Init 176A             Set_DS1307_RTC_Time@Hours 000A  
                              ?_main 0001                                _ACKEN 007E2C  
                              _ACKDT 007E2D                      __end_of___awdiv 1888  
                              STR_10 1010                                STR_11 1033  
                              STR_12 102B                                STR_13 1027  
                              STR_14 103F                                STR_15 102F  
                              STR_16 103B                                STR_17 1037  
                              STR_18 1023                      __end_of___awmod 197A  
                    ___awdiv@divisor 0003                       __CFG_DEBUG$OFF 000000  
                   __end_of_MCU_Init 1CC4                      ___awdiv@counter 0005  
                              _PORTA 000F80                                _PORTB 000F81  
                              _PORTC 000F82                                _PORTD 000F83  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _SSPIF 007CF3   __end_of_Read_Bytes_From_DS1307_RTC 1A56  
         _Read_Bytes_From_DS1307_RTC 19E8                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT3$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
             __size_of_I2C_Read_Byte 000C                         _I2C_Send_ACK 1D2C  
                  __end_of_I2C_Start 1D58                  __size_of_LCD_GotoXY 0048  
                     __CFG_BOREN$OFF 000000                                tablat 000FF5  
             __size_of_I2C_Send_NACK 000C                                status 000FD8  
                __size_of_LCD_Strobe 000E                       ?_LCD_WriteData 0001  
                    __initialization 1D02                         __end_of_main 19E8  
        __end_of_Get_DS1307_RTC_Date 1ABE          __end_of_Set_DS1307_RTC_Date 15E8  
        __end_of_Get_DS1307_RTC_Time 1804            _Write_Bytes_To_DS1307_RTC 1B80  
        __end_of_Set_DS1307_RTC_Time 16B4                               ??_main 0013  
                      __activetblptr 000003                    __end_of_LCD_Putrs 190A  
                  ?_MCU_HelloMessage 0001                               _ADCON1 000FC1  
                   ___awdiv@dividend 0001                   ??_MCU_HelloMessage 0010  
                             _SSPADD 000FC8                               _TRISC3 007CA3  
                             _TRISC4 007CA4                               _SSPBUF 000FC9  
          __size_of_DisplayDateOnLCD 02BE                            ??_InitI2C 0001  
                     __CFG_XINST$OFF 000000                        _I2C_Read_Byte 1D38  
                          ??___awdiv 0005                            ??___awmod 0005  
                   ___awdiv@quotient 0007                      ___awmod@divisor 0003  
                      _I2C_Send_NACK 1D20                      ___awmod@counter 0005  
                          ?_I2C_Stop 0001                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                 __size_of_LCD_Putc_xy 0014  
                         __accesstop 0080              __end_of__initialization 1D0C  
                          ?_LCD_Init 0001                      ??_LCD_WriteData 0001  
                      ___rparam_used 000001  Read_Bytes_From_DS1307_RTC@NoOfBytes 0004  
                          ?_MCU_Init 0001            __size_of_DisplayTimeToLCD 01F6  
                     ?_I2C_Read_Byte 0001                      _LCD_WriteNibble 1C5E  
                     __pcstackCOMRAM 0001                         ??_LCD_GotoXY 0005  
                     ?_I2C_Send_NACK 0001                         ??_LCD_Strobe 0001  
                         ??_I2C_Stop 0001           LCD_WriteData@LCD_PORT_DATA 0003  
                 __end_of_LCD_GotoXY 1C1C                           ??_LCD_Init 0004  
                 __end_of_LCD_Strobe 1D20                           ??_MCU_Init 0001  
          __size_of_LCD_WriteCommand 0060              __size_of_I2C_Write_Byte 0018  
                            _ACKSTAT 007E2E                        ??_I2C_ReStart 0001  
        ?_Read_Bytes_From_DS1307_RTC 0002   __size_of_Write_Bytes_To_DS1307_RTC 0054  
                            _SSPCON1 000FC6                              _SSPSTAT 000FC7  
              LCD_WriteData@LCD_DATA 0002              __end_of_LCD_WriteNibble 1C96  
                   _DisplayDateOnLCD 104E                              _InitI2C 1CF0  
                          _I2C_Start 1D4E                      ??_I2C_Read_Byte 0001  
                            __Hparam 0000                              __Lparam 0000  
                    ??_I2C_Send_NACK 0001                              ___awdiv 1804  
                            ___awmod 190A                         __psmallconst 1000  
                            __pcinit 1D02                              __ramtop 1000  
                            __ptext0 197A                              __ptext1 15E8  
                            __ptext2 1502                              __ptext3 1B80  
                            __ptext4 1C96                              __ptext5 1ABE  
                            __ptext6 16B4                              __ptext7 1C5E  
                            __ptext8 1CF0                              __ptext9 176A  
                   ___awmod@dividend 0001                  __end_of_I2C_ReStart 1D62  
                          _LCD_Putrs 1888           DisplayDateOnLCD@pDateArray 0010  
  __end_of_Write_Bytes_To_DS1307_RTC 1BD4                 end_of_initialization 1D0C  
                         ?_I2C_Start 0001                     _DisplayTimeToLCD 130C  
          __size_of_MCU_HelloMessage 0062                            _PORTDbits 000F83  
            LCD_Putrs@LCD_WIDE_COUNT 000E         __size_of_Get_DS1307_RTC_Date 0068  
       __size_of_Set_DS1307_RTC_Date 00E6         __size_of_Get_DS1307_RTC_Time 009A  
       __size_of_Set_DS1307_RTC_Time 00CC           Write_Bytes_To_DS1307_RTC@i 0008  
                  __size_of_I2C_Stop 000A                           ?_LCD_Putrs 0006  
  Read_Bytes_From_DS1307_RTC@Address 0006                     ?_LCD_WriteNibble 0001  
   Write_Bytes_To_DS1307_RTC@Address 0007                    __size_of_LCD_Init 00B6  
                   _LCD_WriteCommand 1B20  __size_of_Read_Bytes_From_DS1307_RTC 006E  
                  __size_of_MCU_Init 002E                       _I2C_Write_Byte 1CC4  
                        _I2C_ReStart 1D58                        ??_LCD_Putc_xy 000B  
                start_initialization 1D02           LCD_WriteNibble@LCD_COMMAND 0002  
                LCD_Putc_xy@LCD_DATA 000B                     __CFG_OSC$INTIO67 000000  
                        ??_I2C_Start 0001                __end_of_LCD_WriteData 1C5E  
             __end_of_I2C_Write_Byte 1CDC          Read_Bytes_From_DS1307_RTC@i 0007  
           __end_of_DisplayDateOnLCD 130C                            _pRTCArray 0016  
                        __pbssCOMRAM 0015       Write_Bytes_To_DS1307_RTC@pData 0002  
                      ?_I2C_Send_ACK 0001                          ??_LCD_Putrs 000B  
                __end_of_LCD_Putc_xy 1CF0                             ?_InitI2C 0001  
                   _MCU_HelloMessage 1ABE                      ?_I2C_Write_Byte 0001  
         DisplayTimeToLCD@pTimeArray 0010                             ?___awdiv 0001  
                           ?___awmod 0001                          __smallconst 1000  
        LCD_WriteCommand@LCD_COMMAND 0003                             _I2C_Stop 1D44  
           __end_of_DisplayTimeToLCD 1502                       ??_I2C_Send_ACK 0001  
                           _LCD_Init 16B4                             _MCU_Init 1C96  
                _Get_DS1307_RTC_Date 1A56                  _Set_DS1307_RTC_Date 1502  
                _Get_DS1307_RTC_Time 176A                __end_of_I2C_Read_Byte 1D44  
                _Set_DS1307_RTC_Time 15E8      Read_Bytes_From_DS1307_RTC@pData 0002  
              __end_of_I2C_Send_NACK 1D2C                       LCD_Putrs@LCD_X 0009  
                     LCD_Putrs@LCD_Y 000A                 ?_Get_DS1307_RTC_Date 0009  
                        _LCD_Putc_xy 1CDC                 ?_Set_DS1307_RTC_Date 000A  
           __end_of_LCD_WriteCommand 1B80                 ?_Get_DS1307_RTC_Time 0009  
               ?_Set_DS1307_RTC_Time 000A           ?_Write_Bytes_To_DS1307_RTC 0002  
                   __size_of_InitI2C 0012                             __Hrparam 0000  
                           __Lrparam 0000                     __size_of___awdiv 0084  
                   __size_of___awmod 0070                         ?_I2C_ReStart 0001  
              ??_Get_DS1307_RTC_Date 000B                ??_Set_DS1307_RTC_Date 000D  
              ??_Get_DS1307_RTC_Time 000B                ??_Set_DS1307_RTC_Time 000D  
                           __ptext10 1A56                             __ptext11 19E8  
                           __ptext20 104E                             __ptext12 1CC4  
                           __ptext21 190A                             __ptext13 1D44  
                           __ptext22 1804                             __ptext14 1D4E  
                           __ptext23 1888                             __ptext15 1D20  
                           __ptext24 1CDC                             __ptext16 1D2C  
                           __ptext25 1C1C                             __ptext17 1D38  
                           __ptext26 1BD4                             __ptext18 1D58  
                           __ptext27 1B20                             __ptext19 130C  
                           __ptext28 1D12                        __size_of_main 006E  
           __size_of_LCD_WriteNibble 0038                 __end_of_I2C_Send_ACK 1D38  
                         _LCD_GotoXY 1BD4                           _LCD_Strobe 1D12  
                  ?_DisplayDateOnLCD 0010                          _OSCTUNEbits 000F9B  
                 ??_DisplayDateOnLCD 0012             __end_of_MCU_HelloMessage 1B20  
       ??_Read_Bytes_From_DS1307_RTC 0006   Write_Bytes_To_DS1307_RTC@NoOfBytes 0004  
                   ??_I2C_Write_Byte 0001             Set_DS1307_RTC_Date@Month 000A  
                         _OSCCONbits 000FD3         LCD_WriteNibble@LCD_PORT_DATA 0003  
                   LCD_Putc_xy@LCD_X 0009                     LCD_Putc_xy@LCD_Y 000A  
            Set_DS1307_RTC_Date@Date 000F              Set_DS1307_RTC_Date@Year 000B  
             __size_of_LCD_WriteData 0042                    ?_DisplayTimeToLCD 0010  
                LCD_Putrs@LCD_STRING 0006                   ??_DisplayTimeToLCD 0012  
             Set_DS1307_RTC_Date@Day 000C                   LCD_Putrs@LCD_INDEX 000F  
