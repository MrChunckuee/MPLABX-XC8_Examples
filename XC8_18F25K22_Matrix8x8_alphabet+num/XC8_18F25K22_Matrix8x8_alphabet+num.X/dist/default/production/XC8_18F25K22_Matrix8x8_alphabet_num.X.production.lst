

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Jun 24 01:02:10 2020

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.42
    16                           ; Generated 13/04/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F25K22 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	mediumconst
    51  007DBE                     __pmediumconst:
    52                           	opt stack 0
    53  007DBE  00                 	db	0
    54  007DBF                     _Alphabets:
    55                           	opt stack 0
    56  007DBF  0000               	dw	0
    57  007DC1  003F               	dw	63
    58  007DC3  007F               	dw	127
    59  007DC5  00E4               	dw	228
    60  007DC7  00E4               	dw	228
    61  007DC9  007F               	dw	127
    62  007DCB  003F               	dw	63
    63  007DCD  0000               	dw	0
    64  007DCF  0000               	dw	0
    65  007DD1  00FF               	dw	255
    66  007DD3  00FF               	dw	255
    67  007DD5  0099               	dw	153
    68  007DD7  0099               	dw	153
    69  007DD9  00FF               	dw	255
    70  007DDB  0066               	dw	102
    71  007DDD  0000               	dw	0
    72  007DDF  0000               	dw	0
    73  007DE1  003C               	dw	60
    74  007DE3  007E               	dw	126
    75  007DE5  00C3               	dw	195
    76  007DE7  0081               	dw	129
    77  007DE9  00C3               	dw	195
    78  007DEB  0042               	dw	66
    79  007DED  0000               	dw	0
    80  007DEF  0000               	dw	0
    81  007DF1  00FF               	dw	255
    82  007DF3  00FF               	dw	255
    83  007DF5  00C3               	dw	195
    84  007DF7  00C3               	dw	195
    85  007DF9  007E               	dw	126
    86  007DFB  003C               	dw	60
    87  007DFD  0000               	dw	0
    88  007DFF  0000               	dw	0
    89  007E01  00FF               	dw	255
    90  007E03  00FF               	dw	255
    91  007E05  0099               	dw	153
    92  007E07  0099               	dw	153
    93  007E09  0099               	dw	153
    94  007E0B  0081               	dw	129
    95  007E0D  0000               	dw	0
    96  007E0F  0000               	dw	0
    97  007E11  00FF               	dw	255
    98  007E13  00FF               	dw	255
    99  007E15  00C8               	dw	200
   100  007E17  00C8               	dw	200
   101  007E19  00C8               	dw	200
   102  007E1B  00C0               	dw	192
   103  007E1D  0000               	dw	0
   104  007E1F  0000               	dw	0
   105  007E21  007E               	dw	126
   106  007E23  00FF               	dw	255
   107  007E25  0081               	dw	129
   108  007E27  0085               	dw	133
   109  007E29  00C7               	dw	199
   110  007E2B  0046               	dw	70
   111  007E2D  0000               	dw	0
   112  007E2F  0000               	dw	0
   113  007E31  00FF               	dw	255
   114  007E33  00FF               	dw	255
   115  007E35  0018               	dw	24
   116  007E37  0018               	dw	24
   117  007E39  00FF               	dw	255
   118  007E3B  00FF               	dw	255
   119  007E3D  0000               	dw	0
   120  007E3F  0000               	dw	0
   121  007E41  00C3               	dw	195
   122  007E43  00C3               	dw	195
   123  007E45  00FF               	dw	255
   124  007E47  00FF               	dw	255
   125  007E49  00C3               	dw	195
   126  007E4B  00C3               	dw	195
   127  007E4D  0000               	dw	0
   128  007E4F  0000               	dw	0
   129  007E51  0006               	dw	6
   130  007E53  00C6               	dw	198
   131  007E55  00C3               	dw	195
   132  007E57  00FF               	dw	255
   133  007E59  00FE               	dw	254
   134  007E5B  00C0               	dw	192
   135  007E5D  0000               	dw	0
   136  007E5F  0000               	dw	0
   137  007E61  00FF               	dw	255
   138  007E63  00FF               	dw	255
   139  007E65  0038               	dw	56
   140  007E67  006C               	dw	108
   141  007E69  00C6               	dw	198
   142  007E6B  0083               	dw	131
   143  007E6D  0000               	dw	0
   144  007E6F  0000               	dw	0
   145  007E71  00FF               	dw	255
   146  007E73  00FF               	dw	255
   147  007E75  0003               	dw	3
   148  007E77  0003               	dw	3
   149  007E79  0003               	dw	3
   150  007E7B  0003               	dw	3
   151  007E7D  0000               	dw	0
   152  007E7F  00FF               	dw	255
   153  007E81  00FF               	dw	255
   154  007E83  0060               	dw	96
   155  007E85  0030               	dw	48
   156  007E87  0060               	dw	96
   157  007E89  00FF               	dw	255
   158  007E8B  00FF               	dw	255
   159  007E8D  0000               	dw	0
   160  007E8F  00FF               	dw	255
   161  007E91  00FF               	dw	255
   162  007E93  0060               	dw	96
   163  007E95  0030               	dw	48
   164  007E97  0018               	dw	24
   165  007E99  00FF               	dw	255
   166  007E9B  00FF               	dw	255
   167  007E9D  0000               	dw	0
   168  007E9F  0000               	dw	0
   169  007EA1  007E               	dw	126
   170  007EA3  00FF               	dw	255
   171  007EA5  00C3               	dw	195
   172  007EA7  00C3               	dw	195
   173  007EA9  00FF               	dw	255
   174  007EAB  007E               	dw	126
   175  007EAD  0000               	dw	0
   176  007EAF  0000               	dw	0
   177  007EB1  00FF               	dw	255
   178  007EB3  00FF               	dw	255
   179  007EB5  0088               	dw	136
   180  007EB7  0088               	dw	136
   181  007EB9  00F8               	dw	248
   182  007EBB  0070               	dw	112
   183  007EBD  0000               	dw	0
   184  007EBF  0000               	dw	0
   185  007EC1  007C               	dw	124
   186  007EC3  00FE               	dw	254
   187  007EC5  0082               	dw	130
   188  007EC7  0086               	dw	134
   189  007EC9  00FF               	dw	255
   190  007ECB  007D               	dw	125
   191  007ECD  0000               	dw	0
   192  007ECF  0000               	dw	0
   193  007ED1  00FF               	dw	255
   194  007ED3  00FF               	dw	255
   195  007ED5  00D8               	dw	216
   196  007ED7  00DC               	dw	220
   197  007ED9  00F7               	dw	247
   198  007EDB  0063               	dw	99
   199  007EDD  0000               	dw	0
   200  007EDF  0000               	dw	0
   201  007EE1  0072               	dw	114
   202  007EE3  00FB               	dw	251
   203  007EE5  0099               	dw	153
   204  007EE7  0099               	dw	153
   205  007EE9  00DF               	dw	223
   206  007EEB  004E               	dw	78
   207  007EED  0000               	dw	0
   208  007EEF  0000               	dw	0
   209  007EF1  00C0               	dw	192
   210  007EF3  00C0               	dw	192
   211  007EF5  00FF               	dw	255
   212  007EF7  00FF               	dw	255
   213  007EF9  00C0               	dw	192
   214  007EFB  00C0               	dw	192
   215  007EFD  0000               	dw	0
   216  007EFF  0000               	dw	0
   217  007F01  00FE               	dw	254
   218  007F03  00FF               	dw	255
   219  007F05  0003               	dw	3
   220  007F07  0003               	dw	3
   221  007F09  00FF               	dw	255
   222  007F0B  00FE               	dw	254
   223  007F0D  0000               	dw	0
   224  007F0F  0000               	dw	0
   225  007F11  00FC               	dw	252
   226  007F13  00FE               	dw	254
   227  007F15  0003               	dw	3
   228  007F17  0003               	dw	3
   229  007F19  00FE               	dw	254
   230  007F1B  00FC               	dw	252
   231  007F1D  0000               	dw	0
   232  007F1F  00FF               	dw	255
   233  007F21  00FF               	dw	255
   234  007F23  0006               	dw	6
   235  007F25  000C               	dw	12
   236  007F27  0006               	dw	6
   237  007F29  00FF               	dw	255
   238  007F2B  00FF               	dw	255
   239  007F2D  0000               	dw	0
   240  007F2F  00E7               	dw	231
   241  007F31  00F7               	dw	247
   242  007F33  003C               	dw	60
   243  007F35  0018               	dw	24
   244  007F37  003C               	dw	60
   245  007F39  00EF               	dw	239
   246  007F3B  00E7               	dw	231
   247  007F3D  0000               	dw	0
   248  007F3F  0000               	dw	0
   249  007F41  00F0               	dw	240
   250  007F43  00F8               	dw	248
   251  007F45  000F               	dw	15
   252  007F47  000F               	dw	15
   253  007F49  00F8               	dw	248
   254  007F4B  00F0               	dw	240
   255  007F4D  0000               	dw	0
   256  007F4F  0000               	dw	0
   257  007F51  00C7               	dw	199
   258  007F53  00CF               	dw	207
   259  007F55  00DB               	dw	219
   260  007F57  00DB               	dw	219
   261  007F59  00F3               	dw	243
   262  007F5B  00E3               	dw	227
   263  007F5D  0000               	dw	0
   264  007F5F                     __end_of_Alphabets:
   265                           	opt stack 0
   266  007F5F                     _Numbers:
   267                           	opt stack 0
   268  007F5F  0000               	dw	0
   269  007F61  007E               	dw	126
   270  007F63  00FF               	dw	255
   271  007F65  00CB               	dw	203
   272  007F67  00D3               	dw	211
   273  007F69  00FF               	dw	255
   274  007F6B  007E               	dw	126
   275  007F6D  0000               	dw	0
   276  007F6F  0000               	dw	0
   277  007F71  0001               	dw	1
   278  007F73  0061               	dw	97
   279  007F75  00FF               	dw	255
   280  007F77  00FF               	dw	255
   281  007F79  0001               	dw	1
   282  007F7B  0001               	dw	1
   283  007F7D  0000               	dw	0
   284  007F7F  0000               	dw	0
   285  007F81  0066               	dw	102
   286  007F83  00CF               	dw	207
   287  007F85  00CB               	dw	203
   288  007F87  00D3               	dw	211
   289  007F89  00F3               	dw	243
   290  007F8B  0062               	dw	98
   291  007F8D  0000               	dw	0
   292  007F8F  0000               	dw	0
   293  007F91  0042               	dw	66
   294  007F93  00C3               	dw	195
   295  007F95  0099               	dw	153
   296  007F97  0099               	dw	153
   297  007F99  00FF               	dw	255
   298  007F9B  006E               	dw	110
   299  007F9D  0000               	dw	0
   300  007F9F  0000               	dw	0
   301  007FA1  001C               	dw	28
   302  007FA3  002C               	dw	44
   303  007FA5  004C               	dw	76
   304  007FA7  00FF               	dw	255
   305  007FA9  00FF               	dw	255
   306  007FAB  000C               	dw	12
   307  007FAD  0000               	dw	0
   308  007FAF  0000               	dw	0
   309  007FB1  0072               	dw	114
   310  007FB3  00F3               	dw	243
   311  007FB5  0091               	dw	145
   312  007FB7  0091               	dw	145
   313  007FB9  009F               	dw	159
   314  007FBB  000E               	dw	14
   315  007FBD  0000               	dw	0
   316  007FBF  0000               	dw	0
   317  007FC1  007E               	dw	126
   318  007FC3  00FF               	dw	255
   319  007FC5  0091               	dw	145
   320  007FC7  0091               	dw	145
   321  007FC9  009F               	dw	159
   322  007FCB  004E               	dw	78
   323  007FCD  0000               	dw	0
   324  007FCF  0000               	dw	0
   325  007FD1  00C0               	dw	192
   326  007FD3  00C0               	dw	192
   327  007FD5  008F               	dw	143
   328  007FD7  009F               	dw	159
   329  007FD9  00F0               	dw	240
   330  007FDB  00E0               	dw	224
   331  007FDD  0000               	dw	0
   332  007FDF  0000               	dw	0
   333  007FE1  006E               	dw	110
   334  007FE3  00FF               	dw	255
   335  007FE5  0091               	dw	145
   336  007FE7  0091               	dw	145
   337  007FE9  00FF               	dw	255
   338  007FEB  006E               	dw	110
   339  007FED  0000               	dw	0
   340  007FEF  0000               	dw	0
   341  007FF1  0070               	dw	112
   342  007FF3  00F8               	dw	248
   343  007FF5  0088               	dw	136
   344  007FF7  0088               	dw	136
   345  007FF9  00FF               	dw	255
   346  007FFB  007F               	dw	127
   347  007FFD  0000               	dw	0
   348  007FFF                     __end_of_Numbers:
   349                           	opt stack 0
   350  007FFF  00                 	db	0	; dummy byte at the end
   351  0000                     
   352                           	psect	nvCOMRAM
   353  000007                     __pnvCOMRAM:
   354                           	opt stack 0
   355  000007                     _num:
   356                           	opt stack 0
   357  000007                     	ds	2
   358  0000                     _ANSELC	set	3898
   359  0000                     _ANSELB	set	3897
   360  0000                     _ANSELA	set	3896
   361  0000                     _TRISC	set	3988
   362  0000                     _TRISB	set	3987
   363  0000                     _OSCCONbits	set	4051
   364  0000                     _PORTC	set	3970
   365  0000                     _PORTB	set	3969
   366                           
   367                           ; #config settings
   368  0000                     
   369                           	psect	cinit
   370  007BE4                     __pcinit:
   371                           	opt stack 0
   372  007BE4                     start_initialization:
   373                           	opt stack 0
   374  007BE4                     __initialization:
   375                           	opt stack 0
   376                           
   377                           ; Clear objects allocated to COMRAM (6 bytes)
   378  007BE4  6A06               	clrf	(__pbssCOMRAM+5)& (0+255),c
   379  007BE6  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
   380  007BE8  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
   381  007BEA  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   382  007BEC  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   383  007BEE  6A01               	clrf	__pbssCOMRAM& (0+255),c
   384  007BF0                     end_of_initialization:
   385                           	opt stack 0
   386  007BF0                     __end_of__initialization:
   387                           	opt stack 0
   388  007BF0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   389  007BF2  6EF8               	movwf	tblptru,c
   390  007BF4  0100               	movlb	0
   391  007BF6  EF12  F03E         	goto	_main	;jump to C main() function
   392                           tblptru	equ	0xFF8
   393                           
   394                           	psect	bssCOMRAM
   395  000001                     __pbssCOMRAM:
   396                           	opt stack 0
   397  000001                     _repeat:
   398                           	opt stack 0
   399  000001                     	ds	2
   400  000003                     _column:
   401                           	opt stack 0
   402  000003                     	ds	2
   403  000005                     _count:
   404                           	opt stack 0
   405  000005                     	ds	2
   406                           tblptru	equ	0xFF8
   407                           
   408                           	psect	cstackCOMRAM
   409  000009                     __pcstackCOMRAM:
   410                           	opt stack 0
   411  000009                     ??_main:
   412                           
   413                           ; 1 bytes @ 0x0
   414  000009                     	ds	2
   415                           tblptru	equ	0xFF8
   416                           
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 71 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   436 ;;      Params:         0       0       0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0
   438 ;;      Temps:          2       0       0       0       0       0       0
   439 ;;      Totals:         2       0       0       0       0       0       0
   440 ;;Total ram usage:        2 bytes
   441 ;; Hardware stack levels required when called:    1
   442 ;; This function calls:
   443 ;;		_MCU_Init
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text0
   450  007C24                     __ptext0:
   451                           	opt stack 0
   452  007C24                     _main:
   453                           	opt stack 30
   454                           
   455                           ;main.c: 72: MCU_Init();
   456                           
   457                           ; BSR set to: 15
   458                           ;incstack = 0
   459  007C24  ECFD  F03D         	call	_MCU_Init	;wreg free
   460  007C28                     l685:
   461                           
   462                           ;main.c: 75: for (num=0; num<26; num++) {
   463  007C28  0E00               	movlw	0
   464  007C2A  6E08               	movwf	_num+1,c
   465  007C2C  0E00               	movlw	0
   466  007C2E  6E07               	movwf	_num,c
   467  007C30                     l687:
   468  007C30  5008               	movf	_num+1,w,c
   469  007C32  E15E               	bnz	l721
   470  007C34  0E1A               	movlw	26
   471  007C36  5C07               	subwf	_num,w,c
   472  007C38  B0D8               	btfsc	status,0,c
   473  007C3A  D05A               	goto	l721
   474                           
   475                           ;main.c: 76: for (repeat=0; repeat<100; repeat++){
   476  007C3C  0E00               	movlw	0
   477  007C3E  6E02               	movwf	_repeat+1,c
   478  007C40  0E00               	movlw	0
   479  007C42  6E01               	movwf	_repeat,c
   480  007C44                     l693:
   481  007C44  5002               	movf	_repeat+1,w,c
   482  007C46  E151               	bnz	l717
   483  007C48  0E64               	movlw	100
   484  007C4A  5C01               	subwf	_repeat,w,c
   485  007C4C  B0D8               	btfsc	status,0,c
   486  007C4E  D04D               	goto	l717
   487                           
   488                           ;main.c: 77: column = 1;
   489  007C50  0E00               	movlw	0
   490  007C52  6E04               	movwf	_column+1,c
   491  007C54  0E01               	movlw	1
   492  007C56  6E03               	movwf	_column,c
   493                           
   494                           ;main.c: 78: for(count=num*8; count<(num*8+9); count++){
   495  007C58  C007  F009         	movff	_num,??_main
   496  007C5C  C008  F00A         	movff	_num+1,??_main+1
   497  007C60  90D8               	bcf	status,0,c
   498  007C62  3609               	rlcf	??_main,f,c
   499  007C64  360A               	rlcf	??_main+1,f,c
   500  007C66  90D8               	bcf	status,0,c
   501  007C68  3609               	rlcf	??_main,f,c
   502  007C6A  360A               	rlcf	??_main+1,f,c
   503  007C6C  90D8               	bcf	status,0,c
   504  007C6E  3609               	rlcf	??_main,f,c
   505  007C70  360A               	rlcf	??_main+1,f,c
   506  007C72  C009  F005         	movff	??_main,_count
   507  007C76  C00A  F006         	movff	??_main+1,_count+1
   508  007C7A  D01D               	goto	l711
   509  007C7C                     l701:
   510                           
   511                           ;main.c: 79: PORTB = Alphabets[count];
   512  007C7C  90D8               	bcf	status,0,c
   513  007C7E  3405               	rlcf	_count,w,c
   514  007C80  6EF6               	movwf	tblptrl,c
   515  007C82  3406               	rlcf	_count+1,w,c
   516  007C84  6EF7               	movwf	tblptrh,c
   517  007C86  0EBF               	movlw	low _Alphabets
   518  007C88  26F6               	addwf	tblptrl,f,c
   519  007C8A  0E7D               	movlw	high _Alphabets
   520  007C8C  22F7               	addwfc	tblptrh,f,c
   521  007C8E                     	if	0	;There are less than 3 active tblptr bytes
   522  007C8E                     	endif
   523  007C8E  0008               	tblrd		*
   524  007C90  CFF5 FF81          	movff	tablat,3969	;volatile
   525                           
   526                           ;main.c: 80: PORTC = column;
   527  007C94  C003  FF82         	movff	_column,3970	;volatile
   528                           
   529                           ;main.c: 81: _delay((unsigned long)((1)*(16000000/4000.0)));
   530  007C98  0E06               	movlw	6
   531  007C9A  6E09               	movwf	??_main& (0+255),c
   532  007C9C  0E30               	movlw	48
   533  007C9E                     u117:
   534  007C9E  2EE8               	decfsz	wreg,f,c
   535  007CA0  D7FE               	bra	u117
   536  007CA2  2E09               	decfsz	??_main& (0+255),f,c
   537  007CA4  D7FC               	bra	u117
   538  007CA6  D000               	nop2	
   539                           
   540                           ;main.c: 82: column = column<<1;
   541  007CA8  90D8               	bcf	status,0,c
   542  007CAA  3403               	rlcf	_column,w,c
   543  007CAC  6E03               	movwf	_column,c
   544  007CAE  3404               	rlcf	_column+1,w,c
   545  007CB0  6E04               	movwf	_column+1,c
   546  007CB2  4A05               	infsnz	_count,f,c
   547  007CB4  2A06               	incf	_count+1,f,c
   548  007CB6                     l711:
   549  007CB6  C007  F009         	movff	_num,??_main
   550  007CBA  C008  F00A         	movff	_num+1,??_main+1
   551  007CBE  90D8               	bcf	status,0,c
   552  007CC0  3609               	rlcf	??_main,f,c
   553  007CC2  360A               	rlcf	??_main+1,f,c
   554  007CC4  90D8               	bcf	status,0,c
   555  007CC6  3609               	rlcf	??_main,f,c
   556  007CC8  360A               	rlcf	??_main+1,f,c
   557  007CCA  90D8               	bcf	status,0,c
   558  007CCC  3609               	rlcf	??_main,f,c
   559  007CCE  360A               	rlcf	??_main+1,f,c
   560  007CD0  0E09               	movlw	9
   561  007CD2  2609               	addwf	??_main,f,c
   562  007CD4  0E00               	movlw	0
   563  007CD6  220A               	addwfc	??_main+1,f,c
   564  007CD8  5009               	movf	??_main,w,c
   565  007CDA  5C05               	subwf	_count,w,c
   566  007CDC  500A               	movf	??_main+1,w,c
   567  007CDE  5806               	subwfb	_count+1,w,c
   568  007CE0  A0D8               	btfss	status,0,c
   569  007CE2  D7CC               	goto	l701
   570  007CE4  4A01               	infsnz	_repeat,f,c
   571  007CE6  2A02               	incf	_repeat+1,f,c
   572  007CE8  D7AD               	goto	l693
   573  007CEA                     l717:
   574  007CEA  4A07               	infsnz	_num,f,c
   575  007CEC  2A08               	incf	_num+1,f,c
   576  007CEE  D7A0               	goto	l687
   577  007CF0                     l721:
   578                           
   579                           ;main.c: 83: }
   580                           ;main.c: 84: }
   581                           ;main.c: 85: }
   582                           ;main.c: 87: for (num=0; num<10; num++) {
   583  007CF0  0E00               	movlw	0
   584  007CF2  6E08               	movwf	_num+1,c
   585  007CF4  0E00               	movlw	0
   586  007CF6  6E07               	movwf	_num,c
   587  007CF8  5008               	movf	_num+1,w,c
   588  007CFA  E196               	bnz	l685
   589  007CFC  0E0A               	movlw	10
   590  007CFE  5C07               	subwf	_num,w,c
   591  007D00  B0D8               	btfsc	status,0,c
   592  007D02  D792               	goto	l685
   593                           
   594                           ;main.c: 88: for (repeat=0; repeat<100; repeat++){
   595  007D04  0E00               	movlw	0
   596  007D06  6E02               	movwf	_repeat+1,c
   597  007D08  0E00               	movlw	0
   598  007D0A  6E01               	movwf	_repeat,c
   599  007D0C                     l729:
   600  007D0C  5002               	movf	_repeat+1,w,c
   601  007D0E  E151               	bnz	l753
   602  007D10  0E64               	movlw	100
   603  007D12  5C01               	subwf	_repeat,w,c
   604  007D14  B0D8               	btfsc	status,0,c
   605  007D16  D04D               	goto	l753
   606                           
   607                           ;main.c: 89: column = 1;
   608  007D18  0E00               	movlw	0
   609  007D1A  6E04               	movwf	_column+1,c
   610  007D1C  0E01               	movlw	1
   611  007D1E  6E03               	movwf	_column,c
   612                           
   613                           ;main.c: 90: for(count=num*8; count<(num*8+9); count++){
   614  007D20  C007  F009         	movff	_num,??_main
   615  007D24  C008  F00A         	movff	_num+1,??_main+1
   616  007D28  90D8               	bcf	status,0,c
   617  007D2A  3609               	rlcf	??_main,f,c
   618  007D2C  360A               	rlcf	??_main+1,f,c
   619  007D2E  90D8               	bcf	status,0,c
   620  007D30  3609               	rlcf	??_main,f,c
   621  007D32  360A               	rlcf	??_main+1,f,c
   622  007D34  90D8               	bcf	status,0,c
   623  007D36  3609               	rlcf	??_main,f,c
   624  007D38  360A               	rlcf	??_main+1,f,c
   625  007D3A  C009  F005         	movff	??_main,_count
   626  007D3E  C00A  F006         	movff	??_main+1,_count+1
   627  007D42  D01D               	goto	l747
   628  007D44                     l737:
   629                           
   630                           ;main.c: 91: PORTB = Numbers[count];
   631  007D44  90D8               	bcf	status,0,c
   632  007D46  3405               	rlcf	_count,w,c
   633  007D48  6EF6               	movwf	tblptrl,c
   634  007D4A  3406               	rlcf	_count+1,w,c
   635  007D4C  6EF7               	movwf	tblptrh,c
   636  007D4E  0E5F               	movlw	low _Numbers
   637  007D50  26F6               	addwf	tblptrl,f,c
   638  007D52  0E7F               	movlw	high _Numbers
   639  007D54  22F7               	addwfc	tblptrh,f,c
   640  007D56                     	if	0	;There are less than 3 active tblptr bytes
   641  007D56                     	endif
   642  007D56  0008               	tblrd		*
   643  007D58  CFF5 FF81          	movff	tablat,3969	;volatile
   644                           
   645                           ;main.c: 92: PORTC = column;
   646  007D5C  C003  FF82         	movff	_column,3970	;volatile
   647                           
   648                           ;main.c: 93: _delay((unsigned long)((1)*(16000000/4000.0)));
   649  007D60  0E06               	movlw	6
   650  007D62  6E09               	movwf	??_main& (0+255),c
   651  007D64  0E30               	movlw	48
   652  007D66                     u127:
   653  007D66  2EE8               	decfsz	wreg,f,c
   654  007D68  D7FE               	bra	u127
   655  007D6A  2E09               	decfsz	??_main& (0+255),f,c
   656  007D6C  D7FC               	bra	u127
   657  007D6E  D000               	nop2	
   658                           
   659                           ;main.c: 94: column = column<<1;
   660  007D70  90D8               	bcf	status,0,c
   661  007D72  3403               	rlcf	_column,w,c
   662  007D74  6E03               	movwf	_column,c
   663  007D76  3404               	rlcf	_column+1,w,c
   664  007D78  6E04               	movwf	_column+1,c
   665  007D7A  4A05               	infsnz	_count,f,c
   666  007D7C  2A06               	incf	_count+1,f,c
   667  007D7E                     l747:
   668  007D7E  C007  F009         	movff	_num,??_main
   669  007D82  C008  F00A         	movff	_num+1,??_main+1
   670  007D86  90D8               	bcf	status,0,c
   671  007D88  3609               	rlcf	??_main,f,c
   672  007D8A  360A               	rlcf	??_main+1,f,c
   673  007D8C  90D8               	bcf	status,0,c
   674  007D8E  3609               	rlcf	??_main,f,c
   675  007D90  360A               	rlcf	??_main+1,f,c
   676  007D92  90D8               	bcf	status,0,c
   677  007D94  3609               	rlcf	??_main,f,c
   678  007D96  360A               	rlcf	??_main+1,f,c
   679  007D98  0E09               	movlw	9
   680  007D9A  2609               	addwf	??_main,f,c
   681  007D9C  0E00               	movlw	0
   682  007D9E  220A               	addwfc	??_main+1,f,c
   683  007DA0  5009               	movf	??_main,w,c
   684  007DA2  5C05               	subwf	_count,w,c
   685  007DA4  500A               	movf	??_main+1,w,c
   686  007DA6  5806               	subwfb	_count+1,w,c
   687  007DA8  A0D8               	btfss	status,0,c
   688  007DAA  D7CC               	goto	l737
   689  007DAC  4A01               	infsnz	_repeat,f,c
   690  007DAE  2A02               	incf	_repeat+1,f,c
   691  007DB0  D7AD               	goto	l729
   692  007DB2                     l753:
   693  007DB2  4A07               	infsnz	_num,f,c
   694  007DB4  2A08               	incf	_num+1,f,c
   695  007DB6  5008               	movf	_num+1,w,c
   696  007DB8  E101               	bnz	u100
   697  007DBA  D7A0               	goto	L1
   698  007DBC                     u100:
   699  007DBC  D735               	goto	l685
   700  007DBE                     __end_of_main:
   701                           	opt stack 0
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           wreg	equ	0xFE8
   707                           status	equ	0xFD8
   708                           
   709 ;; *************** function _MCU_Init *****************
   710 ;; Defined at:
   711 ;;		line 101 in file "main.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   725 ;;      Params:         0       0       0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0
   728 ;;      Totals:         0       0       0       0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text1
   739  007BFA                     __ptext1:
   740                           	opt stack 0
   741  007BFA                     _MCU_Init:
   742                           	opt stack 30
   743                           
   744                           ;main.c: 103: ANSELA = 0;
   745                           
   746                           ;incstack = 0
   747  007BFA  0E00               	movlw	0
   748  007BFC  010F               	movlb	15	; () banked
   749  007BFE  6F38               	movwf	56,b	;volatile
   750                           
   751                           ;main.c: 104: ANSELB = 0;
   752  007C00  0E00               	movlw	0
   753  007C02  010F               	movlb	15	; () banked
   754  007C04  6F39               	movwf	57,b	;volatile
   755                           
   756                           ;main.c: 105: ANSELC = 0;
   757  007C06  0E00               	movlw	0
   758  007C08  010F               	movlb	15	; () banked
   759  007C0A  6F3A               	movwf	58,b	;volatile
   760                           
   761                           ; BSR set to: 15
   762                           ;main.c: 107: OSCCONbits.IRCF=0b111;
   763  007C0C  88D3               	bsf	4051,4,c	;volatile
   764  007C0E  8AD3               	bsf	4051,5,c	;volatile
   765  007C10  8CD3               	bsf	4051,6,c	;volatile
   766                           
   767                           ;main.c: 109: TRISB = 0x00;
   768  007C12  0E00               	movlw	0
   769  007C14  6E93               	movwf	3987,c	;volatile
   770                           
   771                           ;main.c: 110: TRISC = 0x00;
   772  007C16  0E00               	movlw	0
   773  007C18  6E94               	movwf	3988,c	;volatile
   774                           
   775                           ;main.c: 112: PORTB = 0x00;
   776  007C1A  0E00               	movlw	0
   777  007C1C  6E81               	movwf	3969,c	;volatile
   778                           
   779                           ;main.c: 113: PORTC = 0x00;
   780  007C1E  0E00               	movlw	0
   781  007C20  6E82               	movwf	3970,c	;volatile
   782                           
   783                           ; BSR set to: 15
   784  007C22  0012               	return		;funcret
   785  007C24                     __end_of_MCU_Init:
   786                           	opt stack 0
   787                           tblptru	equ	0xFF8
   788                           tblptrh	equ	0xFF7
   789                           tblptrl	equ	0xFF6
   790                           tablat	equ	0xFF5
   791                           wreg	equ	0xFE8
   792                           status	equ	0xFD8
   793                           tblptru	equ	0xFF8
   794                           tblptrh	equ	0xFF7
   795                           tblptrl	equ	0xFF6
   796                           tablat	equ	0xFF5
   797                           wreg	equ	0xFE8
   798                           status	equ	0xFD8
   799                           
   800                           	psect	rparam
   801  0000                     tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           wreg	equ	0xFE8
   806                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    576
    Data        0
    BSS         6
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                           _MCU_Init
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCU_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       A       1       10.5%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A       9        0.0%
DATA                 0      0       A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Jun 24 01:02:10 2020

           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l701 7C7C                      l711 7CB6  
                    l721 7CF0                      l717 7CEA                      l737 7D44  
                    l753 7DB2                      l729 7D0C                      l747 7D7E  
                    l693 7C44                      l685 7C28                      l687 7C30  
           __CFG_CPB$OFF 000000                      u100 7DBC                      u117 7C9E  
                    u127 7D66             __CFG_CPD$OFF 000000                      _num 0007  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     _main 7C24  
          __CFG_BORV$190 000000                     start 0000            __CFG_IESO$OFF 000000  
           ___param_bank 000000          __end_of_Numbers 7FFF                    ?_main 0009  
       __end_of_MCU_Init 7C24                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISB 000F93                    _TRISC 000F94            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _count 0005       __CFG_MCLRE$EXTMCLR 000000           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __initialization 7BE4  
           __end_of_main 7DBE                   ??_main 0009            __activetblptr 000002  
                 _ANSELA 000F38                   _ANSELB 000F39                   _ANSELC 000F3A  
         __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 _column 0003                   _repeat 0001             __mediumconst 7DBE  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
        __CFG_HFOFST$OFF 000000               __accesstop 0060  __end_of__initialization 7BF0  
        __CFG_PBADEN$OFF 000000        __end_of_Alphabets 7F5F            ___rparam_used 000001  
              ?_MCU_Init 0009           __pcstackCOMRAM 0009          __CFG_PLLCFG$OFF 000000  
             __pnvCOMRAM 0007               ??_MCU_Init 0009       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000          __CFG_PWRTEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  _Numbers 7F5F                  __pcinit 7BE4  
                __ramtop 0600                  __ptext0 7C24                  __ptext1 7BFA  
   end_of_initialization 7BF0            __Lmediumconst 7DBE                _Alphabets 7DBF  
      __size_of_MCU_Init 002A      start_initialization 7BE4              __pbssCOMRAM 0001  
          __pmediumconst 7DBE         __CFG_PRICLKEN$ON 000000                 _MCU_Init 7BFA  
       __CFG_WDTPS$32768 000000                 __Hrparam 0000                 __Lrparam 0000  
      __CFG_P2BMX$PORTB5 000000            __size_of_main 019A               _OSCCONbits 000FD3  
      __CFG_T3CMX$PORTC0 000000        __CFG_FOSC$INTIO67 000000  
