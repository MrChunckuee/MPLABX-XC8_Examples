

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Aug 15 23:53:17 2020

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           ; Version 1.42
    23                           ; Generated 13/04/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4620 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	smallconst
    58  001000                     __psmallconst:
    59                           	opt stack 0
    60  001000  00                 	db	0
    61  001001                     _Display7Seg:
    62                           	opt stack 0
    63  001001  3F                 	db	63
    64  001002  06                 	db	6
    65  001003  5B                 	db	91
    66  001004  4F                 	db	79
    67  001005  66                 	db	102
    68  001006  6D                 	db	109
    69  001007  7D                 	db	125
    70  001008  07                 	db	7
    71  001009  7F                 	db	127
    72  00100A  6F                 	db	111
    73  00100B                     __end_of_Display7Seg:
    74                           	opt stack 0
    75  0000                     _LATBbits	set	3978
    76  0000                     _LATD	set	3980
    77  0000                     _PORTEbits	set	3972
    78  0000                     _RCONbits	set	4048
    79  0000                     _INTCON2bits	set	4081
    80  0000                     _T0CONbits	set	4053
    81  0000                     _TRISE	set	3990
    82  0000                     _TRISD	set	3989
    83  0000                     _TRISC	set	3988
    84  0000                     _TRISB	set	3987
    85  0000                     _TRISA	set	3986
    86  0000                     _PORTE	set	3972
    87  0000                     _PORTD	set	3971
    88  0000                     _PORTC	set	3970
    89  0000                     _PORTB	set	3969
    90  0000                     _PORTA	set	3968
    91  0000                     _ADCON1	set	4033
    92  0000                     _OSCTUNEbits	set	3995
    93  0000                     _OSCCONbits	set	4051
    94  0000                     _TMR0L	set	4054
    95  0000                     _TMR0H	set	4055
    96  0000                     _INTCONbits	set	4082
    97                           
    98                           ; #config settings
    99  00100B  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           	psect	cinit
   102  001346                     __pcinit:
   103                           	opt stack 0
   104  001346                     start_initialization:
   105                           	opt stack 0
   106  001346                     __initialization:
   107                           	opt stack 0
   108                           
   109                           ; Clear objects allocated to COMRAM (8 bytes)
   110  001346  EE00  F011         	lfsr	0,__pbssCOMRAM
   111  00134A  0E08               	movlw	8
   112  00134C                     clear_0:
   113  00134C  6AEE               	clrf	postinc0,c
   114  00134E  06E8               	decf	wreg,f,c
   115  001350  E1FD               	bnz	clear_0
   116  001352                     end_of_initialization:
   117                           	opt stack 0
   118  001352                     __end_of__initialization:
   119                           	opt stack 0
   120  001352  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   121  001354  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   122  001356  0E00               	movlw	low (__Lmediumconst shr (0+16))
   123  001358  6EF8               	movwf	tblptru,c
   124  00135A  0100               	movlb	0
   125  00135C  EFB0  F009         	goto	_main	;jump to C main() function
   126                           tblptru	equ	0xFF8
   127                           postinc0	equ	0xFEE
   128                           wreg	equ	0xFE8
   129                           
   130                           	psect	bssCOMRAM
   131  000011                     __pbssCOMRAM:
   132                           	opt stack 0
   133  000011                     _RTCC_Count:
   134                           	opt stack 0
   135  000011                     	ds	2
   136  000013                     _buttonTicks:
   137                           	opt stack 0
   138  000013                     	ds	1
   139  000014                     _currentDisplayState:
   140                           	opt stack 0
   141  000014                     	ds	1
   142  000015                     _Millar:
   143                           	opt stack 0
   144  000015                     	ds	1
   145  000016                     _Centena:
   146                           	opt stack 0
   147  000016                     	ds	1
   148  000017                     _Decena:
   149                           	opt stack 0
   150  000017                     	ds	1
   151  000018                     _Unidad:
   152                           	opt stack 0
   153  000018                     	ds	1
   154                           tblptru	equ	0xFF8
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158                           	psect	cstackCOMRAM
   159  000001                     __pcstackCOMRAM:
   160                           	opt stack 0
   161  000001                     ??_DYSPLAY7SEG_Update:
   162  000001                     
   163                           ; 1 bytes @ 0x0
   164  000001                     	ds	1
   165  000002                     ??_ISR:
   166                           
   167                           ; 1 bytes @ 0x1
   168  000002                     	ds	14
   169  000010                     ??_main:
   170                           
   171                           ; 1 bytes @ 0xF
   172  000010                     	ds	1
   173                           tblptru	equ	0xFF8
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           
   177 ;;
   178 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   179 ;;
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 68 in file "main.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;		None
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		wreg, status,2, status,0, cstack
   191 ;; Tracked objects:
   192 ;;		On entry : 0/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   200 ;;Total ram usage:        1 bytes
   201 ;; Hardware stack levels required when called:    4
   202 ;; This function calls:
   203 ;;		_GetInput
   204 ;;		_MCU_Init
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text0
   211  001360                     __ptext0:
   212                           	opt stack 0
   213  001360                     _main:
   214                           	opt stack 27
   215                           
   216                           ;main.c: 69: MCU_Init();
   217                           
   218                           ;incstack = 0
   219  001360  EC3B  F009         	call	_MCU_Init	;wreg free
   220  001364                     l968:
   221                           
   222                           ;main.c: 71: GetInput();
   223  001364  EC66  F009         	call	_GetInput	;wreg free
   224                           
   225                           ;main.c: 72: _delay((unsigned long)((5)*(16000000/4000.0)));
   226  001368  0E1A               	movlw	26
   227  00136A  6E10               	movwf	??_main& (0+255),c
   228  00136C  0EF8               	movlw	248
   229  00136E                     u267:
   230  00136E  2EE8               	decfsz	wreg,f,c
   231  001370  D7FE               	bra	u267
   232  001372  2E10               	decfsz	??_main& (0+255),f,c
   233  001374  D7FC               	bra	u267
   234  001376  D000               	nop2	
   235  001378  D7F5               	goto	l968
   236  00137A                     __end_of_main:
   237                           	opt stack 0
   238                           tblptru	equ	0xFF8
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242 ;; *************** function _MCU_Init *****************
   243 ;; Defined at:
   244 ;;		line 76 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;Total ram usage:        0 bytes
   263 ;; Hardware stack levels used:    1
   264 ;; Hardware stack levels required when called:    3
   265 ;; This function calls:
   266 ;;		_RTCC_Init
   267 ;; This function is called by:
   268 ;;		_main
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text1
   273  001276                     __ptext1:
   274                           	opt stack 0
   275  001276                     _MCU_Init:
   276                           	opt stack 27
   277                           
   278                           ;main.c: 78: OSCCONbits.IRCF=0b110;
   279                           
   280                           ;incstack = 0
   281  001276  50D3               	movf	4051,w,c	;volatile
   282  001278  0B8F               	andlw	-113
   283  00127A  0960               	iorlw	96
   284  00127C  6ED3               	movwf	4051,c	;volatile
   285                           
   286                           ;main.c: 79: OSCTUNEbits.PLLEN = 1;
   287  00127E  8C9B               	bsf	3995,6,c	;volatile
   288                           
   289                           ;main.c: 81: ADCON1=0xFF;
   290  001280  68C1               	setf	4033,c	;volatile
   291                           
   292                           ;main.c: 84: PORTA=0x00;
   293  001282  0E00               	movlw	0
   294  001284  6E80               	movwf	3968,c	;volatile
   295                           
   296                           ;main.c: 85: PORTB=0x00;
   297  001286  0E00               	movlw	0
   298  001288  6E81               	movwf	3969,c	;volatile
   299                           
   300                           ;main.c: 86: PORTC=0x00;
   301  00128A  0E00               	movlw	0
   302  00128C  6E82               	movwf	3970,c	;volatile
   303                           
   304                           ;main.c: 87: PORTD=0x00;
   305  00128E  0E00               	movlw	0
   306  001290  6E83               	movwf	3971,c	;volatile
   307                           
   308                           ;main.c: 88: PORTE=0x00;
   309  001292  0E00               	movlw	0
   310  001294  6E84               	movwf	3972,c	;volatile
   311                           
   312                           ;main.c: 91: TRISA=0x00;
   313  001296  0E00               	movlw	0
   314  001298  6E92               	movwf	3986,c	;volatile
   315                           
   316                           ;main.c: 92: TRISB=0x00;
   317  00129A  0E00               	movlw	0
   318  00129C  6E93               	movwf	3987,c	;volatile
   319                           
   320                           ;main.c: 93: TRISC=0x00;
   321  00129E  0E00               	movlw	0
   322  0012A0  6E94               	movwf	3988,c	;volatile
   323                           
   324                           ;main.c: 94: TRISD=0x00;
   325  0012A2  0E00               	movlw	0
   326  0012A4  6E95               	movwf	3989,c	;volatile
   327                           
   328                           ;main.c: 95: TRISE=0b111;
   329  0012A6  0E07               	movlw	7
   330  0012A8  6E96               	movwf	3990,c	;volatile
   331                           
   332                           ;main.c: 98: Unidad = 0;
   333  0012AA  0E00               	movlw	0
   334  0012AC  6E18               	movwf	_Unidad,c
   335                           
   336                           ;main.c: 99: Decena = 0;
   337  0012AE  0E00               	movlw	0
   338  0012B0  6E17               	movwf	_Decena,c
   339                           
   340                           ;main.c: 100: Centena = 0;
   341  0012B2  0E00               	movlw	0
   342  0012B4  6E16               	movwf	_Centena,c
   343                           
   344                           ;main.c: 101: Millar = 0;
   345  0012B6  0E00               	movlw	0
   346  0012B8  6E15               	movwf	_Millar,c
   347                           
   348                           ;main.c: 103: currentDisplayState = 0;
   349  0012BA  0E00               	movlw	0
   350  0012BC  6E14               	movwf	_currentDisplayState,c
   351                           
   352                           ;main.c: 105: RTCC_Count = 0;
   353  0012BE  0E00               	movlw	0
   354  0012C0  6E12               	movwf	_RTCC_Count+1,c
   355  0012C2  0E00               	movlw	0
   356  0012C4  6E11               	movwf	_RTCC_Count,c
   357                           
   358                           ;main.c: 107: RTCC_Init();
   359  0012C6  EC91  F009         	call	_RTCC_Init	;wreg free
   360  0012CA  0012               	return		;funcret
   361  0012CC                     __end_of_MCU_Init:
   362                           	opt stack 0
   363                           tblptru	equ	0xFF8
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           
   367 ;; *************** function _RTCC_Init *****************
   368 ;; Defined at:
   369 ;;		line 110 in file "main.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   387 ;;Total ram usage:        0 bytes
   388 ;; Hardware stack levels used:    1
   389 ;; Hardware stack levels required when called:    2
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_MCU_Init
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text2
   398  001322                     __ptext2:
   399                           	opt stack 0
   400  001322                     _RTCC_Init:
   401                           	opt stack 27
   402                           
   403                           ;main.c: 112: T0CONbits.TMR0ON = 1;
   404                           
   405                           ;incstack = 0
   406  001322  8ED5               	bsf	4053,7,c	;volatile
   407                           
   408                           ;main.c: 113: T0CONbits.T08BIT = 0;
   409  001324  9CD5               	bcf	4053,6,c	;volatile
   410                           
   411                           ;main.c: 114: T0CONbits.T0CS = 0;
   412  001326  9AD5               	bcf	4053,5,c	;volatile
   413                           
   414                           ;main.c: 115: T0CONbits.T0SE = 0;
   415  001328  98D5               	bcf	4053,4,c	;volatile
   416                           
   417                           ;main.c: 116: T0CONbits.PSA = 0;
   418  00132A  96D5               	bcf	4053,3,c	;volatile
   419                           
   420                           ;main.c: 117: T0CONbits.T0PS = 0b000;
   421  00132C  90D5               	bcf	4053,0,c	;volatile
   422  00132E  92D5               	bcf	4053,1,c	;volatile
   423  001330  94D5               	bcf	4053,2,c	;volatile
   424                           
   425                           ;main.c: 118: TMR0H = 0xF8;
   426  001332  0EF8               	movlw	248
   427  001334  6ED7               	movwf	4055,c	;volatile
   428                           
   429                           ;main.c: 119: TMR0L = 0x30;
   430  001336  0E30               	movlw	48
   431  001338  6ED6               	movwf	4054,c	;volatile
   432                           
   433                           ;main.c: 120: INTCONbits.TMR0IF = 0;
   434  00133A  94F2               	bcf	intcon,2,c	;volatile
   435                           
   436                           ;main.c: 121: INTCONbits.TMR0IE = 1;
   437  00133C  8AF2               	bsf	intcon,5,c	;volatile
   438                           
   439                           ;main.c: 122: INTCON2bits.TMR0IP = 1;
   440  00133E  84F1               	bsf	intcon2,2,c	;volatile
   441                           
   442                           ;main.c: 123: RCONbits.IPEN = 1;
   443  001340  8ED0               	bsf	4048,7,c	;volatile
   444                           
   445                           ;main.c: 124: INTCONbits.GIEH = 1;
   446  001342  8EF2               	bsf	intcon,7,c	;volatile
   447  001344  0012               	return		;funcret
   448  001346                     __end_of_RTCC_Init:
   449                           	opt stack 0
   450                           tblptru	equ	0xFF8
   451                           intcon	equ	0xFF2
   452                           intcon2	equ	0xFF1
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           
   456 ;; *************** function _GetInput *****************
   457 ;; Defined at:
   458 ;;		line 127 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; Hardware stack levels required when called:    3
   479 ;; This function calls:
   480 ;;		_DYSPLAY7SEG_Decremento
   481 ;;		_DYSPLAY7SEG_Incremento
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text3
   488  0012CC                     __ptext3:
   489                           	opt stack 0
   490  0012CC                     _GetInput:
   491                           	opt stack 27
   492                           
   493                           ;main.c: 130: if (PORTEbits.RE0 == 1){
   494                           
   495                           ;incstack = 0
   496  0012CC  A084               	btfss	3972,0,c	;volatile
   497  0012CE  D00A               	goto	l98
   498                           
   499                           ;main.c: 131: if (buttonTicks > 20){
   500  0012D0  0E14               	movlw	20
   501  0012D2  6413               	cpfsgt	_buttonTicks,c
   502  0012D4  D005               	goto	l926
   503                           
   504                           ;main.c: 132: DYSPLAY7SEG_Incremento();
   505  0012D6  ECAB  F008         	call	_DYSPLAY7SEG_Incremento	;wreg free
   506                           
   507                           ;main.c: 133: buttonTicks = 0;
   508  0012DA  0E00               	movlw	0
   509  0012DC  6E13               	movwf	_buttonTicks,c
   510                           
   511                           ;main.c: 134: }
   512  0012DE  0012               	return	
   513  0012E0                     l926:
   514                           
   515                           ;main.c: 135: else buttonTicks++;
   516  0012E0  2A13               	incf	_buttonTicks,f,c
   517                           
   518                           ;main.c: 136: }
   519  0012E2  0012               	return	
   520  0012E4                     l98:
   521                           
   522                           ;main.c: 137: else if(PORTEbits.RE1 == 1){
   523  0012E4  A284               	btfss	3972,1,c	;volatile
   524  0012E6  D00A               	goto	l102
   525                           
   526                           ;main.c: 138: if (buttonTicks > 20){
   527  0012E8  0E14               	movlw	20
   528  0012EA  6413               	cpfsgt	_buttonTicks,c
   529  0012EC  D005               	goto	l934
   530                           
   531                           ;main.c: 139: DYSPLAY7SEG_Decremento();
   532  0012EE  ECF3  F008         	call	_DYSPLAY7SEG_Decremento	;wreg free
   533                           
   534                           ;main.c: 140: buttonTicks = 0;
   535  0012F2  0E00               	movlw	0
   536  0012F4  6E13               	movwf	_buttonTicks,c
   537                           
   538                           ;main.c: 141: }
   539  0012F6  0012               	return	
   540  0012F8                     l934:
   541                           
   542                           ;main.c: 142: else buttonTicks++;
   543  0012F8  2A13               	incf	_buttonTicks,f,c
   544                           
   545                           ;main.c: 143: }
   546  0012FA  0012               	return	
   547  0012FC                     l102:
   548                           
   549                           ;main.c: 144: else if(PORTEbits.RE2 == 1){
   550  0012FC  A484               	btfss	3972,2,c	;volatile
   551  0012FE  D00E               	goto	l946
   552                           
   553                           ;main.c: 145: if (buttonTicks > 50){
   554  001300  0E32               	movlw	50
   555  001302  6413               	cpfsgt	_buttonTicks,c
   556  001304  D009               	goto	l944
   557                           
   558                           ;main.c: 146: currentDisplayState++;
   559  001306  2A14               	incf	_currentDisplayState,f,c
   560                           
   561                           ;main.c: 147: if (currentDisplayState > 3)
   562  001308  0E03               	movlw	3
   563  00130A  6414               	cpfsgt	_currentDisplayState,c
   564  00130C  D002               	goto	l108
   565                           
   566                           ;main.c: 148: currentDisplayState = 0;
   567  00130E  0E00               	movlw	0
   568  001310  6E14               	movwf	_currentDisplayState,c
   569  001312                     l108:
   570                           
   571                           ;main.c: 149: buttonTicks = 0;
   572  001312  0E00               	movlw	0
   573  001314  6E13               	movwf	_buttonTicks,c
   574                           
   575                           ;main.c: 150: }
   576  001316  0012               	return	
   577  001318                     l944:
   578                           
   579                           ;main.c: 151: else buttonTicks++;
   580  001318  2A13               	incf	_buttonTicks,f,c
   581                           
   582                           ;main.c: 152: }
   583  00131A  0012               	return	
   584  00131C                     l946:
   585                           
   586                           ;main.c: 153: else buttonTicks = 0;
   587  00131C  0E00               	movlw	0
   588  00131E  6E13               	movwf	_buttonTicks,c
   589  001320  0012               	return	
   590  001322                     __end_of_GetInput:
   591                           	opt stack 0
   592                           tblptru	equ	0xFF8
   593                           intcon	equ	0xFF2
   594                           intcon2	equ	0xFF1
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           
   598 ;; *************** function _DYSPLAY7SEG_Incremento *****************
   599 ;; Defined at:
   600 ;;		line 156 in file "main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    2
   621 ;; This function calls:
   622 ;;		Nothing
   623 ;; This function is called by:
   624 ;;		_GetInput
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text4
   629  001156                     __ptext4:
   630                           	opt stack 0
   631  001156                     _DYSPLAY7SEG_Incremento:
   632                           	opt stack 27
   633                           
   634                           ;main.c: 157: switch(currentDisplayState){
   635                           
   636                           ;incstack = 0
   637  001156  D039               	goto	l832
   638  001158                     l788:
   639                           
   640                           ;main.c: 159: Unidad++;
   641  001158  2A18               	incf	_Unidad,f,c
   642                           
   643                           ;main.c: 160: if (Unidad <= 0)
   644  00115A  5018               	movf	_Unidad,w,c
   645  00115C  A4D8               	btfss	status,2,c
   646  00115E  D002               	goto	l794
   647                           
   648                           ;main.c: 161: Unidad = 0;
   649  001160  0E00               	movlw	0
   650  001162  6E18               	movwf	_Unidad,c
   651  001164                     l794:
   652                           
   653                           ;main.c: 162: if (Unidad > 9)
   654  001164  0E09               	movlw	9
   655  001166  6418               	cpfsgt	_Unidad,c
   656  001168  0012               	return	
   657                           
   658                           ;main.c: 163: Unidad = 0;
   659  00116A  0E00               	movlw	0
   660  00116C  6E18               	movwf	_Unidad,c
   661                           
   662                           ;main.c: 164: break;
   663  00116E  0012               	return	
   664  001170                     l798:
   665                           
   666                           ;main.c: 166: Decena++;
   667  001170  2A17               	incf	_Decena,f,c
   668                           
   669                           ;main.c: 167: if (Decena <= 0)
   670  001172  5017               	movf	_Decena,w,c
   671  001174  A4D8               	btfss	status,2,c
   672  001176  D002               	goto	l804
   673                           
   674                           ;main.c: 168: Decena = 0;
   675  001178  0E00               	movlw	0
   676  00117A  6E17               	movwf	_Decena,c
   677  00117C                     l804:
   678                           
   679                           ;main.c: 169: if (Decena > 9)
   680  00117C  0E09               	movlw	9
   681  00117E  6417               	cpfsgt	_Decena,c
   682  001180  0012               	return	
   683                           
   684                           ;main.c: 170: Decena = 0;
   685  001182  0E00               	movlw	0
   686  001184  6E17               	movwf	_Decena,c
   687                           
   688                           ;main.c: 171: break;
   689  001186  0012               	return	
   690  001188                     l808:
   691                           
   692                           ;main.c: 173: Centena++;
   693  001188  2A16               	incf	_Centena,f,c
   694                           
   695                           ;main.c: 174: if (Centena <= 0)
   696  00118A  5016               	movf	_Centena,w,c
   697  00118C  A4D8               	btfss	status,2,c
   698  00118E  D002               	goto	l814
   699                           
   700                           ;main.c: 175: Centena = 0;
   701  001190  0E00               	movlw	0
   702  001192  6E16               	movwf	_Centena,c
   703  001194                     l814:
   704                           
   705                           ;main.c: 176: if (Centena > 9)
   706  001194  0E09               	movlw	9
   707  001196  6416               	cpfsgt	_Centena,c
   708  001198  0012               	return	
   709                           
   710                           ;main.c: 177: Centena = 0;
   711  00119A  0E00               	movlw	0
   712  00119C  6E16               	movwf	_Centena,c
   713                           
   714                           ;main.c: 178: break;
   715  00119E  0012               	return	
   716  0011A0                     l818:
   717                           
   718                           ;main.c: 180: Millar++;
   719  0011A0  2A15               	incf	_Millar,f,c
   720                           
   721                           ;main.c: 181: if (Millar <= 0)
   722  0011A2  5015               	movf	_Millar,w,c
   723  0011A4  A4D8               	btfss	status,2,c
   724  0011A6  D002               	goto	l824
   725                           
   726                           ;main.c: 182: Millar = 0;
   727  0011A8  0E00               	movlw	0
   728  0011AA  6E15               	movwf	_Millar,c
   729  0011AC                     l824:
   730                           
   731                           ;main.c: 183: if (Millar > 9)
   732  0011AC  0E09               	movlw	9
   733  0011AE  6415               	cpfsgt	_Millar,c
   734  0011B0  0012               	return	
   735                           
   736                           ;main.c: 184: Millar = 0;
   737  0011B2  0E00               	movlw	0
   738  0011B4  6E15               	movwf	_Millar,c
   739                           
   740                           ;main.c: 185: break;
   741  0011B6  0012               	return	
   742  0011B8                     l828:
   743                           
   744                           ;main.c: 187: Unidad = 0;
   745  0011B8  0E00               	movlw	0
   746  0011BA  6E18               	movwf	_Unidad,c
   747                           
   748                           ;main.c: 188: Decena = 0;
   749  0011BC  0E00               	movlw	0
   750  0011BE  6E17               	movwf	_Decena,c
   751                           
   752                           ;main.c: 189: Centena = 0;
   753  0011C0  0E00               	movlw	0
   754  0011C2  6E16               	movwf	_Centena,c
   755                           
   756                           ;main.c: 190: Millar = 0;
   757  0011C4  0E00               	movlw	0
   758  0011C6  6E15               	movwf	_Millar,c
   759                           
   760                           ;main.c: 192: }
   761                           
   762                           ;main.c: 191: break;
   763  0011C8  0012               	return	
   764  0011CA                     l832:
   765  0011CA  5014               	movf	_currentDisplayState,w,c
   766                           
   767                           ; Switch size 1, requested type "space"
   768                           ; Number of cases is 4, Range of values is 0 to 3
   769                           ; switch strategies available:
   770                           ; Name         Instructions Cycles
   771                           ; simple_byte           13     7 (average)
   772                           ;	Chosen strategy is simple_byte
   773  0011CC  0A00               	xorlw	0	; case 0
   774  0011CE  B4D8               	btfsc	status,2,c
   775  0011D0  D7C3               	goto	l788
   776  0011D2  0A01               	xorlw	1	; case 1
   777  0011D4  B4D8               	btfsc	status,2,c
   778  0011D6  D7CC               	goto	l798
   779  0011D8  0A03               	xorlw	3	; case 2
   780  0011DA  B4D8               	btfsc	status,2,c
   781  0011DC  D7D5               	goto	l808
   782  0011DE  0A01               	xorlw	1	; case 3
   783  0011E0  B4D8               	btfsc	status,2,c
   784  0011E2  D7DE               	goto	l818
   785  0011E4  D7E9               	goto	l828
   786  0011E6                     __end_of_DYSPLAY7SEG_Incremento:
   787                           	opt stack 0
   788                           tblptru	equ	0xFF8
   789                           intcon	equ	0xFF2
   790                           intcon2	equ	0xFF1
   791                           postinc0	equ	0xFEE
   792                           wreg	equ	0xFE8
   793                           status	equ	0xFD8
   794                           
   795 ;; *************** function _DYSPLAY7SEG_Decremento *****************
   796 ;; Defined at:
   797 ;;		line 195 in file "main.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    2
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_GetInput
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text5
   826  0011E6                     __ptext5:
   827                           	opt stack 0
   828  0011E6                     _DYSPLAY7SEG_Decremento:
   829                           	opt stack 27
   830                           
   831                           ;main.c: 196: switch(currentDisplayState){
   832                           
   833                           ;incstack = 0
   834  0011E6  D039               	goto	l880
   835  0011E8                     l836:
   836                           
   837                           ;main.c: 198: Unidad--;
   838  0011E8  0618               	decf	_Unidad,f,c
   839                           
   840                           ;main.c: 199: if (Unidad <= 0)
   841  0011EA  5018               	movf	_Unidad,w,c
   842  0011EC  A4D8               	btfss	status,2,c
   843  0011EE  D002               	goto	l842
   844                           
   845                           ;main.c: 200: Unidad = 0;
   846  0011F0  0E00               	movlw	0
   847  0011F2  6E18               	movwf	_Unidad,c
   848  0011F4                     l842:
   849                           
   850                           ;main.c: 201: if (Unidad > 9)
   851  0011F4  0E09               	movlw	9
   852  0011F6  6418               	cpfsgt	_Unidad,c
   853  0011F8  0012               	return	
   854                           
   855                           ;main.c: 202: Unidad = 0;
   856  0011FA  0E00               	movlw	0
   857  0011FC  6E18               	movwf	_Unidad,c
   858                           
   859                           ;main.c: 203: break;
   860  0011FE  0012               	return	
   861  001200                     l846:
   862                           
   863                           ;main.c: 205: Decena--;
   864  001200  0617               	decf	_Decena,f,c
   865                           
   866                           ;main.c: 206: if (Decena <= 0)
   867  001202  5017               	movf	_Decena,w,c
   868  001204  A4D8               	btfss	status,2,c
   869  001206  D002               	goto	l852
   870                           
   871                           ;main.c: 207: Decena = 0;
   872  001208  0E00               	movlw	0
   873  00120A  6E17               	movwf	_Decena,c
   874  00120C                     l852:
   875                           
   876                           ;main.c: 208: if (Decena > 9)
   877  00120C  0E09               	movlw	9
   878  00120E  6417               	cpfsgt	_Decena,c
   879  001210  0012               	return	
   880                           
   881                           ;main.c: 209: Decena = 0;
   882  001212  0E00               	movlw	0
   883  001214  6E17               	movwf	_Decena,c
   884                           
   885                           ;main.c: 210: break;
   886  001216  0012               	return	
   887  001218                     l856:
   888                           
   889                           ;main.c: 212: Centena--;
   890  001218  0616               	decf	_Centena,f,c
   891                           
   892                           ;main.c: 213: if (Centena <= 0)
   893  00121A  5016               	movf	_Centena,w,c
   894  00121C  A4D8               	btfss	status,2,c
   895  00121E  D002               	goto	l862
   896                           
   897                           ;main.c: 214: Centena = 0;
   898  001220  0E00               	movlw	0
   899  001222  6E16               	movwf	_Centena,c
   900  001224                     l862:
   901                           
   902                           ;main.c: 215: if (Centena > 9)
   903  001224  0E09               	movlw	9
   904  001226  6416               	cpfsgt	_Centena,c
   905  001228  0012               	return	
   906                           
   907                           ;main.c: 216: Centena = 0;
   908  00122A  0E00               	movlw	0
   909  00122C  6E16               	movwf	_Centena,c
   910                           
   911                           ;main.c: 217: break;
   912  00122E  0012               	return	
   913  001230                     l866:
   914                           
   915                           ;main.c: 219: Millar--;
   916  001230  0615               	decf	_Millar,f,c
   917                           
   918                           ;main.c: 220: if (Millar <= 0)
   919  001232  5015               	movf	_Millar,w,c
   920  001234  A4D8               	btfss	status,2,c
   921  001236  D002               	goto	l872
   922                           
   923                           ;main.c: 221: Millar = 0;
   924  001238  0E00               	movlw	0
   925  00123A  6E15               	movwf	_Millar,c
   926  00123C                     l872:
   927                           
   928                           ;main.c: 222: if (Millar > 9)
   929  00123C  0E09               	movlw	9
   930  00123E  6415               	cpfsgt	_Millar,c
   931  001240  0012               	return	
   932                           
   933                           ;main.c: 223: Millar = 0;
   934  001242  0E00               	movlw	0
   935  001244  6E15               	movwf	_Millar,c
   936                           
   937                           ;main.c: 224: break;
   938  001246  0012               	return	
   939  001248                     l876:
   940                           
   941                           ;main.c: 226: Unidad = 0;
   942  001248  0E00               	movlw	0
   943  00124A  6E18               	movwf	_Unidad,c
   944                           
   945                           ;main.c: 227: Decena = 0;
   946  00124C  0E00               	movlw	0
   947  00124E  6E17               	movwf	_Decena,c
   948                           
   949                           ;main.c: 228: Centena = 0;
   950  001250  0E00               	movlw	0
   951  001252  6E16               	movwf	_Centena,c
   952                           
   953                           ;main.c: 229: Millar = 0;
   954  001254  0E00               	movlw	0
   955  001256  6E15               	movwf	_Millar,c
   956                           
   957                           ;main.c: 231: }
   958                           
   959                           ;main.c: 230: break;
   960  001258  0012               	return	
   961  00125A                     l880:
   962  00125A  5014               	movf	_currentDisplayState,w,c
   963                           
   964                           ; Switch size 1, requested type "space"
   965                           ; Number of cases is 4, Range of values is 0 to 3
   966                           ; switch strategies available:
   967                           ; Name         Instructions Cycles
   968                           ; simple_byte           13     7 (average)
   969                           ;	Chosen strategy is simple_byte
   970  00125C  0A00               	xorlw	0	; case 0
   971  00125E  B4D8               	btfsc	status,2,c
   972  001260  D7C3               	goto	l836
   973  001262  0A01               	xorlw	1	; case 1
   974  001264  B4D8               	btfsc	status,2,c
   975  001266  D7CC               	goto	l846
   976  001268  0A03               	xorlw	3	; case 2
   977  00126A  B4D8               	btfsc	status,2,c
   978  00126C  D7D5               	goto	l856
   979  00126E  0A01               	xorlw	1	; case 3
   980  001270  B4D8               	btfsc	status,2,c
   981  001272  D7DE               	goto	l866
   982  001274  D7E9               	goto	l876
   983  001276                     __end_of_DYSPLAY7SEG_Decremento:
   984                           	opt stack 0
   985                           tblptru	equ	0xFF8
   986                           intcon	equ	0xFF2
   987                           intcon2	equ	0xFF1
   988                           postinc0	equ	0xFEE
   989                           wreg	equ	0xFE8
   990                           status	equ	0xFD8
   991                           
   992 ;; *************** function _ISR *****************
   993 ;; Defined at:
   994 ;;		line 54 in file "main.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;Total ram usage:       14 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    1
  1015 ;; This function calls:
  1016 ;;		_DYSPLAY7SEG_Update
  1017 ;; This function is called by:
  1018 ;;		Interrupt level 2
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	intcode
  1023  000008                     __pintcode:
  1024                           	opt stack 0
  1025  000008                     _ISR:
  1026                           	opt stack 27
  1027                           
  1028                           ;incstack = 0
  1029  000008  8219               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1030  00000A  ED5B  F008         	call	int_func,f	;refresh shadow registers
  1031                           tblptru	equ	0xFF8
  1032                           intcon	equ	0xFF2
  1033                           intcon2	equ	0xFF1
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           status	equ	0xFD8
  1037                           
  1038                           	psect	intcode_body
  1039  0010B6                     __pintcode_body:
  1040                           	opt stack 27
  1041  0010B6                     int_func:
  1042                           	opt stack 27
  1043  0010B6  0006               	pop		; remove dummy address from shadow register refresh
  1044  0010B8  CFFA F002          	movff	pclath,??_ISR
  1045  0010BC  CFFB F003          	movff	pclatu,??_ISR+1
  1046  0010C0  CFE9 F004          	movff	fsr0l,??_ISR+2
  1047  0010C4  CFEA F005          	movff	fsr0h,??_ISR+3
  1048  0010C8  CFE1 F006          	movff	fsr1l,??_ISR+4
  1049  0010CC  CFE2 F007          	movff	fsr1h,??_ISR+5
  1050  0010D0  CFD9 F008          	movff	fsr2l,??_ISR+6
  1051  0010D4  CFDA F009          	movff	fsr2h,??_ISR+7
  1052  0010D8  CFF3 F00A          	movff	prodl,??_ISR+8
  1053  0010DC  CFF4 F00B          	movff	prodh,??_ISR+9
  1054  0010E0  CFF6 F00C          	movff	tblptrl,??_ISR+10
  1055  0010E4  CFF7 F00D          	movff	tblptrh,??_ISR+11
  1056  0010E8  CFF8 F00E          	movff	tblptru,??_ISR+12
  1057  0010EC  CFF5 F00F          	movff	tablat,??_ISR+13
  1058                           
  1059                           ;main.c: 55: if(INTCONbits.TMR0IF){
  1060  0010F0  A4F2               	btfss	intcon,2,c	;volatile
  1061  0010F2  D013               	goto	i2l81
  1062                           
  1063                           ;main.c: 56: ++RTCC_Count;
  1064  0010F4  4A11               	infsnz	_RTCC_Count,f,c
  1065  0010F6  2A12               	incf	_RTCC_Count+1,f,c
  1066                           
  1067                           ;main.c: 57: if (RTCC_Count >= 20){
  1068  0010F8  5012               	movf	_RTCC_Count+1,w,c
  1069  0010FA  E104               	bnz	i2u25_40
  1070  0010FC  0E14               	movlw	20
  1071  0010FE  5C11               	subwf	_RTCC_Count,w,c
  1072  001100  A0D8               	btfss	status,0,c
  1073  001102  D006               	goto	i2l958
  1074  001104                     i2u25_40:
  1075                           
  1076                           ;main.c: 58: DYSPLAY7SEG_Update();
  1077  001104  EC06  F008         	call	_DYSPLAY7SEG_Update	;wreg free
  1078                           
  1079                           ;main.c: 59: RTCC_Count = 0;
  1080  001108  0E00               	movlw	0
  1081  00110A  6E12               	movwf	_RTCC_Count+1,c
  1082  00110C  0E00               	movlw	0
  1083  00110E  6E11               	movwf	_RTCC_Count,c
  1084  001110                     i2l958:
  1085                           
  1086                           ;main.c: 60: }
  1087                           ;main.c: 61: TMR0H = 0xF8;
  1088  001110  0EF8               	movlw	248
  1089  001112  6ED7               	movwf	4055,c	;volatile
  1090                           
  1091                           ;main.c: 62: TMR0L = 0x30;
  1092  001114  0E30               	movlw	48
  1093  001116  6ED6               	movwf	4054,c	;volatile
  1094                           
  1095                           ;main.c: 63: INTCONbits.TMR0IF = 0;
  1096  001118  94F2               	bcf	intcon,2,c	;volatile
  1097  00111A                     i2l81:
  1098  00111A  C00F  FFF5         	movff	??_ISR+13,tablat
  1099  00111E  C00E  FFF8         	movff	??_ISR+12,tblptru
  1100  001122  C00D  FFF7         	movff	??_ISR+11,tblptrh
  1101  001126  C00C  FFF6         	movff	??_ISR+10,tblptrl
  1102  00112A  C00B  FFF4         	movff	??_ISR+9,prodh
  1103  00112E  C00A  FFF3         	movff	??_ISR+8,prodl
  1104  001132  C009  FFDA         	movff	??_ISR+7,fsr2h
  1105  001136  C008  FFD9         	movff	??_ISR+6,fsr2l
  1106  00113A  C007  FFE2         	movff	??_ISR+5,fsr1h
  1107  00113E  C006  FFE1         	movff	??_ISR+4,fsr1l
  1108  001142  C005  FFEA         	movff	??_ISR+3,fsr0h
  1109  001146  C004  FFE9         	movff	??_ISR+2,fsr0l
  1110  00114A  C003  FFFB         	movff	??_ISR+1,pclatu
  1111  00114E  C002  FFFA         	movff	??_ISR,pclath
  1112  001152  9219               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1113  001154  0011               	retfie		f
  1114  001156                     __end_of_ISR:
  1115                           	opt stack 0
  1116                           pclatu	equ	0xFFB
  1117                           pclath	equ	0xFFA
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           prodh	equ	0xFF4
  1123                           prodl	equ	0xFF3
  1124                           intcon	equ	0xFF2
  1125                           intcon2	equ	0xFF1
  1126                           postinc0	equ	0xFEE
  1127                           fsr0h	equ	0xFEA
  1128                           fsr0l	equ	0xFE9
  1129                           wreg	equ	0xFE8
  1130                           fsr1h	equ	0xFE2
  1131                           fsr1l	equ	0xFE1
  1132                           fsr2h	equ	0xFDA
  1133                           fsr2l	equ	0xFD9
  1134                           status	equ	0xFD8
  1135                           
  1136 ;; *************** function _DYSPLAY7SEG_Update *****************
  1137 ;; Defined at:
  1138 ;;		line 234 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;Total ram usage:        1 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_ISR
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text7
  1166  00100C                     __ptext7:
  1167                           	opt stack 0
  1168  00100C                     _DYSPLAY7SEG_Update:
  1169                           	opt stack 27
  1170                           
  1171                           ;main.c: 236: LATD = Display7Seg [Unidad];
  1172                           
  1173                           ;incstack = 0
  1174  00100C  5018               	movf	_Unidad,w,c
  1175  00100E  0D01               	mullw	1
  1176  001010  0E01               	movlw	low _Display7Seg
  1177  001012  24F3               	addwf	prodl,w,c
  1178  001014  6EF6               	movwf	tblptrl,c
  1179  001016  0E10               	movlw	high _Display7Seg
  1180  001018  20F4               	addwfc	prodh,w,c
  1181  00101A  6EF7               	movwf	tblptrh,c
  1182  00101C                     	if	0	;There are less than 3 active tblptr bytes
  1183  00101C                     	endif
  1184  00101C  0008               	tblrd		*
  1185  00101E  CFF5 FF8C          	movff	tablat,3980	;volatile
  1186                           
  1187                           ;main.c: 237: LATBbits.LATB0 = 1;
  1188  001022  808A               	bsf	3978,0,c	;volatile
  1189                           
  1190                           ;main.c: 238: _delay((unsigned long)((1)*(16000000/4000.0)));
  1191  001024  0E06               	movlw	6
  1192  001026  6E01               	movwf	??_DYSPLAY7SEG_Update& (0+255),c
  1193  001028  0E30               	movlw	48
  1194  00102A                     i2u27_47:
  1195  00102A  2EE8               	decfsz	wreg,f,c
  1196  00102C  D7FE               	bra	i2u27_47
  1197  00102E  2E01               	decfsz	??_DYSPLAY7SEG_Update& (0+255),f,c
  1198  001030  D7FC               	bra	i2u27_47
  1199  001032  D000               	nop2	
  1200                           
  1201                           ;main.c: 239: LATBbits.LATB0 = 0;
  1202  001034  908A               	bcf	3978,0,c	;volatile
  1203                           
  1204                           ;main.c: 240: LATD = Display7Seg [Decena];
  1205  001036  5017               	movf	_Decena,w,c
  1206  001038  0D01               	mullw	1
  1207  00103A  0E01               	movlw	low _Display7Seg
  1208  00103C  24F3               	addwf	prodl,w,c
  1209  00103E  6EF6               	movwf	tblptrl,c
  1210  001040  0E10               	movlw	high _Display7Seg
  1211  001042  20F4               	addwfc	prodh,w,c
  1212  001044  6EF7               	movwf	tblptrh,c
  1213  001046                     	if	0	;There are less than 3 active tblptr bytes
  1214  001046                     	endif
  1215  001046  0008               	tblrd		*
  1216  001048  CFF5 FF8C          	movff	tablat,3980	;volatile
  1217                           
  1218                           ;main.c: 241: LATBbits.LATB1 = 1;
  1219  00104C  828A               	bsf	3978,1,c	;volatile
  1220                           
  1221                           ;main.c: 242: _delay((unsigned long)((1)*(16000000/4000.0)));
  1222  00104E  0E06               	movlw	6
  1223  001050  6E01               	movwf	??_DYSPLAY7SEG_Update& (0+255),c
  1224  001052  0E30               	movlw	48
  1225  001054                     i2u28_47:
  1226  001054  2EE8               	decfsz	wreg,f,c
  1227  001056  D7FE               	bra	i2u28_47
  1228  001058  2E01               	decfsz	??_DYSPLAY7SEG_Update& (0+255),f,c
  1229  00105A  D7FC               	bra	i2u28_47
  1230  00105C  D000               	nop2	
  1231                           
  1232                           ;main.c: 243: LATBbits.LATB1 = 0;
  1233  00105E  928A               	bcf	3978,1,c	;volatile
  1234                           
  1235                           ;main.c: 244: LATD = Display7Seg [Centena];
  1236  001060  5016               	movf	_Centena,w,c
  1237  001062  0D01               	mullw	1
  1238  001064  0E01               	movlw	low _Display7Seg
  1239  001066  24F3               	addwf	prodl,w,c
  1240  001068  6EF6               	movwf	tblptrl,c
  1241  00106A  0E10               	movlw	high _Display7Seg
  1242  00106C  20F4               	addwfc	prodh,w,c
  1243  00106E  6EF7               	movwf	tblptrh,c
  1244  001070                     	if	0	;There are less than 3 active tblptr bytes
  1245  001070                     	endif
  1246  001070  0008               	tblrd		*
  1247  001072  CFF5 FF8C          	movff	tablat,3980	;volatile
  1248                           
  1249                           ;main.c: 245: LATBbits.LATB2 = 1;
  1250  001076  848A               	bsf	3978,2,c	;volatile
  1251                           
  1252                           ;main.c: 246: _delay((unsigned long)((1)*(16000000/4000.0)));
  1253  001078  0E06               	movlw	6
  1254  00107A  6E01               	movwf	??_DYSPLAY7SEG_Update& (0+255),c
  1255  00107C  0E30               	movlw	48
  1256  00107E                     i2u29_47:
  1257  00107E  2EE8               	decfsz	wreg,f,c
  1258  001080  D7FE               	bra	i2u29_47
  1259  001082  2E01               	decfsz	??_DYSPLAY7SEG_Update& (0+255),f,c
  1260  001084  D7FC               	bra	i2u29_47
  1261  001086  D000               	nop2	
  1262                           
  1263                           ;main.c: 247: LATBbits.LATB2 = 0;
  1264  001088  948A               	bcf	3978,2,c	;volatile
  1265                           
  1266                           ;main.c: 248: LATD = Display7Seg [Millar];
  1267  00108A  5015               	movf	_Millar,w,c
  1268  00108C  0D01               	mullw	1
  1269  00108E  0E01               	movlw	low _Display7Seg
  1270  001090  24F3               	addwf	prodl,w,c
  1271  001092  6EF6               	movwf	tblptrl,c
  1272  001094  0E10               	movlw	high _Display7Seg
  1273  001096  20F4               	addwfc	prodh,w,c
  1274  001098  6EF7               	movwf	tblptrh,c
  1275  00109A                     	if	0	;There are less than 3 active tblptr bytes
  1276  00109A                     	endif
  1277  00109A  0008               	tblrd		*
  1278  00109C  CFF5 FF8C          	movff	tablat,3980	;volatile
  1279                           
  1280                           ;main.c: 249: LATBbits.LATB3 = 1;
  1281  0010A0  868A               	bsf	3978,3,c	;volatile
  1282                           
  1283                           ;main.c: 250: _delay((unsigned long)((1)*(16000000/4000.0)));
  1284  0010A2  0E06               	movlw	6
  1285  0010A4  6E01               	movwf	??_DYSPLAY7SEG_Update& (0+255),c
  1286  0010A6  0E30               	movlw	48
  1287  0010A8                     i2u30_47:
  1288  0010A8  2EE8               	decfsz	wreg,f,c
  1289  0010AA  D7FE               	bra	i2u30_47
  1290  0010AC  2E01               	decfsz	??_DYSPLAY7SEG_Update& (0+255),f,c
  1291  0010AE  D7FC               	bra	i2u30_47
  1292  0010B0  D000               	nop2	
  1293                           
  1294                           ;main.c: 251: LATBbits.LATB3 = 0;
  1295  0010B2  968A               	bcf	3978,3,c	;volatile
  1296  0010B4  0012               	return		;funcret
  1297  0010B6                     __end_of_DYSPLAY7SEG_Update:
  1298                           	opt stack 0
  1299                           pclatu	equ	0xFFB
  1300                           pclath	equ	0xFFA
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           prodh	equ	0xFF4
  1306                           prodl	equ	0xFF3
  1307                           intcon	equ	0xFF2
  1308                           intcon2	equ	0xFF1
  1309                           postinc0	equ	0xFEE
  1310                           fsr0h	equ	0xFEA
  1311                           fsr0l	equ	0xFE9
  1312                           wreg	equ	0xFE8
  1313                           fsr1h	equ	0xFE2
  1314                           fsr1l	equ	0xFE1
  1315                           fsr2h	equ	0xFDA
  1316                           fsr2l	equ	0xFD9
  1317                           status	equ	0xFD8
  1318                           pclatu	equ	0xFFB
  1319                           pclath	equ	0xFFA
  1320                           tblptru	equ	0xFF8
  1321                           tblptrh	equ	0xFF7
  1322                           tblptrl	equ	0xFF6
  1323                           tablat	equ	0xFF5
  1324                           prodh	equ	0xFF4
  1325                           prodl	equ	0xFF3
  1326                           intcon	equ	0xFF2
  1327                           intcon2	equ	0xFF1
  1328                           postinc0	equ	0xFEE
  1329                           fsr0h	equ	0xFEA
  1330                           fsr0l	equ	0xFE9
  1331                           wreg	equ	0xFE8
  1332                           fsr1h	equ	0xFE2
  1333                           fsr1l	equ	0xFE1
  1334                           fsr2h	equ	0xFDA
  1335                           fsr2l	equ	0xFD9
  1336                           status	equ	0xFD8
  1337                           
  1338                           	psect	rparam
  1339  0000                     pclatu	equ	0xFFB
  1340                           pclath	equ	0xFFA
  1341                           tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           prodh	equ	0xFF4
  1346                           prodl	equ	0xFF3
  1347                           intcon	equ	0xFF2
  1348                           intcon2	equ	0xFF1
  1349                           postinc0	equ	0xFEE
  1350                           fsr0h	equ	0xFEA
  1351                           fsr0l	equ	0xFE9
  1352                           wreg	equ	0xFE8
  1353                           fsr1h	equ	0xFE2
  1354                           fsr1l	equ	0xFE1
  1355                           fsr2h	equ	0xFDA
  1356                           fsr2l	equ	0xFD9
  1357                           status	equ	0xFD8
  1358                           
  1359                           	psect	temp
  1360  000019                     btemp:
  1361                           	opt stack 0
  1362  000019                     	ds	1
  1363  0000                     int$flags	set	btemp
  1364                           pclatu	equ	0xFFB
  1365                           pclath	equ	0xFFA
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           prodh	equ	0xFF4
  1371                           prodl	equ	0xFF3
  1372                           intcon	equ	0xFF2
  1373                           intcon2	equ	0xFF1
  1374                           postinc0	equ	0xFEE
  1375                           fsr0h	equ	0xFEA
  1376                           fsr0l	equ	0xFE9
  1377                           wreg	equ	0xFE8
  1378                           fsr1h	equ	0xFE2
  1379                           fsr1l	equ	0xFE1
  1380                           fsr2h	equ	0xFDA
  1381                           fsr2l	equ	0xFD9
  1382                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     16      24
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_DYSPLAY7SEG_Update

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                             15 COMRAM     1     1      0
                           _GetInput
                           _MCU_Init
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
                          _RTCC_Init
 ---------------------------------------------------------------------------------
 (2) _RTCC_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetInput                                             0     0      0       0
             _DYSPLAY7SEG_Decremento
             _DYSPLAY7SEG_Incremento
 ---------------------------------------------------------------------------------
 (2) _DYSPLAY7SEG_Incremento                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DYSPLAY7SEG_Decremento                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 14    14      0       0
                                              1 COMRAM    14    14      0
                 _DYSPLAY7SEG_Update
 ---------------------------------------------------------------------------------
 (4) _DYSPLAY7SEG_Update                                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetInput
     _DYSPLAY7SEG_Decremento
     _DYSPLAY7SEG_Incremento
   _MCU_Init
     _RTCC_Init

 _ISR (ROOT)
   _DYSPLAY7SEG_Update

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     10      18       1       19.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      34        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Aug 15 23:53:17 2020

                             l98 12E4                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l102 12FC  
                            l108 1312                              l804 117C  
                            l814 1194                              l824 11AC  
                            l808 1188                              l832 11CA  
                            l842 11F4                              l818 11A0  
                            l852 120C                              l836 11E8  
                            l828 11B8                              l862 1224  
                            l846 1200                              l934 12F8  
                            l926 12E0                              l872 123C  
                            l856 1218                              l880 125A  
                            l944 1318                              l866 1230  
                            l794 1164                              l946 131C  
                            l876 1248                              l788 1158  
                            l798 1170                              l968 1364  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            u267 136E                              _ISR 0008  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   __CFG_LVP$OFF 000000                             ?_ISR 0001  
                   __CFG_WDT$OFF 000000                             _LATD 000F8C  
                           i2l81 111A               _DYSPLAY7SEG_Update 100C  
                   __CFG_PWRT$ON 000000                    __CFG_FCMEN$ON 000000  
                           _main 1360                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           fsr0l 000FE9                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0019  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E              ?_DYSPLAY7SEG_Update 0001  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                          ??_ISR 0002              __end_of_Display7Seg 100B  
                          ?_main 0001                   __CFG_DEBUG$OFF 000000  
               __end_of_MCU_Init 12CC                            i2l958 1110  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
                          _PORTA 000F80                            _PORTB 000F81  
                          _PORTC 000F82                            _PORTD 000F83  
                          _PORTE 000F84                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
           ??_DYSPLAY7SEG_Update 0001                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000               __size_of_RTCC_Init 0024  
                 __CFG_EBTRB$OFF 000000                   __CFG_BOREN$OFF 000000  
                          pclath 000FFA                            tablat 000FF5  
                          status 000FD8                 __end_of_GetInput 1322  
                __initialization 1346                     __end_of_main 137A  
                         ??_main 0010                    __activetblptr 000002  
                         _ADCON1 000FC1                           _Decena 0017  
                    _Display7Seg 1001                           _Millar 0015  
                 __CFG_XINST$OFF 000000                           _Unidad 0018  
              __end_of_RTCC_Init 1346              _currentDisplayState 0014  
                         clear_0 134C                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                       __accesstop 0080  
        __end_of__initialization 1352                    ___rparam_used 000001  
                      ?_MCU_Init 0001                   __pcstackCOMRAM 0001  
                      ?_GetInput 0001                       ??_MCU_Init 0010  
       ??_DYSPLAY7SEG_Decremento 0010                          i2u30_47 10A8  
                        i2u25_40 1104                          i2u27_47 102A  
                        i2u28_47 1054                          i2u29_47 107E  
                     ??_GetInput 0010                          _Centena 0016  
                        __Hparam 0000                          __Lparam 0000  
                   __psmallconst 1000         ??_DYSPLAY7SEG_Incremento 0010  
                        __pcinit 1346                          __ramtop 1000  
                        __ptext0 1360                          __ptext1 1276  
                        __ptext2 1322                          __ptext3 12CC  
                        __ptext4 1156                          __ptext5 11E6  
                        __ptext7 100C                        _T0CONbits 000FD5  
                   __size_of_ISR 114E      __size_of_DYSPLAY7SEG_Update 00AA  
                 __pintcode_body 10B6             end_of_initialization 1352  
                  __Lmediumconst 0000                          int_func 10B6  
__size_of_DYSPLAY7SEG_Decremento 0090                          postinc0 000FEE  
                      _RTCC_Init 1322                        _PORTEbits 000F84  
              __size_of_MCU_Init 0056                       ?_RTCC_Init 0001  
__size_of_DYSPLAY7SEG_Incremento 0090              start_initialization 1346  
                    __end_of_ISR 1156           _DYSPLAY7SEG_Decremento 11E6  
              __size_of_GetInput 0056                 __CFG_OSC$INTIO67 000000  
                    __pbssCOMRAM 0011           _DYSPLAY7SEG_Incremento 1156  
                      __pintcode 0008                      ??_RTCC_Init 0010  
                    __smallconst 1000                         _LATBbits 000F8A  
                       _MCU_Init 1276                         _RCONbits 000FD0  
     __end_of_DYSPLAY7SEG_Update 10B6                         _GetInput 12CC  
                    _INTCON2bits 000FF1                         __Hrparam 0000  
                       __Lrparam 0000          ?_DYSPLAY7SEG_Decremento 0001  
                    _buttonTicks 0013                    __size_of_main 001A  
                       int$flags 0019   __end_of_DYSPLAY7SEG_Decremento 1276  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
        ?_DYSPLAY7SEG_Incremento 0001                         intlevel2 0000  
                     _OSCCONbits 000FD3   __end_of_DYSPLAY7SEG_Incremento 11E6  
                     _RTCC_Count 0011  
