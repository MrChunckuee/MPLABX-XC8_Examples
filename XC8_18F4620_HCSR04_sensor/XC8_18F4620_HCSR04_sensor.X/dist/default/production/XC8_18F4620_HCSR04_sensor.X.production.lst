

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Aug 15 23:27:12 2020

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1  0000                     
     2                           ; Version 1.42
     3                           ; Generated 13/04/2017 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4620 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     setc   macro
     4                           	bsf	status,0
     5                           endm
     6  0000                     clrz   macro
     7                           	bcf	status,2
     8                           endm
     9  0000                     setz   macro
    10                           	bsf	status,2
    11                           endm
    12  0000                     skipnz macro
    13                           	btfsc	status,2
    14                           endm
    15  0000                     skipz  macro
    16                           	btfss	status,2
    17                           endm
    18  0000                     skipnc macro
    19                           	btfsc	status,0
    20                           endm
    21  0000                     skipc  macro
    22                           	btfss	status,0
    23                           endm
    24  0000                     pushw macro
    25                           	movwf postinc1
    26                           endm
    27  0000                     pushf macro arg1
    28                           	movff arg1, postinc1
    29                           endm
    30  0000                     popw macro
    31                           	movf postdec1,f
    32                           	movf indf1,w
    33                           endm
    34  0000                     popf macro arg1
    35                           	movf postdec1,f
    36                           	movff indf1,arg1
    37                           endm
    38  0000                     popfc macro arg1
    39                           	movff plusw1,arg1
    40                           	decfsz fsr1,f
    41                           endm
    42  0000                     	global	__ramtop
    43                           	global	__accesstop
    44                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    45                           PORTA equ 0F80h ;# 
    46  0000                     # 189 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    47                           PORTB equ 0F81h ;# 
    48  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    49                           PORTC equ 0F82h ;# 
    50  0000                     # 535 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    51                           PORTD equ 0F83h ;# 
    52  0000                     # 677 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    53                           PORTE equ 0F84h ;# 
    54  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    55                           LATA equ 0F89h ;# 
    56  0000                     # 992 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    57                           LATB equ 0F8Ah ;# 
    58  0000                     # 1104 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    59                           LATC equ 0F8Bh ;# 
    60  0000                     # 1216 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    61                           LATD equ 0F8Ch ;# 
    62  0000                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    63                           LATE equ 0F8Dh ;# 
    64  0000                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    65                           TRISA equ 0F92h ;# 
    66  0000                     # 1385 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    67                           DDRA equ 0F92h ;# 
    68  0000                     # 1602 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    69                           TRISB equ 0F93h ;# 
    70  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    71                           DDRB equ 0F93h ;# 
    72  0000                     # 1824 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    73                           TRISC equ 0F94h ;# 
    74  0000                     # 1829 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    75                           DDRC equ 0F94h ;# 
    76  0000                     # 2046 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    77                           TRISD equ 0F95h ;# 
    78  0000                     # 2051 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    79                           DDRD equ 0F95h ;# 
    80  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    81                           TRISE equ 0F96h ;# 
    82  0000                     # 2273 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    83                           DDRE equ 0F96h ;# 
    84  0000                     # 2432 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    85                           OSCTUNE equ 0F9Bh ;# 
    86  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    87                           PIE1 equ 0F9Dh ;# 
    88  0000                     # 2574 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    89                           PIR1 equ 0F9Eh ;# 
    90  0000                     # 2651 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    91                           IPR1 equ 0F9Fh ;# 
    92  0000                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    93                           PIE2 equ 0FA0h ;# 
    94  0000                     # 2794 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    95                           PIR2 equ 0FA1h ;# 
    96  0000                     # 2860 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    97                           IPR2 equ 0FA2h ;# 
    98  0000                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
    99                           EECON1 equ 0FA6h ;# 
   100  0000                     # 2992 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   101                           EECON2 equ 0FA7h ;# 
   102  0000                     # 2999 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   103                           EEDATA equ 0FA8h ;# 
   104  0000                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   105                           EEADR equ 0FA9h ;# 
   106  0000                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   107                           EEADRH equ 0FAAh ;# 
   108  0000                     # 3020 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   109                           RCSTA equ 0FABh ;# 
   110  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   111                           RCSTA1 equ 0FABh ;# 
   112  0000                     # 3230 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   113                           TXSTA equ 0FACh ;# 
   114  0000                     # 3235 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   115                           TXSTA1 equ 0FACh ;# 
   116  0000                     # 3486 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   117                           TXREG equ 0FADh ;# 
   118  0000                     # 3491 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   119                           TXREG1 equ 0FADh ;# 
   120  0000                     # 3498 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   121                           RCREG equ 0FAEh ;# 
   122  0000                     # 3503 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   123                           RCREG1 equ 0FAEh ;# 
   124  0000                     # 3510 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   125                           SPBRG equ 0FAFh ;# 
   126  0000                     # 3515 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   127                           SPBRG1 equ 0FAFh ;# 
   128  0000                     # 3522 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   129                           SPBRGH equ 0FB0h ;# 
   130  0000                     # 3529 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   131                           T3CON equ 0FB1h ;# 
   132  0000                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   133                           TMR3 equ 0FB2h ;# 
   134  0000                     # 3648 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   135                           TMR3L equ 0FB2h ;# 
   136  0000                     # 3655 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   137                           TMR3H equ 0FB3h ;# 
   138  0000                     # 3662 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   139                           CMCON equ 0FB4h ;# 
   140  0000                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   141                           CVRCON equ 0FB5h ;# 
   142  0000                     # 3831 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   143                           ECCP1AS equ 0FB6h ;# 
   144  0000                     # 3913 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   145                           PWM1CON equ 0FB7h ;# 
   146  0000                     # 3983 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   147                           BAUDCON equ 0FB8h ;# 
   148  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   149                           BAUDCTL equ 0FB8h ;# 
   150  0000                     # 4155 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   151                           CCP2CON equ 0FBAh ;# 
   152  0000                     # 4234 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   153                           CCPR2 equ 0FBBh ;# 
   154  0000                     # 4241 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   155                           CCPR2L equ 0FBBh ;# 
   156  0000                     # 4248 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   157                           CCPR2H equ 0FBCh ;# 
   158  0000                     # 4255 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   159                           CCP1CON equ 0FBDh ;# 
   160  0000                     # 4352 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   161                           CCPR1 equ 0FBEh ;# 
   162  0000                     # 4359 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   163                           CCPR1L equ 0FBEh ;# 
   164  0000                     # 4366 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   165                           CCPR1H equ 0FBFh ;# 
   166  0000                     # 4373 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   167                           ADCON2 equ 0FC0h ;# 
   168  0000                     # 4444 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   169                           ADCON1 equ 0FC1h ;# 
   170  0000                     # 4529 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   171                           ADCON0 equ 0FC2h ;# 
   172  0000                     # 4648 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   173                           ADRES equ 0FC3h ;# 
   174  0000                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   175                           ADRESL equ 0FC3h ;# 
   176  0000                     # 4662 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   177                           ADRESH equ 0FC4h ;# 
   178  0000                     # 4669 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   179                           SSPCON2 equ 0FC5h ;# 
   180  0000                     # 4731 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   181                           SSPCON1 equ 0FC6h ;# 
   182  0000                     # 4801 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   183                           SSPSTAT equ 0FC7h ;# 
   184  0000                     # 5022 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   185                           SSPADD equ 0FC8h ;# 
   186  0000                     # 5029 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   187                           SSPBUF equ 0FC9h ;# 
   188  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   189                           T2CON equ 0FCAh ;# 
   190  0000                     # 5107 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   191                           PR2 equ 0FCBh ;# 
   192  0000                     # 5112 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   193                           MEMCON equ 0FCBh ;# 
   194  0000                     # 5217 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   195                           TMR2 equ 0FCCh ;# 
   196  0000                     # 5224 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   197                           T1CON equ 0FCDh ;# 
   198  0000                     # 5327 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   199                           TMR1 equ 0FCEh ;# 
   200  0000                     # 5334 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   201                           TMR1L equ 0FCEh ;# 
   202  0000                     # 5341 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   203                           TMR1H equ 0FCFh ;# 
   204  0000                     # 5348 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   205                           RCON equ 0FD0h ;# 
   206  0000                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   207                           WDTCON equ 0FD1h ;# 
   208  0000                     # 5509 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   209                           HLVDCON equ 0FD2h ;# 
   210  0000                     # 5514 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   211                           LVDCON equ 0FD2h ;# 
   212  0000                     # 5779 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   213                           OSCCON equ 0FD3h ;# 
   214  0000                     # 5856 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   215                           T0CON equ 0FD5h ;# 
   216  0000                     # 5933 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   217                           TMR0 equ 0FD6h ;# 
   218  0000                     # 5940 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   219                           TMR0L equ 0FD6h ;# 
   220  0000                     # 5947 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   221                           TMR0H equ 0FD7h ;# 
   222  0000                     # 5954 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   223                           STATUS equ 0FD8h ;# 
   224  0000                     # 6025 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   225                           FSR2 equ 0FD9h ;# 
   226  0000                     # 6032 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   227                           FSR2L equ 0FD9h ;# 
   228  0000                     # 6039 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   229                           FSR2H equ 0FDAh ;# 
   230  0000                     # 6046 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   231                           PLUSW2 equ 0FDBh ;# 
   232  0000                     # 6053 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   233                           PREINC2 equ 0FDCh ;# 
   234  0000                     # 6060 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   235                           POSTDEC2 equ 0FDDh ;# 
   236  0000                     # 6067 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   237                           POSTINC2 equ 0FDEh ;# 
   238  0000                     # 6074 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   239                           INDF2 equ 0FDFh ;# 
   240  0000                     # 6081 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   241                           BSR equ 0FE0h ;# 
   242  0000                     # 6088 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   243                           FSR1 equ 0FE1h ;# 
   244  0000                     # 6095 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   245                           FSR1L equ 0FE1h ;# 
   246  0000                     # 6102 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   247                           FSR1H equ 0FE2h ;# 
   248  0000                     # 6109 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   249                           PLUSW1 equ 0FE3h ;# 
   250  0000                     # 6116 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   251                           PREINC1 equ 0FE4h ;# 
   252  0000                     # 6123 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   253                           POSTDEC1 equ 0FE5h ;# 
   254  0000                     # 6130 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   255                           POSTINC1 equ 0FE6h ;# 
   256  0000                     # 6137 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   257                           INDF1 equ 0FE7h ;# 
   258  0000                     # 6144 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   259                           WREG equ 0FE8h ;# 
   260  0000                     # 6156 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   261                           FSR0 equ 0FE9h ;# 
   262  0000                     # 6163 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   263                           FSR0L equ 0FE9h ;# 
   264  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   265                           FSR0H equ 0FEAh ;# 
   266  0000                     # 6177 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   267                           PLUSW0 equ 0FEBh ;# 
   268  0000                     # 6184 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   269                           PREINC0 equ 0FECh ;# 
   270  0000                     # 6191 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   271                           POSTDEC0 equ 0FEDh ;# 
   272  0000                     # 6198 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   273                           POSTINC0 equ 0FEEh ;# 
   274  0000                     # 6205 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   275                           INDF0 equ 0FEFh ;# 
   276  0000                     # 6212 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   277                           INTCON3 equ 0FF0h ;# 
   278  0000                     # 6304 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   279                           INTCON2 equ 0FF1h ;# 
   280  0000                     # 6374 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   281                           INTCON equ 0FF2h ;# 
   282  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   283                           PROD equ 0FF3h ;# 
   284  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   285                           PRODL equ 0FF3h ;# 
   286  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   287                           PRODH equ 0FF4h ;# 
   288  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   289                           TABLAT equ 0FF5h ;# 
   290  0000                     # 6521 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   291                           TBLPTR equ 0FF6h ;# 
   292  0000                     # 6528 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   293                           TBLPTRL equ 0FF6h ;# 
   294  0000                     # 6535 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   295                           TBLPTRH equ 0FF7h ;# 
   296  0000                     # 6542 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   297                           TBLPTRU equ 0FF8h ;# 
   298  0000                     # 6551 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   299                           PCLAT equ 0FF9h ;# 
   300  0000                     # 6558 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   301                           PC equ 0FF9h ;# 
   302  0000                     # 6565 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   303                           PCL equ 0FF9h ;# 
   304  0000                     # 6572 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   305                           PCLATH equ 0FFAh ;# 
   306  0000                     # 6579 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   307                           PCLATU equ 0FFBh ;# 
   308  0000                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   309                           STKPTR equ 0FFCh ;# 
   310  0000                     # 6692 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   311                           TOS equ 0FFDh ;# 
   312  0000                     # 6699 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   313                           TOSL equ 0FFDh ;# 
   314  0000                     # 6706 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   315                           TOSH equ 0FFEh ;# 
   316  0000                     # 6713 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   317                           TOSU equ 0FFFh ;# 
   318  0000                     # 52 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   319                           PORTA equ 0F80h ;# 
   320  0000                     # 189 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   321                           PORTB equ 0F81h ;# 
   322  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   323                           PORTC equ 0F82h ;# 
   324  0000                     # 535 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   325                           PORTD equ 0F83h ;# 
   326  0000                     # 677 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   327                           PORTE equ 0F84h ;# 
   328  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   329                           LATA equ 0F89h ;# 
   330  0000                     # 992 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   331                           LATB equ 0F8Ah ;# 
   332  0000                     # 1104 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   333                           LATC equ 0F8Bh ;# 
   334  0000                     # 1216 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   335                           LATD equ 0F8Ch ;# 
   336  0000                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   337                           LATE equ 0F8Dh ;# 
   338  0000                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   339                           TRISA equ 0F92h ;# 
   340  0000                     # 1385 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   341                           DDRA equ 0F92h ;# 
   342  0000                     # 1602 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   343                           TRISB equ 0F93h ;# 
   344  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   345                           DDRB equ 0F93h ;# 
   346  0000                     # 1824 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   347                           TRISC equ 0F94h ;# 
   348  0000                     # 1829 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   349                           DDRC equ 0F94h ;# 
   350  0000                     # 2046 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   351                           TRISD equ 0F95h ;# 
   352  0000                     # 2051 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   353                           DDRD equ 0F95h ;# 
   354  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   355                           TRISE equ 0F96h ;# 
   356  0000                     # 2273 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   357                           DDRE equ 0F96h ;# 
   358  0000                     # 2432 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   359                           OSCTUNE equ 0F9Bh ;# 
   360  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   361                           PIE1 equ 0F9Dh ;# 
   362  0000                     # 2574 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   363                           PIR1 equ 0F9Eh ;# 
   364  0000                     # 2651 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   365                           IPR1 equ 0F9Fh ;# 
   366  0000                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   367                           PIE2 equ 0FA0h ;# 
   368  0000                     # 2794 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   369                           PIR2 equ 0FA1h ;# 
   370  0000                     # 2860 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   371                           IPR2 equ 0FA2h ;# 
   372  0000                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   373                           EECON1 equ 0FA6h ;# 
   374  0000                     # 2992 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   375                           EECON2 equ 0FA7h ;# 
   376  0000                     # 2999 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   377                           EEDATA equ 0FA8h ;# 
   378  0000                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   379                           EEADR equ 0FA9h ;# 
   380  0000                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   381                           EEADRH equ 0FAAh ;# 
   382  0000                     # 3020 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   383                           RCSTA equ 0FABh ;# 
   384  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   385                           RCSTA1 equ 0FABh ;# 
   386  0000                     # 3230 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   387                           TXSTA equ 0FACh ;# 
   388  0000                     # 3235 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   389                           TXSTA1 equ 0FACh ;# 
   390  0000                     # 3486 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   391                           TXREG equ 0FADh ;# 
   392  0000                     # 3491 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   393                           TXREG1 equ 0FADh ;# 
   394  0000                     # 3498 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   395                           RCREG equ 0FAEh ;# 
   396  0000                     # 3503 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   397                           RCREG1 equ 0FAEh ;# 
   398  0000                     # 3510 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   399                           SPBRG equ 0FAFh ;# 
   400  0000                     # 3515 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   401                           SPBRG1 equ 0FAFh ;# 
   402  0000                     # 3522 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   403                           SPBRGH equ 0FB0h ;# 
   404  0000                     # 3529 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   405                           T3CON equ 0FB1h ;# 
   406  0000                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   407                           TMR3 equ 0FB2h ;# 
   408  0000                     # 3648 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   409                           TMR3L equ 0FB2h ;# 
   410  0000                     # 3655 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   411                           TMR3H equ 0FB3h ;# 
   412  0000                     # 3662 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   413                           CMCON equ 0FB4h ;# 
   414  0000                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   415                           CVRCON equ 0FB5h ;# 
   416  0000                     # 3831 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   417                           ECCP1AS equ 0FB6h ;# 
   418  0000                     # 3913 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   419                           PWM1CON equ 0FB7h ;# 
   420  0000                     # 3983 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   421                           BAUDCON equ 0FB8h ;# 
   422  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   423                           BAUDCTL equ 0FB8h ;# 
   424  0000                     # 4155 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   425                           CCP2CON equ 0FBAh ;# 
   426  0000                     # 4234 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   427                           CCPR2 equ 0FBBh ;# 
   428  0000                     # 4241 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   429                           CCPR2L equ 0FBBh ;# 
   430  0000                     # 4248 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   431                           CCPR2H equ 0FBCh ;# 
   432  0000                     # 4255 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   433                           CCP1CON equ 0FBDh ;# 
   434  0000                     # 4352 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   435                           CCPR1 equ 0FBEh ;# 
   436  0000                     # 4359 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   437                           CCPR1L equ 0FBEh ;# 
   438  0000                     # 4366 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   439                           CCPR1H equ 0FBFh ;# 
   440  0000                     # 4373 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   441                           ADCON2 equ 0FC0h ;# 
   442  0000                     # 4444 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   443                           ADCON1 equ 0FC1h ;# 
   444  0000                     # 4529 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   445                           ADCON0 equ 0FC2h ;# 
   446  0000                     # 4648 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   447                           ADRES equ 0FC3h ;# 
   448  0000                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   449                           ADRESL equ 0FC3h ;# 
   450  0000                     # 4662 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   451                           ADRESH equ 0FC4h ;# 
   452  0000                     # 4669 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   453                           SSPCON2 equ 0FC5h ;# 
   454  0000                     # 4731 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   455                           SSPCON1 equ 0FC6h ;# 
   456  0000                     # 4801 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   457                           SSPSTAT equ 0FC7h ;# 
   458  0000                     # 5022 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   459                           SSPADD equ 0FC8h ;# 
   460  0000                     # 5029 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   461                           SSPBUF equ 0FC9h ;# 
   462  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   463                           T2CON equ 0FCAh ;# 
   464  0000                     # 5107 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   465                           PR2 equ 0FCBh ;# 
   466  0000                     # 5112 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   467                           MEMCON equ 0FCBh ;# 
   468  0000                     # 5217 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   469                           TMR2 equ 0FCCh ;# 
   470  0000                     # 5224 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   471                           T1CON equ 0FCDh ;# 
   472  0000                     # 5327 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   473                           TMR1 equ 0FCEh ;# 
   474  0000                     # 5334 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   475                           TMR1L equ 0FCEh ;# 
   476  0000                     # 5341 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   477                           TMR1H equ 0FCFh ;# 
   478  0000                     # 5348 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   479                           RCON equ 0FD0h ;# 
   480  0000                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   481                           WDTCON equ 0FD1h ;# 
   482  0000                     # 5509 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   483                           HLVDCON equ 0FD2h ;# 
   484  0000                     # 5514 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   485                           LVDCON equ 0FD2h ;# 
   486  0000                     # 5779 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   487                           OSCCON equ 0FD3h ;# 
   488  0000                     # 5856 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   489                           T0CON equ 0FD5h ;# 
   490  0000                     # 5933 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   491                           TMR0 equ 0FD6h ;# 
   492  0000                     # 5940 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   493                           TMR0L equ 0FD6h ;# 
   494  0000                     # 5947 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   495                           TMR0H equ 0FD7h ;# 
   496  0000                     # 5954 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   497                           STATUS equ 0FD8h ;# 
   498  0000                     # 6025 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   499                           FSR2 equ 0FD9h ;# 
   500  0000                     # 6032 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   501                           FSR2L equ 0FD9h ;# 
   502  0000                     # 6039 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   503                           FSR2H equ 0FDAh ;# 
   504  0000                     # 6046 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   505                           PLUSW2 equ 0FDBh ;# 
   506  0000                     # 6053 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   507                           PREINC2 equ 0FDCh ;# 
   508  0000                     # 6060 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   509                           POSTDEC2 equ 0FDDh ;# 
   510  0000                     # 6067 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   511                           POSTINC2 equ 0FDEh ;# 
   512  0000                     # 6074 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   513                           INDF2 equ 0FDFh ;# 
   514  0000                     # 6081 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   515                           BSR equ 0FE0h ;# 
   516  0000                     # 6088 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   517                           FSR1 equ 0FE1h ;# 
   518  0000                     # 6095 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   519                           FSR1L equ 0FE1h ;# 
   520  0000                     # 6102 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   521                           FSR1H equ 0FE2h ;# 
   522  0000                     # 6109 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   523                           PLUSW1 equ 0FE3h ;# 
   524  0000                     # 6116 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   525                           PREINC1 equ 0FE4h ;# 
   526  0000                     # 6123 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   527                           POSTDEC1 equ 0FE5h ;# 
   528  0000                     # 6130 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   529                           POSTINC1 equ 0FE6h ;# 
   530  0000                     # 6137 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   531                           INDF1 equ 0FE7h ;# 
   532  0000                     # 6144 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   533                           WREG equ 0FE8h ;# 
   534  0000                     # 6156 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   535                           FSR0 equ 0FE9h ;# 
   536  0000                     # 6163 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   537                           FSR0L equ 0FE9h ;# 
   538  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   539                           FSR0H equ 0FEAh ;# 
   540  0000                     # 6177 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   541                           PLUSW0 equ 0FEBh ;# 
   542  0000                     # 6184 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   543                           PREINC0 equ 0FECh ;# 
   544  0000                     # 6191 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   545                           POSTDEC0 equ 0FEDh ;# 
   546  0000                     # 6198 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   547                           POSTINC0 equ 0FEEh ;# 
   548  0000                     # 6205 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   549                           INDF0 equ 0FEFh ;# 
   550  0000                     # 6212 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   551                           INTCON3 equ 0FF0h ;# 
   552  0000                     # 6304 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   553                           INTCON2 equ 0FF1h ;# 
   554  0000                     # 6374 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   555                           INTCON equ 0FF2h ;# 
   556  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   557                           PROD equ 0FF3h ;# 
   558  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   559                           PRODL equ 0FF3h ;# 
   560  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   561                           PRODH equ 0FF4h ;# 
   562  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   563                           TABLAT equ 0FF5h ;# 
   564  0000                     # 6521 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   565                           TBLPTR equ 0FF6h ;# 
   566  0000                     # 6528 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   567                           TBLPTRL equ 0FF6h ;# 
   568  0000                     # 6535 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   569                           TBLPTRH equ 0FF7h ;# 
   570  0000                     # 6542 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   571                           TBLPTRU equ 0FF8h ;# 
   572  0000                     # 6551 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   573                           PCLAT equ 0FF9h ;# 
   574  0000                     # 6558 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   575                           PC equ 0FF9h ;# 
   576  0000                     # 6565 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   577                           PCL equ 0FF9h ;# 
   578  0000                     # 6572 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   579                           PCLATH equ 0FFAh ;# 
   580  0000                     # 6579 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   581                           PCLATU equ 0FFBh ;# 
   582  0000                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   583                           STKPTR equ 0FFCh ;# 
   584  0000                     # 6692 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   585                           TOS equ 0FFDh ;# 
   586  0000                     # 6699 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   587                           TOSL equ 0FFDh ;# 
   588  0000                     # 6706 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   589                           TOSH equ 0FFEh ;# 
   590  0000                     # 6713 "C:\Program Files (x86)\Microchip\xc8\v1.42\include\pic18f4620.h"
   591                           TOSU equ 0FFFh ;# 
   592  0000                     	FNCALL	_main,_HCSR04_GetDistance
   593                           	FNCALL	_main,_LCD_Init
   594                           	FNCALL	_main,_LCD_Write
   595                           	FNCALL	_main,_LCD_putrs
   596                           	FNCALL	_main,_LCD_puts
   597                           	FNCALL	_main,_MCU_Init
   598                           	FNCALL	_main,_itoa
   599                           	FNCALL	_itoa,_utoa
   600                           	FNCALL	_utoa,___lwdiv
   601                           	FNCALL	_utoa,___lwmod
   602                           	FNCALL	_LCD_puts,_LCD_putc
   603                           	FNCALL	_LCD_putrs,_LCD_putc
   604                           	FNCALL	_LCD_putc,_LCD_Out
   605                           	FNCALL	_LCD_Init,_LCD_Write
   606                           	FNCALL	_LCD_Write,_LCD_Out
   607                           	FNROOT	_main
   608                           	global	main@F3124
   609                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   610                           global __pidataCOMRAM
   611                           __pidataCOMRAM:
   612  001CCA                     	file	"main.c"
   613                           	line	44
   614                           
   615                           ;initializer for main@F3124
   616                           		db	low(3969)
   617  001CCA  81                 	db	high(3969)
   618  001CCB  0F                 
   619                           	db	low(08h)
   620  001CCC  08                 	db	low(02Ch)
   621  001CCD  2C                 	db	low(03Eh)
   622  001CCE  3E                 	global	_lcd
   623                           	global	_distance
   624                           	global	_lcdDistance
   625                           	global	_PORTDbits
   626                           _PORTDbits	set	0xF83
   627  0000                     	global	_LATDbits
   628                           _LATDbits	set	0xF8C
   629  0000                     	global	_TRISD
   630                           _TRISD	set	0xF95
   631  0000                     	global	_PORTD
   632                           _PORTD	set	0xF83
   633  0000                     	global	_ADCON1
   634                           _ADCON1	set	0xFC1
   635  0000                     	global	_OSCCONbits
   636                           _OSCCONbits	set	0xFD3
   637  0000                     	global	_TRISC
   638                           _TRISC	set	0xF94
   639  0000                     	global	_PORTC
   640                           _PORTC	set	0xF82
   641  0000                     	global	_TRISB
   642                           _TRISB	set	0xF93
   643  0000                     	global	_TRISA
   644                           _TRISA	set	0xF92
   645  0000                     	global	_PORTA
   646                           _PORTA	set	0xF80
   647  0000                     	global	_PORTB
   648                           _PORTB	set	0xF81
   649  0000                     	global	_TRISD0
   650                           _TRISD0	set	0x7CA8
   651  0000                     	global	_TRISD1
   652                           _TRISD1	set	0x7CA9
   653  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   654                           global __psmallconst
   655                           __psmallconst:
   656  001000                     	db	0
   657  001000  00                 	
   658                           STR_2:
   659  001001                     	db	32
   660  001001  20                 	db	83	;'S'
   661  001002  53                 	db	101	;'e'
   662  001003  65                 	db	110	;'n'
   663  001004  6E                 	db	115	;'s'
   664  001005  73                 	db	111	;'o'
   665  001006  6F                 	db	114	;'r'
   666  001007  72                 	db	32
   667  001008  20                 	db	72	;'H'
   668  001009  48                 	db	67	;'C'
   669  00100A  43                 	db	45
   670  00100B  2D                 	db	83	;'S'
   671  00100C  53                 	db	82	;'R'
   672  00100D  52                 	db	48	;'0'
   673  00100E  30                 	db	52	;'4'
   674  00100F  34                 	db	0
   675  001010  00                 	
   676                           STR_1:
   677  001011                     	db	32
   678  001011  20                 	db	77	;'M'
   679  001012  4D                 	db	114	;'r'
   680  001013  72                 	db	67	;'C'
   681  001014  43                 	db	104	;'h'
   682  001015  68                 	db	117	;'u'
   683  001016  75                 	db	110	;'n'
   684  001017  6E                 	db	99	;'c'
   685  001018  63                 	db	107	;'k'
   686  001019  6B                 	db	117	;'u'
   687  00101A  75                 	db	101	;'e'
   688  00101B  65                 	db	101	;'e'
   689  00101C  65                 	db	33
   690  00101D  21                 	db	33
   691  00101E  21                 	db	0
   692  00101F  00                 	
   693                           STR_4:
   694  001020                     	db	70	;'F'
   695  001020  46                 	db	117	;'u'
   696  001021  75                 	db	101	;'e'
   697  001022  65                 	db	114	;'r'
   698  001023  72                 	db	97	;'a'
   699  001024  61                 	db	32
   700  001025  20                 	db	100	;'d'
   701  001026  64                 	db	101	;'e'
   702  001027  65                 	db	32
   703  001028  20                 	db	114	;'r'
   704  001029  72                 	db	97	;'a'
   705  00102A  61                 	db	110	;'n'
   706  00102B  6E                 	db	103	;'g'
   707  00102C  67                 	db	111	;'o'
   708  00102D  6F                 	db	0
   709  00102E  00                 	
   710                           STR_6:
   711  00102F                     	db	99	;'c'
   712  00102F  63                 	db	109	;'m'
   713  001030  6D                 	db	0
   714  001031  00                 STR_3	equ	STR_2+1
   715  0000                     STR_5	equ	STR_2+1
   716  0000                     ; #config settings
   717                           global __CFG_OSC$INTIO67
   718                           __CFG_OSC$INTIO67 equ 0x0
   719  0000                     global __CFG_FCMEN$ON
   720                           __CFG_FCMEN$ON equ 0x0
   721  0000                     global __CFG_IESO$ON
   722                           __CFG_IESO$ON equ 0x0
   723  0000                     global __CFG_PWRT$ON
   724                           __CFG_PWRT$ON equ 0x0
   725  0000                     global __CFG_BOREN$OFF
   726                           __CFG_BOREN$OFF equ 0x0
   727  0000                     global __CFG_WDT$OFF
   728                           __CFG_WDT$OFF equ 0x0
   729  0000                     global __CFG_MCLRE$ON
   730                           __CFG_MCLRE$ON equ 0x0
   731  0000                     global __CFG_LVP$OFF
   732                           __CFG_LVP$OFF equ 0x0
   733  0000                     global __CFG_XINST$OFF
   734                           __CFG_XINST$OFF equ 0x0
   735  0000                     global __CFG_DEBUG$OFF
   736                           __CFG_DEBUG$OFF equ 0x0
   737  0000                     global __CFG_CP0$OFF
   738                           __CFG_CP0$OFF equ 0x0
   739  0000                     global __CFG_CP1$OFF
   740                           __CFG_CP1$OFF equ 0x0
   741  0000                     global __CFG_CP2$OFF
   742                           __CFG_CP2$OFF equ 0x0
   743  0000                     global __CFG_CP3$OFF
   744                           __CFG_CP3$OFF equ 0x0
   745  0000                     global __CFG_CPB$OFF
   746                           __CFG_CPB$OFF equ 0x0
   747  0000                     global __CFG_CPD$OFF
   748                           __CFG_CPD$OFF equ 0x0
   749  0000                     global __CFG_WRT0$OFF
   750                           __CFG_WRT0$OFF equ 0x0
   751  0000                     global __CFG_WRT1$OFF
   752                           __CFG_WRT1$OFF equ 0x0
   753  0000                     global __CFG_WRT3$OFF
   754                           __CFG_WRT3$OFF equ 0x0
   755  0000                     global __CFG_WRTC$OFF
   756                           __CFG_WRTC$OFF equ 0x0
   757  0000                     global __CFG_WRTB$OFF
   758                           __CFG_WRTB$OFF equ 0x0
   759  0000                     global __CFG_WRTD$OFF
   760                           __CFG_WRTD$OFF equ 0x0
   761  0000                     global __CFG_EBTR0$OFF
   762                           __CFG_EBTR0$OFF equ 0x0
   763  0000                     global __CFG_EBTR1$OFF
   764                           __CFG_EBTR1$OFF equ 0x0
   765  0000                     global __CFG_EBTR2$OFF
   766                           __CFG_EBTR2$OFF equ 0x0
   767  0000                     global __CFG_EBTR3$OFF
   768                           __CFG_EBTR3$OFF equ 0x0
   769  0000                     global __CFG_EBTRB$OFF
   770                           __CFG_EBTRB$OFF equ 0x0
   771  0000                     	file	"C:\Users\MRCHU_~1\AppData\Local\Temp\s9u8."
   772                           	line	#
   773                           psect	cinit,class=CODE,delta=1,reloc=2
   774                           global __pcinit
   775                           __pcinit:
   776  001C62                     global start_initialization
   777                           start_initialization:
   778  001C62                     
   779                           global __initialization
   780                           __initialization:
   781  001C62                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   782                           global __pbssCOMRAM
   783                           __pbssCOMRAM:
   784  000020                     	global	_lcd
   785                           _lcd:
   786  000020                            ds      5
   787  000020                     	global	_distance
   788                           _distance:
   789  000025                            ds      2
   790  000025                     	global	_lcdDistance
   791                           _lcdDistance:
   792  000027                            ds      8
   793  000027                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   794                           global __pdataCOMRAM
   795                           __pdataCOMRAM:
   796  00002F                     	file	"main.c"
   797                           	line	44
   798                           main@F3124:
   799  00002F                            ds      5
   800  00002F                     	file	"C:\Users\MRCHU_~1\AppData\Local\Temp\s9u8."
   801                           	line	#
   802                           psect	cinit
   803                           ; Initialize objects allocated to COMRAM (5 bytes)
   804                           	global __pidataCOMRAM
   805                           	; load TBLPTR registers with __pidataCOMRAM
   806                           	movlw	low (__pidataCOMRAM)
   807  001C62  0ECA               	movwf	tblptrl
   808  001C64  6EF6               	movlw	high(__pidataCOMRAM)
   809  001C66  0E1C               	movwf	tblptrh
   810  001C68  6EF7               	movlw	low highword(__pidataCOMRAM)
   811  001C6A  0E00               	movwf	tblptru
   812  001C6C  6EF8               	lfsr	0,__pdataCOMRAM
   813  001C6E  EE00  F02F         	lfsr	1,5
   814  001C72  EE10 F005          	copy_data0:
   815  001C76                     	tblrd	*+
   816  001C76  0009               	movff	tablat, postinc0
   817  001C78  CFF5 FFEE          	movf	postdec1,w
   818  001C7C  50E5               	movf	fsr1l,w
   819  001C7E  50E1               	bnz	copy_data0
   820  001C80  E1FA               	line	#
   821                           ; Clear objects allocated to COMRAM (15 bytes)
   822                           	global __pbssCOMRAM
   823                           lfsr	0,__pbssCOMRAM
   824  001C82  EE00  F020         movlw	15
   825  001C86  0E0F               clear_0:
   826  001C88                     clrf	postinc0,c
   827  001C88  6AEE               decf	wreg
   828  001C8A  06E8               bnz	clear_0
   829  001C8C  E1FD               psect cinit,class=CODE,delta=1
   830                           global end_of_initialization,__end_of__initialization
   831                           
   832                           ;End of C runtime variable initialization code
   833                           
   834                           end_of_initialization:
   835  001C8E                     __end_of__initialization:
   836  001C8E                     	GLOBAL	__Lsmallconst
   837                           	movlw	low highword(__Lsmallconst)
   838  001C8E  0E00               	movwf	tblptru
   839  001C90  6EF8               	movlw	high(__Lsmallconst)
   840  001C92  0E10               	movwf	tblptrh
   841  001C94  6EF7               movlb 0
   842  001C96  0100               goto _main	;jump to C main() function
   843  001C98  EF1A  F008         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   844                           global __pcstackCOMRAM
   845                           __pcstackCOMRAM:
   846  000001                     ?_MCU_Init:	; 1 bytes @ 0x0
   847  000001                     ??_MCU_Init:	; 1 bytes @ 0x0
   848  000001                     ?_LCD_Out:	; 1 bytes @ 0x0
   849  000001                     ??_LCD_Out:	; 1 bytes @ 0x0
   850  000001                     ?_LCD_Write:	; 1 bytes @ 0x0
   851  000001                     ?_LCD_putc:	; 1 bytes @ 0x0
   852  000001                     ?_main:	; 1 bytes @ 0x0
   853  000001                     	global	?_HCSR04_GetDistance
   854                           ?_HCSR04_GetDistance:	; 2 bytes @ 0x0
   855  000001                     	global	?___lwdiv
   856                           ?___lwdiv:	; 2 bytes @ 0x0
   857  000001                     	global	?___lwmod
   858                           ?___lwmod:	; 2 bytes @ 0x0
   859  000001                     	global	___lwdiv@dividend
   860                           ___lwdiv@dividend:	; 2 bytes @ 0x0
   861  000001                     	global	___lwmod@dividend
   862                           ___lwmod@dividend:	; 2 bytes @ 0x0
   863  000001                     	ds   2
   864  000001                     ??_HCSR04_GetDistance:	; 1 bytes @ 0x2
   865  000003                     	global	HCSR04_GetDistance@centimeter
   866                           HCSR04_GetDistance@centimeter:	; 2 bytes @ 0x2
   867  000003                     	global	___lwdiv@divisor
   868                           ___lwdiv@divisor:	; 2 bytes @ 0x2
   869  000003                     	global	___lwmod@divisor
   870                           ___lwmod@divisor:	; 2 bytes @ 0x2
   871  000003                     	ds   1
   872  000003                     	global	LCD_Out@c
   873                           LCD_Out@c:	; 1 bytes @ 0x3
   874  000004                     	ds   1
   875  000004                     ??_LCD_Write:	; 1 bytes @ 0x4
   876  000005                     ??_LCD_putc:	; 1 bytes @ 0x4
   877  000005                     ??___lwdiv:	; 1 bytes @ 0x4
   878  000005                     ??___lwmod:	; 1 bytes @ 0x4
   879  000005                     	global	___lwmod@counter
   880                           ___lwmod@counter:	; 1 bytes @ 0x4
   881  000005                     	global	___lwdiv@quotient
   882                           ___lwdiv@quotient:	; 2 bytes @ 0x4
   883  000005                     	ds   2
   884  000005                     	global	___lwdiv@counter
   885                           ___lwdiv@counter:	; 1 bytes @ 0x6
   886  000007                     	ds   1
   887  000007                     ?_utoa:	; 2 bytes @ 0x7
   888  000008                     	global	LCD_Write@c
   889                           LCD_Write@c:	; 1 bytes @ 0x7
   890  000008                     	global	LCD_putc@c
   891                           LCD_putc@c:	; 1 bytes @ 0x7
   892  000008                     	global	utoa@buf
   893                           utoa@buf:	; 2 bytes @ 0x7
   894  000008                     	ds   1
   895  000008                     ?_LCD_Init:	; 1 bytes @ 0x8
   896  000009                     ?_LCD_puts:	; 1 bytes @ 0x8
   897  000009                     ?_LCD_putrs:	; 1 bytes @ 0x8
   898  000009                     	global	LCD_puts@a
   899                           LCD_puts@a:	; 2 bytes @ 0x8
   900  000009                     	global	LCD_putrs@a
   901                           LCD_putrs@a:	; 2 bytes @ 0x8
   902  000009                     	global	LCD_Init@display
   903                           LCD_Init@display:	; 5 bytes @ 0x8
   904  000009                     	ds   1
   905  000009                     	global	utoa@val
   906                           utoa@val:	; 2 bytes @ 0x9
   907  00000A                     	ds   1
   908  00000A                     ??_LCD_puts:	; 1 bytes @ 0xA
   909  00000B                     ??_LCD_putrs:	; 1 bytes @ 0xA
   910  00000B                     	global	LCD_puts@i
   911                           LCD_puts@i:	; 2 bytes @ 0xA
   912  00000B                     	ds   1
   913  00000B                     	global	utoa@base
   914                           utoa@base:	; 2 bytes @ 0xB
   915  00000C                     	ds   1
   916  00000C                     	global	LCD_putrs@i
   917                           LCD_putrs@i:	; 2 bytes @ 0xC
   918  00000D                     	ds   1
   919  00000D                     ??_utoa:	; 1 bytes @ 0xD
   920  00000E                     ??_LCD_Init:	; 1 bytes @ 0xD
   921  00000E                     	global	utoa@v
   922                           utoa@v:	; 2 bytes @ 0xD
   923  00000E                     	ds   1
   924  00000E                     	global	LCD_Init@cmd
   925                           LCD_Init@cmd:	; 1 bytes @ 0xE
   926  00000F                     	ds   1
   927  00000F                     	global	utoa@c
   928                           utoa@c:	; 1 bytes @ 0xF
   929  000010                     	ds   1
   930  000010                     ?_itoa:	; 2 bytes @ 0x10
   931  000011                     	global	itoa@buf
   932                           itoa@buf:	; 2 bytes @ 0x10
   933  000011                     	ds   2
   934  000011                     	global	itoa@val
   935                           itoa@val:	; 2 bytes @ 0x12
   936  000013                     	ds   2
   937  000013                     	global	itoa@base
   938                           itoa@base:	; 2 bytes @ 0x14
   939  000015                     	ds   2
   940  000015                     ??_itoa:	; 1 bytes @ 0x16
   941  000017                     	global	itoa@cp
   942                           itoa@cp:	; 2 bytes @ 0x16
   943  000017                     	ds   2
   944  000017                     ??_main:	; 1 bytes @ 0x18
   945  000019                     	ds   2
   946  000019                     	global	main@lcd
   947                           main@lcd:	; 5 bytes @ 0x1A
   948  00001B                     	ds   5
   949  00001B                     ;!
   950                           ;!Data Sizes:
   951                           ;!    Strings     49
   952                           ;!    Constant    0
   953                           ;!    Data        5
   954                           ;!    BSS         15
   955                           ;!    Persistent  0
   956                           ;!    Stack       0
   957                           ;!
   958                           ;!Auto Spaces:
   959                           ;!    Space          Size  Autos    Used
   960                           ;!    COMRAM          127     31      51
   961                           ;!    BANK0           128      0       0
   962                           ;!    BANK1           256      0       0
   963                           ;!    BANK2           256      0       0
   964                           ;!    BANK3           256      0       0
   965                           ;!    BANK4           256      0       0
   966                           ;!    BANK5           256      0       0
   967                           ;!    BANK6           256      0       0
   968                           ;!    BANK7           256      0       0
   969                           ;!    BANK8           256      0       0
   970                           ;!    BANK9           256      0       0
   971                           ;!    BANK10          256      0       0
   972                           ;!    BANK11          256      0       0
   973                           ;!    BANK12          256      0       0
   974                           ;!    BANK13          256      0       0
   975                           ;!    BANK14          256      0       0
   976                           ;!    BANK15          128      0       0
   977                           
   978                           ;!
   979                           ;!Pointer List with Targets:
   980                           ;!
   981                           ;!    utoa@buf	PTR unsigned char  size(2) Largest target is 8
   982                           ;!		 -> lcdDistance(COMRAM[8]), 
   983                           ;!
   984                           ;!    sp__utoa	PTR unsigned char  size(2) Largest target is 8
   985                           ;!		 -> lcdDistance(COMRAM[8]), 
   986                           ;!
   987                           ;!    itoa@buf	PTR unsigned char  size(2) Largest target is 8
   988                           ;!		 -> lcdDistance(COMRAM[8]), 
   989                           ;!
   990                           ;!    itoa@cp	PTR unsigned char  size(2) Largest target is 8
   991                           ;!		 -> lcdDistance(COMRAM[8]), 
   992                           ;!
   993                           ;!    sp__itoa	PTR unsigned char  size(2) Largest target is 8
   994                           ;!		 -> lcdDistance(COMRAM[8]), 
   995                           ;!
   996                           ;!    F3124.PORT	PTR volatile unsigned char  size(2) Largest target is 1
   997                           ;!		 -> PORTB(SFR[1]), 
   998                           ;!
   999                           ;!    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
  1000                           ;!		 -> PORTB(SFR[1]), 
  1001                           ;!
  1002                           ;!    LCD_putrs@a	PTR const unsigned char  size(2) Largest target is 16
  1003                           ;!		 -> STR_6(CODE[3]), STR_5(CODE[15]), STR_4(CODE[15]), STR_3(CODE[15]), 
  1004                           ;!		 -> STR_2(CODE[16]), STR_1(CODE[15]), 
  1005                           ;!
  1006                           ;!    LCD_puts@a	PTR unsigned char  size(2) Largest target is 8
  1007                           ;!		 -> lcdDistance(COMRAM[8]), 
  1008                           ;!
  1009                           ;!    display.PORT	PTR volatile unsigned char  size(2) Largest target is 1
  1010                           ;!		 -> PORTB(SFR[1]), 
  1011                           ;!
  1012                           ;!    S21$PORT	PTR volatile unsigned char  size(2) Largest target is 1
  1013                           ;!		 -> PORTB(SFR[1]), 
  1014                           ;!
  1015                           ;!    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
  1016                           ;!		 -> PORTB(SFR[1]), 
  1017                           ;!
  1018                           
  1019                           
  1020                           ;!
  1021                           ;!Critical Paths under _main in COMRAM
  1022                           ;!
  1023                           ;!    _main->_itoa
  1024                           ;!    _itoa->_utoa
  1025                           ;!    _utoa->___lwdiv
  1026                           ;!    _LCD_puts->_LCD_putc
  1027                           ;!    _LCD_putrs->_LCD_putc
  1028                           ;!    _LCD_putc->_LCD_Out
  1029                           ;!    _LCD_Init->_LCD_Write
  1030                           ;!    _LCD_Write->_LCD_Out
  1031                           ;!
  1032                           ;!Critical Paths under _main in BANK0
  1033                           ;!
  1034                           ;!    None.
  1035                           ;!
  1036                           ;!Critical Paths under _main in BANK1
  1037                           ;!
  1038                           ;!    None.
  1039                           ;!
  1040                           ;!Critical Paths under _main in BANK2
  1041                           ;!
  1042                           ;!    None.
  1043                           ;!
  1044                           ;!Critical Paths under _main in BANK3
  1045                           ;!
  1046                           ;!    None.
  1047                           ;!
  1048                           ;!Critical Paths under _main in BANK4
  1049                           ;!
  1050                           ;!    None.
  1051                           ;!
  1052                           ;!Critical Paths under _main in BANK5
  1053                           ;!
  1054                           ;!    None.
  1055                           ;!
  1056                           ;!Critical Paths under _main in BANK6
  1057                           ;!
  1058                           ;!    None.
  1059                           ;!
  1060                           ;!Critical Paths under _main in BANK7
  1061                           ;!
  1062                           ;!    None.
  1063                           ;!
  1064                           ;!Critical Paths under _main in BANK8
  1065                           ;!
  1066                           ;!    None.
  1067                           ;!
  1068                           ;!Critical Paths under _main in BANK9
  1069                           ;!
  1070                           ;!    None.
  1071                           ;!
  1072                           ;!Critical Paths under _main in BANK10
  1073                           ;!
  1074                           ;!    None.
  1075                           ;!
  1076                           ;!Critical Paths under _main in BANK11
  1077                           ;!
  1078                           ;!    None.
  1079                           ;!
  1080                           ;!Critical Paths under _main in BANK12
  1081                           ;!
  1082                           ;!    None.
  1083                           ;!
  1084                           ;!Critical Paths under _main in BANK13
  1085                           ;!
  1086                           ;!    None.
  1087                           ;!
  1088                           ;!Critical Paths under _main in BANK14
  1089                           ;!
  1090                           ;!    None.
  1091                           ;!
  1092                           ;!Critical Paths under _main in BANK15
  1093                           ;!
  1094                           ;!    None.
  1095                           
  1096 ;;
  1097 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1098 ;;
  1099                           
  1100                           ;!
  1101                           ;!Call Graph Tables:
  1102                           ;!
  1103                           ;! ---------------------------------------------------------------------------------
  1104                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1105                           ;! ---------------------------------------------------------------------------------
  1106                           ;! (0) _main                                                 7     7      0    2933
  1107                           ;!                                             24 COMRAM     7     7      0
  1108                           ;!                 _HCSR04_GetDistance
  1109                           ;!                           _LCD_Init
  1110                           ;!                          _LCD_Write
  1111                           ;!                          _LCD_putrs
  1112                           ;!                           _LCD_puts
  1113                           ;!                           _MCU_Init
  1114                           ;!                               _itoa
  1115                           ;! ---------------------------------------------------------------------------------
  1116                           ;! (1) _itoa                                                 8     2      6    1698
  1117                           ;!                                             16 COMRAM     8     2      6
  1118                           ;!                               _utoa
  1119                           ;! ---------------------------------------------------------------------------------
  1120                           ;! (2) _utoa                                                 9     3      6    1307
  1121                           ;!                                              7 COMRAM     9     3      6
  1122                           ;!                            ___lwdiv
  1123                           ;!                            ___lwmod
  1124                           ;! ---------------------------------------------------------------------------------
  1125                           ;! (3) ___lwmod                                              5     1      4     311
  1126                           ;!                                              0 COMRAM     5     1      4
  1127                           ;! ---------------------------------------------------------------------------------
  1128                           ;! (3) ___lwdiv                                              7     3      4     466
  1129                           ;!                                              0 COMRAM     7     3      4
  1130                           ;! ---------------------------------------------------------------------------------
  1131                           ;! (1) _MCU_Init                                             0     0      0       0
  1132                           ;! ---------------------------------------------------------------------------------
  1133                           ;! (1) _LCD_puts                                             4     2      2     256
  1134                           ;!                                              8 COMRAM     4     2      2
  1135                           ;!                           _LCD_putc
  1136                           ;! ---------------------------------------------------------------------------------
  1137                           ;! (1) _LCD_putrs                                            6     4      2     636
  1138                           ;!                                              8 COMRAM     6     4      2
  1139                           ;!                           _LCD_putc
  1140                           ;! ---------------------------------------------------------------------------------
  1141                           ;! (2) _LCD_putc                                             4     4      0      90
  1142                           ;!                                              4 COMRAM     4     4      0
  1143                           ;!                            _LCD_Out
  1144                           ;! ---------------------------------------------------------------------------------
  1145                           ;! (1) _LCD_Init                                             7     2      5     221
  1146                           ;!                                              8 COMRAM     7     2      5
  1147                           ;!                          _LCD_Write
  1148                           ;! ---------------------------------------------------------------------------------
  1149                           ;! (1) _LCD_Write                                            4     4      0      75
  1150                           ;!                                              4 COMRAM     4     4      0
  1151                           ;!                            _LCD_Out
  1152                           ;! ---------------------------------------------------------------------------------
  1153                           ;! (3) _LCD_Out                                              4     4      0      60
  1154                           ;!                                              0 COMRAM     4     4      0
  1155                           ;! ---------------------------------------------------------------------------------
  1156                           ;! (1) _HCSR04_GetDistance                                   4     2      2      24
  1157                           ;!                                              0 COMRAM     4     2      2
  1158                           ;! ---------------------------------------------------------------------------------
  1159                           ;! Estimated maximum stack depth 3
  1160                           ;! ---------------------------------------------------------------------------------
  1161                           ;!
  1162                           ;! Call Graph Graphs:
  1163                           ;!
  1164                           ;! _main (ROOT)
  1165                           ;!   _HCSR04_GetDistance
  1166                           ;!   _LCD_Init
  1167                           ;!     _LCD_Write
  1168                           ;!       _LCD_Out
  1169                           ;!   _LCD_Write
  1170                           ;!     _LCD_Out
  1171                           ;!   _LCD_putrs
  1172                           ;!     _LCD_putc
  1173                           ;!       _LCD_Out
  1174                           ;!   _LCD_puts
  1175                           ;!     _LCD_putc
  1176                           ;!       _LCD_Out
  1177                           ;!   _MCU_Init
  1178                           ;!   _itoa
  1179                           ;!     _utoa
  1180                           ;!       ___lwdiv
  1181                           ;!       ___lwmod
  1182                           ;!
  1183                           
  1184                           ;! Address spaces:
  1185                           
  1186                           ;!Name               Size   Autos  Total    Cost      Usage
  1187                           ;!BIGRAM             F7F      0       0      37        0.0%
  1188                           ;!EEDATA             400      0       0       0        0.0%
  1189                           ;!BITBANK14          100      0       0      32        0.0%
  1190                           ;!BANK14             100      0       0      33        0.0%
  1191                           ;!BITBANK13          100      0       0      30        0.0%
  1192                           ;!BANK13             100      0       0      31        0.0%
  1193                           ;!BITBANK12          100      0       0      28        0.0%
  1194                           ;!BANK12             100      0       0      29        0.0%
  1195                           ;!BITBANK11          100      0       0      26        0.0%
  1196                           ;!BANK11             100      0       0      27        0.0%
  1197                           ;!BITBANK10          100      0       0      24        0.0%
  1198                           ;!BANK10             100      0       0      25        0.0%
  1199                           ;!BITBANK9           100      0       0      22        0.0%
  1200                           ;!BANK9              100      0       0      23        0.0%
  1201                           ;!BITBANK8           100      0       0      20        0.0%
  1202                           ;!BANK8              100      0       0      21        0.0%
  1203                           ;!BITBANK7           100      0       0      18        0.0%
  1204                           ;!BANK7              100      0       0      19        0.0%
  1205                           ;!BITBANK6           100      0       0      16        0.0%
  1206                           ;!BANK6              100      0       0      17        0.0%
  1207                           ;!BITBANK5           100      0       0      14        0.0%
  1208                           ;!BANK5              100      0       0      15        0.0%
  1209                           ;!BITBANK4           100      0       0      12        0.0%
  1210                           ;!BANK4              100      0       0      13        0.0%
  1211                           ;!BITBANK3           100      0       0      10        0.0%
  1212                           ;!BANK3              100      0       0      11        0.0%
  1213                           ;!BITBANK2           100      0       0       8        0.0%
  1214                           ;!BANK2              100      0       0       9        0.0%
  1215                           ;!BITBANK1           100      0       0       6        0.0%
  1216                           ;!BANK1              100      0       0       7        0.0%
  1217                           ;!BITBANK15           80      0       0      35        0.0%
  1218                           ;!BANK15              80      0       0      36        0.0%
  1219                           ;!BITBANK0            80      0       0       4        0.0%
  1220                           ;!BANK0               80      0       0       5        0.0%
  1221                           ;!BITCOMRAM           7F      0       0       0        0.0%
  1222                           ;!COMRAM              7F     1F      33       1       40.2%
  1223                           ;!BITSFR               0      0       0     200        0.0%
  1224                           ;!SFR                  0      0       0     200        0.0%
  1225                           ;!STACK                0      0       0       2        0.0%
  1226                           ;!NULL                 0      0       0       0        0.0%
  1227                           ;!ABS                  0      0      33      34        0.0%
  1228                           ;!DATA                 0      0      33       3        0.0%
  1229                           ;!CODE                 0      0       0       0        0.0%
  1230                           
  1231                           	global	_main
  1232                           
  1233 ;; *************** function _main *****************
  1234 ;; Defined at:
  1235 ;;		line 43 in file "main.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  lcd             5   26[COMRAM] struct .
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  1249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  1250 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  1251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  1252 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  1253 ;;Total ram usage:        7 bytes
  1254 ;; Hardware stack levels required when called:    3
  1255 ;; This function calls:
  1256 ;;		_HCSR04_GetDistance
  1257 ;;		_LCD_Init
  1258 ;;		_LCD_Write
  1259 ;;		_LCD_putrs
  1260 ;;		_LCD_puts
  1261 ;;		_MCU_Init
  1262 ;;		_itoa
  1263 ;; This function is called by:
  1264 ;;		Startup code after reset
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1268                           	file	"main.c"
  1269                           	line	43
  1270                           global __ptext0
  1271                           __ptext0:
  1272  001034                     psect	text0
  1273                           	file	"main.c"
  1274                           	line	43
  1275                           	global	__size_of_main
  1276                           	__size_of_main	equ	__end_of_main-_main
  1277  0000                     	
  1278                           _main:
  1279  001034                     ;incstack = 0
  1280                           	opt	stack 28
  1281                           	line	44
  1282                           	
  1283                           l1372:
  1284  001034                     ;main.c: 44: MCU_Init();
  1285                           	call	_MCU_Init	;wreg free
  1286  001034  EC4E  F00E         	line	46
  1287                           	
  1288                           l1374:
  1289  001038                     ;main.c: 46: LCD lcd = { &PORTB, 0, 1, 4, 5, 6, 7 };
  1290                           	lfsr	2,(main@F3124)
  1291  001038  EE20  F02F         	lfsr	1,(main@lcd)
  1292  00103C  EE10  F01B         	movlw	5-1
  1293  001040  0E04               u601:
  1294  001042                     	movff	plusw2,plusw1
  1295  001042  CFDB FFE3          	decf	wreg
  1296  001046  06E8               	bc	u601
  1297  001048  E2FC               
  1298                           	line	47
  1299                           	
  1300                           l1376:
  1301  00104A                     ;main.c: 47: LCD_Init(lcd);
  1302                           	lfsr	2,(main@lcd)
  1303  00104A  EE20  F01B         	lfsr	0,(LCD_Init@display)
  1304  00104E  EE00  F009         	movlw	5-1
  1305  001052  0E04               u611:
  1306  001054                     	movff	plusw2,plusw0
  1307  001054  CFDB FFEB          	decf	wreg
  1308  001058  06E8               	bc	u611
  1309  00105A  E2FC               
  1310                           	call	_LCD_Init	;wreg free
  1311  00105C  EC2D  F00B         	goto	l1378
  1312  001060  EF32  F008         	line	48
  1313                           ;main.c: 48: do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while ( 0 
                                 );
  1314                           	
  1315                           l122:
  1316  001064                     	
  1317                           l1378:
  1318  001064                     	movlw	(0)&0ffh
  1319  001064  0E00               	
  1320                           	call	_LCD_Write
  1321  001066  ECB9  F00C         	
  1322                           l1380:
  1323  00106A                     	movlw	(01h)&0ffh
  1324  00106A  0E01               	
  1325                           	call	_LCD_Write
  1326  00106C  ECB9  F00C         	goto	l1382
  1327  001070  EF3E  F008         	
  1328                           l123:
  1329  001074                     	goto	l1382
  1330  001074  EF3E  F008         	line	49
  1331                           ;main.c: 49: do { if ( 0 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_Write( 0
                                 x80 + 0 & 0x0F); } while ( 0 ); } else if ( 0 == 1 ) { do { LCD_Write( (0xC0 + 0 & 0xF0)
                                  >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 0 == 2 ) { do { LCD_Wr

  1332                           	
  1333                           l124:
  1334  001078                     	goto	l1382
  1335  001078  EF3E  F008         	
  1336                           l126:
  1337  00107C                     	
  1338                           l1382:
  1339  00107C                     	movlw	(08h)&0ffh
  1340  00107C  0E08               	
  1341                           	call	_LCD_Write
  1342  00107E  ECB9  F00C         	
  1343                           l1384:
  1344  001082                     	movlw	(0)&0ffh
  1345  001082  0E00               	
  1346                           	call	_LCD_Write
  1347  001084  ECB9  F00C         	goto	l1392
  1348  001088  EF74  F008         	
  1349                           l127:
  1350  00108C                     	goto	l1392
  1351  00108C  EF74  F008         	
  1352                           l125:
  1353  001090                     	goto	l1392
  1354  001090  EF74  F008         	
  1355                           l130:
  1356  001094                     	
  1357                           l1386:
  1358  001094                     	movlw	(0Ch)&0ffh
  1359  001094  0E0C               	
  1360                           	call	_LCD_Write
  1361  001096  ECB9  F00C         	movlw	(0)&0ffh
  1362  00109A  0E00               	
  1363                           	call	_LCD_Write
  1364  00109C  ECB9  F00C         	goto	l1392
  1365  0010A0  EF74  F008         	
  1366                           l131:
  1367  0010A4                     	goto	l1392
  1368  0010A4  EF74  F008         	
  1369                           l129:
  1370  0010A8                     	goto	l1392
  1371  0010A8  EF74  F008         	
  1372                           l134:
  1373  0010AC                     	
  1374                           l1388:
  1375  0010AC                     	movlw	(09h)&0ffh
  1376  0010AC  0E09               	
  1377                           	call	_LCD_Write
  1378  0010AE  ECB9  F00C         	movlw	(04h)&0ffh
  1379  0010B2  0E04               	
  1380                           	call	_LCD_Write
  1381  0010B4  ECB9  F00C         	goto	l1392
  1382  0010B8  EF74  F008         	
  1383                           l135:
  1384  0010BC                     	goto	l1392
  1385  0010BC  EF74  F008         	
  1386                           l133:
  1387  0010C0                     	goto	l1392
  1388  0010C0  EF74  F008         	
  1389                           l138:
  1390  0010C4                     	
  1391                           l1390:
  1392  0010C4                     	movlw	(0Dh)&0ffh
  1393  0010C4  0E0D               	
  1394                           	call	_LCD_Write
  1395  0010C6  ECB9  F00C         	movlw	(04h)&0ffh
  1396  0010CA  0E04               	
  1397                           	call	_LCD_Write
  1398  0010CC  ECB9  F00C         	goto	l1392
  1399  0010D0  EF74  F008         	
  1400                           l139:
  1401  0010D4                     	goto	l1392
  1402  0010D4  EF74  F008         	
  1403                           l137:
  1404  0010D8                     	goto	l1392
  1405  0010D8  EF74  F008         	
  1406                           l136:
  1407  0010DC                     	goto	l1392
  1408  0010DC  EF74  F008         	
  1409                           l132:
  1410  0010E0                     	goto	l1392
  1411  0010E0  EF74  F008         	
  1412                           l128:
  1413  0010E4                     	goto	l1392
  1414  0010E4  EF74  F008         	
  1415                           l140:
  1416  0010E8                     	line	50
  1417                           	
  1418                           l1392:
  1419  0010E8                     ;main.c: 50: LCD_putrs(" MrChunckuee!!");
  1420                           		movlw	low(STR_1)
  1421  0010E8  0E11               	movwf	((c:LCD_putrs@a)),c
  1422  0010EA  6E09               	movlw	high(STR_1)
  1423  0010EC  0E10               	movwf	((c:LCD_putrs@a+1)),c
  1424  0010EE  6E0A               
  1425                           	call	_LCD_putrs	;wreg free
  1426  0010F0  EC89  F00D         	goto	l1396
  1427  0010F4  EF8A  F008         	line	51
  1428                           ;main.c: 51: do { if ( 1 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_Write( 0
                                 x80 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 1 ) { do { LCD_Write( (0xC0 + 0 & 0xF0)
                                  >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 2 ) { do { LCD_Wr

  1429                           	
  1430                           l141:
  1431  0010F8                     	goto	l1396
  1432  0010F8  EF8A  F008         	
  1433                           l143:
  1434  0010FC                     	
  1435                           l1394:
  1436  0010FC                     	movlw	(08h)&0ffh
  1437  0010FC  0E08               	
  1438                           	call	_LCD_Write
  1439  0010FE  ECB9  F00C         	movlw	(0)&0ffh
  1440  001102  0E00               	
  1441                           	call	_LCD_Write
  1442  001104  ECB9  F00C         	goto	l1402
  1443  001108  EFB4  F008         	
  1444                           l144:
  1445  00110C                     	goto	l1402
  1446  00110C  EFB4  F008         	
  1447                           l142:
  1448  001110                     	goto	l1396
  1449  001110  EF8A  F008         	
  1450                           l147:
  1451  001114                     	
  1452                           l1396:
  1453  001114                     	movlw	(0Ch)&0ffh
  1454  001114  0E0C               	
  1455                           	call	_LCD_Write
  1456  001116  ECB9  F00C         	movlw	(0)&0ffh
  1457  00111A  0E00               	
  1458                           	call	_LCD_Write
  1459  00111C  ECB9  F00C         	goto	l1402
  1460  001120  EFB4  F008         	
  1461                           l148:
  1462  001124                     	goto	l1402
  1463  001124  EFB4  F008         	
  1464                           l146:
  1465  001128                     	goto	l1402
  1466  001128  EFB4  F008         	
  1467                           l151:
  1468  00112C                     	
  1469                           l1398:
  1470  00112C                     	movlw	(09h)&0ffh
  1471  00112C  0E09               	
  1472                           	call	_LCD_Write
  1473  00112E  ECB9  F00C         	movlw	(04h)&0ffh
  1474  001132  0E04               	
  1475                           	call	_LCD_Write
  1476  001134  ECB9  F00C         	goto	l1402
  1477  001138  EFB4  F008         	
  1478                           l152:
  1479  00113C                     	goto	l1402
  1480  00113C  EFB4  F008         	
  1481                           l150:
  1482  001140                     	goto	l1402
  1483  001140  EFB4  F008         	
  1484                           l155:
  1485  001144                     	
  1486                           l1400:
  1487  001144                     	movlw	(0Dh)&0ffh
  1488  001144  0E0D               	
  1489                           	call	_LCD_Write
  1490  001146  ECB9  F00C         	movlw	(04h)&0ffh
  1491  00114A  0E04               	
  1492                           	call	_LCD_Write
  1493  00114C  ECB9  F00C         	goto	l1402
  1494  001150  EFB4  F008         	
  1495                           l156:
  1496  001154                     	goto	l1402
  1497  001154  EFB4  F008         	
  1498                           l154:
  1499  001158                     	goto	l1402
  1500  001158  EFB4  F008         	
  1501                           l153:
  1502  00115C                     	goto	l1402
  1503  00115C  EFB4  F008         	
  1504                           l149:
  1505  001160                     	goto	l1402
  1506  001160  EFB4  F008         	
  1507                           l145:
  1508  001164                     	goto	l1402
  1509  001164  EFB4  F008         	
  1510                           l157:
  1511  001168                     	line	52
  1512                           	
  1513                           l1402:
  1514  001168                     ;main.c: 52: LCD_putrs(" Sensor HC-SR04");
  1515                           		movlw	low(STR_2)
  1516  001168  0E01               	movwf	((c:LCD_putrs@a)),c
  1517  00116A  6E09               	movlw	high(STR_2)
  1518  00116C  0E10               	movwf	((c:LCD_putrs@a+1)),c
  1519  00116E  6E0A               
  1520                           	call	_LCD_putrs	;wreg free
  1521  001170  EC89  F00D         	line	53
  1522                           	
  1523                           l1404:
  1524  001174                     ;main.c: 53: _delay((unsigned long)((2000)*(8000000/4000.0)));
  1525                           	opt asmopt_push
  1526                           opt asmopt_off
  1527                           movlw  21
  1528  001174  0E15               movwf	(??_main+0+0+1)&0ffh,c,f
  1529  001176  6E1A               movlw	75
  1530  001178  0E4B               movwf	(??_main+0+0)&0ffh,c,f
  1531  00117A  6E19               	movlw	190
  1532  00117C  0EBE               u637:
  1533  00117E                     decfsz	wreg,f
  1534  00117E  2EE8               	bra	u637
  1535  001180  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  1536  001182  2E19               	bra	u637
  1537  001184  D7FC               	decfsz	(??_main+0+0+1)&0ffh,c,f
  1538  001186  2E1A               	bra	u637
  1539  001188  D7FA               	nop2
  1540  00118A  D000               opt asmopt_pop
  1541                           
  1542                           	goto	l1406
  1543  00118C  EFC8  F008         	line	54
  1544                           ;main.c: 54: while(1){
  1545                           	
  1546                           l158:
  1547  001190                     	line	55
  1548                           	
  1549                           l1406:
  1550  001190                     ;main.c: 55: distance = HCSR04_GetDistance();
  1551                           	call	_HCSR04_GetDistance	;wreg free
  1552  001190  ECB8  F00D         	movff	0+?_HCSR04_GetDistance,(c:_distance)
  1553  001194  C001  F025         	movff	1+?_HCSR04_GetDistance,(c:_distance+1)
  1554  001198  C002  F026         	line	56
  1555                           	
  1556                           l1408:
  1557  00119C                     ;main.c: 56: if(distance>400){
  1558                           		movlw	145
  1559  00119C  0E91               	subwf	 ((c:_distance)),c,w
  1560  00119E  5C25               	movlw	1
  1561  0011A0  0E01               	subwfb	((c:_distance+1)),c,w
  1562  0011A2  5826               	btfss	status,0
  1563  0011A4  A0D8               	goto	u621
  1564  0011A6  EFD7  F008         	goto	u620
  1565  0011AA  EFD9  F008         
  1566                           u621:
  1567  0011AE                     	goto	l1432
  1568  0011AE  EF6E  F009         u620:
  1569  0011B2                     	goto	l1410
  1570  0011B2  EFDB  F008         	line	57
  1571                           ;main.c: 57: do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while ( 0 
                                 );
  1572                           	
  1573                           l160:
  1574  0011B6                     	
  1575                           l1410:
  1576  0011B6                     	movlw	(0)&0ffh
  1577  0011B6  0E00               	
  1578                           	call	_LCD_Write
  1579  0011B8  ECB9  F00C         	movlw	(01h)&0ffh
  1580  0011BC  0E01               	
  1581                           	call	_LCD_Write
  1582  0011BE  ECB9  F00C         	goto	l164
  1583  0011C2  EFE5  F008         	
  1584                           l161:
  1585  0011C6                     	goto	l164
  1586  0011C6  EFE5  F008         	line	58
  1587                           ;main.c: 58: do { if ( 0 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_Write( 0
                                 x80 + 0 & 0x0F); } while ( 0 ); } else if ( 0 == 1 ) { do { LCD_Write( (0xC0 + 0 & 0xF0)
                                  >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 0 == 2 ) { do { LCD_Wr

  1588                           	
  1589                           l162:
  1590  0011CA                     	
  1591                           l164:
  1592  0011CA                     	movlw	(08h)&0ffh
  1593  0011CA  0E08               	
  1594                           	call	_LCD_Write
  1595  0011CC  ECB9  F00C         	movlw	(0)&0ffh
  1596  0011D0  0E00               	
  1597                           	call	_LCD_Write
  1598  0011D2  ECB9  F00C         	goto	l1418
  1599  0011D6  EF1B  F009         	
  1600                           l165:
  1601  0011DA                     	goto	l1418
  1602  0011DA  EF1B  F009         	
  1603                           l163:
  1604  0011DE                     	goto	l1418
  1605  0011DE  EF1B  F009         	
  1606                           l168:
  1607  0011E2                     	
  1608                           l1412:
  1609  0011E2                     	movlw	(0Ch)&0ffh
  1610  0011E2  0E0C               	
  1611                           	call	_LCD_Write
  1612  0011E4  ECB9  F00C         	movlw	(0)&0ffh
  1613  0011E8  0E00               	
  1614                           	call	_LCD_Write
  1615  0011EA  ECB9  F00C         	goto	l1418
  1616  0011EE  EF1B  F009         	
  1617                           l169:
  1618  0011F2                     	goto	l1418
  1619  0011F2  EF1B  F009         	
  1620                           l167:
  1621  0011F6                     	goto	l1418
  1622  0011F6  EF1B  F009         	
  1623                           l172:
  1624  0011FA                     	
  1625                           l1414:
  1626  0011FA                     	movlw	(09h)&0ffh
  1627  0011FA  0E09               	
  1628                           	call	_LCD_Write
  1629  0011FC  ECB9  F00C         	movlw	(04h)&0ffh
  1630  001200  0E04               	
  1631                           	call	_LCD_Write
  1632  001202  ECB9  F00C         	goto	l1418
  1633  001206  EF1B  F009         	
  1634                           l173:
  1635  00120A                     	goto	l1418
  1636  00120A  EF1B  F009         	
  1637                           l171:
  1638  00120E                     	goto	l1418
  1639  00120E  EF1B  F009         	
  1640                           l176:
  1641  001212                     	
  1642                           l1416:
  1643  001212                     	movlw	(0Dh)&0ffh
  1644  001212  0E0D               	
  1645                           	call	_LCD_Write
  1646  001214  ECB9  F00C         	movlw	(04h)&0ffh
  1647  001218  0E04               	
  1648                           	call	_LCD_Write
  1649  00121A  ECB9  F00C         	goto	l1418
  1650  00121E  EF1B  F009         	
  1651                           l177:
  1652  001222                     	goto	l1418
  1653  001222  EF1B  F009         	
  1654                           l175:
  1655  001226                     	goto	l1418
  1656  001226  EF1B  F009         	
  1657                           l174:
  1658  00122A                     	goto	l1418
  1659  00122A  EF1B  F009         	
  1660                           l170:
  1661  00122E                     	goto	l1418
  1662  00122E  EF1B  F009         	
  1663                           l166:
  1664  001232                     	goto	l1418
  1665  001232  EF1B  F009         	
  1666                           l178:
  1667  001236                     	line	59
  1668                           	
  1669                           l1418:
  1670  001236                     ;main.c: 59: LCD_putrs("Sensor HC-SR04");
  1671                           		movlw	low(STR_3)
  1672  001236  0E02               	movwf	((c:LCD_putrs@a)),c
  1673  001238  6E09               	movlw	high(STR_3)
  1674  00123A  0E10               	movwf	((c:LCD_putrs@a+1)),c
  1675  00123C  6E0A               
  1676                           	call	_LCD_putrs	;wreg free
  1677  00123E  EC89  F00D         	goto	l1422
  1678  001242  EF31  F009         	line	60
  1679                           ;main.c: 60: do { if ( 1 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_Write( 0
                                 x80 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 1 ) { do { LCD_Write( (0xC0 + 0 & 0xF0)
                                  >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 2 ) { do { LCD_Wr

  1680                           	
  1681                           l179:
  1682  001246                     	goto	l1422
  1683  001246  EF31  F009         	
  1684                           l181:
  1685  00124A                     	
  1686                           l1420:
  1687  00124A                     	movlw	(08h)&0ffh
  1688  00124A  0E08               	
  1689                           	call	_LCD_Write
  1690  00124C  ECB9  F00C         	movlw	(0)&0ffh
  1691  001250  0E00               	
  1692                           	call	_LCD_Write
  1693  001252  ECB9  F00C         	goto	l1428
  1694  001256  EF5B  F009         	
  1695                           l182:
  1696  00125A                     	goto	l1428
  1697  00125A  EF5B  F009         	
  1698                           l180:
  1699  00125E                     	goto	l1422
  1700  00125E  EF31  F009         	
  1701                           l185:
  1702  001262                     	
  1703                           l1422:
  1704  001262                     	movlw	(0Ch)&0ffh
  1705  001262  0E0C               	
  1706                           	call	_LCD_Write
  1707  001264  ECB9  F00C         	movlw	(0)&0ffh
  1708  001268  0E00               	
  1709                           	call	_LCD_Write
  1710  00126A  ECB9  F00C         	goto	l1428
  1711  00126E  EF5B  F009         	
  1712                           l186:
  1713  001272                     	goto	l1428
  1714  001272  EF5B  F009         	
  1715                           l184:
  1716  001276                     	goto	l1428
  1717  001276  EF5B  F009         	
  1718                           l189:
  1719  00127A                     	
  1720                           l1424:
  1721  00127A                     	movlw	(09h)&0ffh
  1722  00127A  0E09               	
  1723                           	call	_LCD_Write
  1724  00127C  ECB9  F00C         	movlw	(04h)&0ffh
  1725  001280  0E04               	
  1726                           	call	_LCD_Write
  1727  001282  ECB9  F00C         	goto	l1428
  1728  001286  EF5B  F009         	
  1729                           l190:
  1730  00128A                     	goto	l1428
  1731  00128A  EF5B  F009         	
  1732                           l188:
  1733  00128E                     	goto	l1428
  1734  00128E  EF5B  F009         	
  1735                           l193:
  1736  001292                     	
  1737                           l1426:
  1738  001292                     	movlw	(0Dh)&0ffh
  1739  001292  0E0D               	
  1740                           	call	_LCD_Write
  1741  001294  ECB9  F00C         	movlw	(04h)&0ffh
  1742  001298  0E04               	
  1743                           	call	_LCD_Write
  1744  00129A  ECB9  F00C         	goto	l1428
  1745  00129E  EF5B  F009         	
  1746                           l194:
  1747  0012A2                     	goto	l1428
  1748  0012A2  EF5B  F009         	
  1749                           l192:
  1750  0012A6                     	goto	l1428
  1751  0012A6  EF5B  F009         	
  1752                           l191:
  1753  0012AA                     	goto	l1428
  1754  0012AA  EF5B  F009         	
  1755                           l187:
  1756  0012AE                     	goto	l1428
  1757  0012AE  EF5B  F009         	
  1758                           l183:
  1759  0012B2                     	goto	l1428
  1760  0012B2  EF5B  F009         	
  1761                           l195:
  1762  0012B6                     	line	61
  1763                           	
  1764                           l1428:
  1765  0012B6                     ;main.c: 61: LCD_putrs("Fuera de rango");
  1766                           		movlw	low(STR_4)
  1767  0012B6  0E20               	movwf	((c:LCD_putrs@a)),c
  1768  0012B8  6E09               	movlw	high(STR_4)
  1769  0012BA  0E10               	movwf	((c:LCD_putrs@a+1)),c
  1770  0012BC  6E0A               
  1771                           	call	_LCD_putrs	;wreg free
  1772  0012BE  EC89  F00D         	line	62
  1773                           	
  1774                           l1430:
  1775  0012C2                     ;main.c: 62: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1776                           	opt asmopt_push
  1777                           opt asmopt_off
  1778                           movlw  11
  1779  0012C2  0E0B               movwf	(??_main+0+0+1)&0ffh,c,f
  1780  0012C4  6E1A               movlw	38
  1781  0012C6  0E26               movwf	(??_main+0+0)&0ffh,c,f
  1782  0012C8  6E19               	movlw	94
  1783  0012CA  0E5E               u647:
  1784  0012CC                     decfsz	wreg,f
  1785  0012CC  2EE8               	bra	u647
  1786  0012CE  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  1787  0012D0  2E19               	bra	u647
  1788  0012D2  D7FC               	decfsz	(??_main+0+0+1)&0ffh,c,f
  1789  0012D4  2E1A               	bra	u647
  1790  0012D6  D7FA               opt asmopt_pop
  1791                           
  1792                           	line	63
  1793                           ;main.c: 63: }
  1794                           	goto	l1406
  1795  0012D8  EFC8  F008         	line	64
  1796                           	
  1797                           l159:
  1798  0012DC                     	line	65
  1799                           	
  1800                           l1432:
  1801  0012DC                     ;main.c: 64: else{
  1802                           ;main.c: 65: itoa(lcdDistance, distance, 10);
  1803                           		movlw	low(_lcdDistance)
  1804  0012DC  0E27               	movwf	((c:itoa@buf)),c
  1805  0012DE  6E11               	movlw	high(_lcdDistance)
  1806  0012E0  0E00               	movwf	((c:itoa@buf+1)),c
  1807  0012E2  6E12               
  1808                           	movff	(c:_distance),(c:itoa@val)
  1809  0012E4  C025  F013         	movff	(c:_distance+1),(c:itoa@val+1)
  1810  0012E8  C026  F014         	movlw	high(0Ah)
  1811  0012EC  0E00               	movwf	((c:itoa@base+1)),c
  1812  0012EE  6E16               	movlw	low(0Ah)
  1813  0012F0  0E0A               	movwf	((c:itoa@base)),c
  1814  0012F2  6E15               	call	_itoa	;wreg free
  1815  0012F4  ECE3  F00D         	line	66
  1816                           ;main.c: 66: do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while ( 0 
                                 );
  1817                           	
  1818                           l197:
  1819  0012F8                     	movlw	(0)&0ffh
  1820  0012F8  0E00               	
  1821                           	call	_LCD_Write
  1822  0012FA  ECB9  F00C         	movlw	(01h)&0ffh
  1823  0012FE  0E01               	
  1824                           	call	_LCD_Write
  1825  001300  ECB9  F00C         	goto	l201
  1826  001304  EF86  F009         	
  1827                           l198:
  1828  001308                     	goto	l201
  1829  001308  EF86  F009         	line	67
  1830                           ;main.c: 67: do { if ( 0 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_Write( 0
                                 x80 + 0 & 0x0F); } while ( 0 ); } else if ( 0 == 1 ) { do { LCD_Write( (0xC0 + 0 & 0xF0)
                                  >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 0 == 2 ) { do { LCD_Wr

  1831                           	
  1832                           l199:
  1833  00130C                     	
  1834                           l201:
  1835  00130C                     	movlw	(08h)&0ffh
  1836  00130C  0E08               	
  1837                           	call	_LCD_Write
  1838  00130E  ECB9  F00C         	movlw	(0)&0ffh
  1839  001312  0E00               	
  1840                           	call	_LCD_Write
  1841  001314  ECB9  F00C         	goto	l1440
  1842  001318  EFBC  F009         	
  1843                           l202:
  1844  00131C                     	goto	l1440
  1845  00131C  EFBC  F009         	
  1846                           l200:
  1847  001320                     	goto	l1440
  1848  001320  EFBC  F009         	
  1849                           l205:
  1850  001324                     	
  1851                           l1434:
  1852  001324                     	movlw	(0Ch)&0ffh
  1853  001324  0E0C               	
  1854                           	call	_LCD_Write
  1855  001326  ECB9  F00C         	movlw	(0)&0ffh
  1856  00132A  0E00               	
  1857                           	call	_LCD_Write
  1858  00132C  ECB9  F00C         	goto	l1440
  1859  001330  EFBC  F009         	
  1860                           l206:
  1861  001334                     	goto	l1440
  1862  001334  EFBC  F009         	
  1863                           l204:
  1864  001338                     	goto	l1440
  1865  001338  EFBC  F009         	
  1866                           l209:
  1867  00133C                     	
  1868                           l1436:
  1869  00133C                     	movlw	(09h)&0ffh
  1870  00133C  0E09               	
  1871                           	call	_LCD_Write
  1872  00133E  ECB9  F00C         	movlw	(04h)&0ffh
  1873  001342  0E04               	
  1874                           	call	_LCD_Write
  1875  001344  ECB9  F00C         	goto	l1440
  1876  001348  EFBC  F009         	
  1877                           l210:
  1878  00134C                     	goto	l1440
  1879  00134C  EFBC  F009         	
  1880                           l208:
  1881  001350                     	goto	l1440
  1882  001350  EFBC  F009         	
  1883                           l213:
  1884  001354                     	
  1885                           l1438:
  1886  001354                     	movlw	(0Dh)&0ffh
  1887  001354  0E0D               	
  1888                           	call	_LCD_Write
  1889  001356  ECB9  F00C         	movlw	(04h)&0ffh
  1890  00135A  0E04               	
  1891                           	call	_LCD_Write
  1892  00135C  ECB9  F00C         	goto	l1440
  1893  001360  EFBC  F009         	
  1894                           l214:
  1895  001364                     	goto	l1440
  1896  001364  EFBC  F009         	
  1897                           l212:
  1898  001368                     	goto	l1440
  1899  001368  EFBC  F009         	
  1900                           l211:
  1901  00136C                     	goto	l1440
  1902  00136C  EFBC  F009         	
  1903                           l207:
  1904  001370                     	goto	l1440
  1905  001370  EFBC  F009         	
  1906                           l203:
  1907  001374                     	goto	l1440
  1908  001374  EFBC  F009         	
  1909                           l215:
  1910  001378                     	line	68
  1911                           	
  1912                           l1440:
  1913  001378                     ;main.c: 68: LCD_putrs("Sensor HC-SR04");
  1914                           		movlw	low(STR_5)
  1915  001378  0E02               	movwf	((c:LCD_putrs@a)),c
  1916  00137A  6E09               	movlw	high(STR_5)
  1917  00137C  0E10               	movwf	((c:LCD_putrs@a+1)),c
  1918  00137E  6E0A               
  1919                           	call	_LCD_putrs	;wreg free
  1920  001380  EC89  F00D         	goto	l1444
  1921  001384  EFD2  F009         	line	69
  1922                           ;main.c: 69: do { if ( 1 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_Write( 0
                                 x80 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 1 ) { do { LCD_Write( (0xC0 + 0 & 0xF0)
                                  >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 2 ) { do { LCD_Wr

  1923                           	
  1924                           l216:
  1925  001388                     	goto	l1444
  1926  001388  EFD2  F009         	
  1927                           l218:
  1928  00138C                     	
  1929                           l1442:
  1930  00138C                     	movlw	(08h)&0ffh
  1931  00138C  0E08               	
  1932                           	call	_LCD_Write
  1933  00138E  ECB9  F00C         	movlw	(0)&0ffh
  1934  001392  0E00               	
  1935                           	call	_LCD_Write
  1936  001394  ECB9  F00C         	goto	l232
  1937  001398  EFFA  F009         	
  1938                           l219:
  1939  00139C                     	goto	l232
  1940  00139C  EFFA  F009         	
  1941                           l217:
  1942  0013A0                     	goto	l1444
  1943  0013A0  EFD2  F009         	
  1944                           l222:
  1945  0013A4                     	
  1946                           l1444:
  1947  0013A4                     	movlw	(0Ch)&0ffh
  1948  0013A4  0E0C               	
  1949                           	call	_LCD_Write
  1950  0013A6  ECB9  F00C         	movlw	(0)&0ffh
  1951  0013AA  0E00               	
  1952                           	call	_LCD_Write
  1953  0013AC  ECB9  F00C         	goto	l232
  1954  0013B0  EFFA  F009         	
  1955                           l223:
  1956  0013B4                     	goto	l232
  1957  0013B4  EFFA  F009         	
  1958                           l221:
  1959  0013B8                     	goto	l232
  1960  0013B8  EFFA  F009         	
  1961                           l226:
  1962  0013BC                     	
  1963                           l1446:
  1964  0013BC                     	movlw	(09h)&0ffh
  1965  0013BC  0E09               	
  1966                           	call	_LCD_Write
  1967  0013BE  ECB9  F00C         	movlw	(04h)&0ffh
  1968  0013C2  0E04               	
  1969                           	call	_LCD_Write
  1970  0013C4  ECB9  F00C         	goto	l232
  1971  0013C8  EFFA  F009         	
  1972                           l227:
  1973  0013CC                     	goto	l232
  1974  0013CC  EFFA  F009         	
  1975                           l225:
  1976  0013D0                     	goto	l232
  1977  0013D0  EFFA  F009         	
  1978                           l230:
  1979  0013D4                     	
  1980                           l1448:
  1981  0013D4                     	movlw	(0Dh)&0ffh
  1982  0013D4  0E0D               	
  1983                           	call	_LCD_Write
  1984  0013D6  ECB9  F00C         	movlw	(04h)&0ffh
  1985  0013DA  0E04               	
  1986                           	call	_LCD_Write
  1987  0013DC  ECB9  F00C         	goto	l232
  1988  0013E0  EFFA  F009         	
  1989                           l231:
  1990  0013E4                     	goto	l232
  1991  0013E4  EFFA  F009         	
  1992                           l229:
  1993  0013E8                     	goto	l232
  1994  0013E8  EFFA  F009         	
  1995                           l228:
  1996  0013EC                     	goto	l232
  1997  0013EC  EFFA  F009         	
  1998                           l224:
  1999  0013F0                     	goto	l232
  2000  0013F0  EFFA  F009         	
  2001                           l220:
  2002  0013F4                     	
  2003                           l232:
  2004  0013F4                     	line	70
  2005                           ;main.c: 70: LCD_puts(lcdDistance);
  2006                           		movlw	low(_lcdDistance)
  2007  0013F4  0E27               	movwf	((c:LCD_puts@a)),c
  2008  0013F6  6E09               	movlw	high(_lcdDistance)
  2009  0013F8  0E00               	movwf	((c:LCD_puts@a+1)),c
  2010  0013FA  6E0A               
  2011                           	call	_LCD_puts	;wreg free
  2012  0013FC  EC0D  F00E         	goto	l1452
  2013  001400  EF10  F00A         	line	71
  2014                           ;main.c: 71: do { if ( 1 == 0 ) { do { LCD_Write( (0x80 + 4 & 0xF0) >> 4 ); LCD_Write( 0
                                 x80 + 4 & 0x0F); } while ( 0 ); } else if ( 1 == 1 ) { do { LCD_Write( (0xC0 + 4 & 0xF0)
                                  >> 4 ); LCD_Write( 0xC0 + 4 & 0x0F); } while ( 0 ); } else if ( 1 == 2 ) { do { LCD_Wr

  2015                           	
  2016                           l233:
  2017  001404                     	goto	l1452
  2018  001404  EF10  F00A         	
  2019                           l235:
  2020  001408                     	
  2021                           l1450:
  2022  001408                     	movlw	(08h)&0ffh
  2023  001408  0E08               	
  2024                           	call	_LCD_Write
  2025  00140A  ECB9  F00C         	movlw	(04h)&0ffh
  2026  00140E  0E04               	
  2027                           	call	_LCD_Write
  2028  001410  ECB9  F00C         	goto	l1458
  2029  001414  EF3A  F00A         	
  2030                           l236:
  2031  001418                     	goto	l1458
  2032  001418  EF3A  F00A         	
  2033                           l234:
  2034  00141C                     	goto	l1452
  2035  00141C  EF10  F00A         	
  2036                           l239:
  2037  001420                     	
  2038                           l1452:
  2039  001420                     	movlw	(0Ch)&0ffh
  2040  001420  0E0C               	
  2041                           	call	_LCD_Write
  2042  001422  ECB9  F00C         	movlw	(04h)&0ffh
  2043  001426  0E04               	
  2044                           	call	_LCD_Write
  2045  001428  ECB9  F00C         	goto	l1458
  2046  00142C  EF3A  F00A         	
  2047                           l240:
  2048  001430                     	goto	l1458
  2049  001430  EF3A  F00A         	
  2050                           l238:
  2051  001434                     	goto	l1458
  2052  001434  EF3A  F00A         	
  2053                           l243:
  2054  001438                     	
  2055                           l1454:
  2056  001438                     	movlw	(09h)&0ffh
  2057  001438  0E09               	
  2058                           	call	_LCD_Write
  2059  00143A  ECB9  F00C         	movlw	(08h)&0ffh
  2060  00143E  0E08               	
  2061                           	call	_LCD_Write
  2062  001440  ECB9  F00C         	goto	l1458
  2063  001444  EF3A  F00A         	
  2064                           l244:
  2065  001448                     	goto	l1458
  2066  001448  EF3A  F00A         	
  2067                           l242:
  2068  00144C                     	goto	l1458
  2069  00144C  EF3A  F00A         	
  2070                           l247:
  2071  001450                     	
  2072                           l1456:
  2073  001450                     	movlw	(0Dh)&0ffh
  2074  001450  0E0D               	
  2075                           	call	_LCD_Write
  2076  001452  ECB9  F00C         	movlw	(08h)&0ffh
  2077  001456  0E08               	
  2078                           	call	_LCD_Write
  2079  001458  ECB9  F00C         	goto	l1458
  2080  00145C  EF3A  F00A         	
  2081                           l248:
  2082  001460                     	goto	l1458
  2083  001460  EF3A  F00A         	
  2084                           l246:
  2085  001464                     	goto	l1458
  2086  001464  EF3A  F00A         	
  2087                           l245:
  2088  001468                     	goto	l1458
  2089  001468  EF3A  F00A         	
  2090                           l241:
  2091  00146C                     	goto	l1458
  2092  00146C  EF3A  F00A         	
  2093                           l237:
  2094  001470                     	goto	l1458
  2095  001470  EF3A  F00A         	
  2096                           l249:
  2097  001474                     	line	72
  2098                           	
  2099                           l1458:
  2100  001474                     ;main.c: 72: LCD_putrs("cm");
  2101                           		movlw	low(STR_6)
  2102  001474  0E2F               	movwf	((c:LCD_putrs@a)),c
  2103  001476  6E09               	movlw	high(STR_6)
  2104  001478  0E10               	movwf	((c:LCD_putrs@a+1)),c
  2105  00147A  6E0A               
  2106                           	call	_LCD_putrs	;wreg free
  2107  00147C  EC89  F00D         	line	73
  2108                           	
  2109                           l1460:
  2110  001480                     ;main.c: 73: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2111                           	opt asmopt_push
  2112                           opt asmopt_off
  2113                           movlw  11
  2114  001480  0E0B               movwf	(??_main+0+0+1)&0ffh,c,f
  2115  001482  6E1A               movlw	38
  2116  001484  0E26               movwf	(??_main+0+0)&0ffh,c,f
  2117  001486  6E19               	movlw	94
  2118  001488  0E5E               u657:
  2119  00148A                     decfsz	wreg,f
  2120  00148A  2EE8               	bra	u657
  2121  00148C  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  2122  00148E  2E19               	bra	u657
  2123  001490  D7FC               	decfsz	(??_main+0+0+1)&0ffh,c,f
  2124  001492  2E1A               	bra	u657
  2125  001494  D7FA               opt asmopt_pop
  2126                           
  2127                           	goto	l1406
  2128  001496  EFC8  F008         	line	74
  2129                           	
  2130                           l196:
  2131  00149A                     	goto	l1406
  2132  00149A  EFC8  F008         	line	75
  2133                           	
  2134                           l250:
  2135  00149E                     	line	54
  2136                           	goto	l1406
  2137  00149E  EFC8  F008         	
  2138                           l251:
  2139  0014A2                     	line	76
  2140                           	
  2141                           l252:
  2142  0014A2                     	global	start
  2143                           	goto	start
  2144  0014A2  EF00  F000         	opt stack 0
  2145                           GLOBAL	__end_of_main
  2146                           	__end_of_main:
  2147  0014A6                     	signat	_main,89
  2148                           	global	_itoa
  2149                           
  2150 ;; *************** function _itoa *****************
  2151 ;; Defined at:
  2152 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  buf             2   16[COMRAM] PTR unsigned char 
  2155 ;;		 -> lcdDistance(8), 
  2156 ;;  val             2   18[COMRAM] int 
  2157 ;;  base            2   20[COMRAM] int 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  cp              2   22[COMRAM] PTR unsigned char 
  2160 ;;		 -> lcdDistance(8), 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  2   16[COMRAM] PTR unsigned char 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2170 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2173 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2174 ;;Total ram usage:        8 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    2
  2177 ;; This function calls:
  2178 ;;		_utoa
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           psect	text1,class=CODE,space=0,reloc=2,group=1
  2184                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
  2185                           	line	4
  2186                           global __ptext1
  2187                           __ptext1:
  2188  001BC6                     psect	text1
  2189                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
  2190                           	line	4
  2191                           	global	__size_of_itoa
  2192                           	__size_of_itoa	equ	__end_of_itoa-_itoa
  2193  0000                     	
  2194                           _itoa:
  2195  001BC6                     ;incstack = 0
  2196                           	opt	stack 28
  2197                           	line	6
  2198                           	
  2199                           l1360:
  2200  001BC6                     		movff	(c:itoa@buf),(c:itoa@cp)
  2201  001BC6  C011  F017         	movff	(c:itoa@buf+1),(c:itoa@cp+1)
  2202  001BCA  C012  F018         
  2203                           	line	8
  2204                           	btfsc	((c:itoa@val+1)),c,7
  2205  001BCE  BE14               	goto	u590
  2206  001BD0  EFEE  F00D         	goto	u591
  2207  001BD4  EFEC  F00D         
  2208                           u591:
  2209  001BD8                     	goto	l1368
  2210  001BD8  EFFC  F00D         u590:
  2211  001BDC                     	line	9
  2212                           	
  2213                           l1362:
  2214  001BDC                     	movff	(c:itoa@buf),fsr2l
  2215  001BDC  C011  FFD9         	movff	(c:itoa@buf+1),fsr2h
  2216  001BE0  C012  FFDA         	movlw	low(02Dh)
  2217  001BE4  0E2D               	movwf	indf2
  2218  001BE6  6EDF               	
  2219                           l1364:
  2220  001BE8                     	infsnz	((c:itoa@buf)),c
  2221  001BE8  4A11               	incf	((c:itoa@buf+1)),c
  2222  001BEA  2A12               	line	10
  2223                           	
  2224                           l1366:
  2225  001BEC                     	negf	((c:itoa@val)),c
  2226  001BEC  6C13               	comf	((c:itoa@val+1)),c
  2227  001BEE  1E14               	btfsc	status,0
  2228  001BF0  B0D8               	incf	((c:itoa@val+1)),c
  2229  001BF2  2A14               	goto	l1368
  2230  001BF4  EFFC  F00D         	line	11
  2231                           	
  2232                           l595:
  2233  001BF8                     	line	12
  2234                           	
  2235                           l1368:
  2236  001BF8                     		movff	(c:itoa@buf),(c:utoa@buf)
  2237  001BF8  C011  F008         	movff	(c:itoa@buf+1),(c:utoa@buf+1)
  2238  001BFC  C012  F009         
  2239                           	movff	(c:itoa@val),(c:utoa@val)
  2240  001C00  C013  F00A         	movff	(c:itoa@val+1),(c:utoa@val+1)
  2241  001C04  C014  F00B         	movff	(c:itoa@base),(c:utoa@base)
  2242  001C08  C015  F00C         	movff	(c:itoa@base+1),(c:utoa@base+1)
  2243  001C0C  C016  F00D         	call	_utoa	;wreg free
  2244  001C10  EC4E  F00C         	goto	l596
  2245  001C14  EF0C  F00E         	line	13
  2246                           	
  2247                           l1370:
  2248  001C18                     	line	14
  2249                           ;	Return value of _itoa is never used
  2250                           	
  2251                           l596:
  2252  001C18                     	return	;funcret
  2253  001C18  0012               	opt stack 0
  2254                           GLOBAL	__end_of_itoa
  2255                           	__end_of_itoa:
  2256  001C1A                     	signat	_itoa,12410
  2257                           	global	_utoa
  2258                           
  2259 ;; *************** function _utoa *****************
  2260 ;; Defined at:
  2261 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  buf             2    7[COMRAM] PTR unsigned char 
  2264 ;;		 -> lcdDistance(8), 
  2265 ;;  val             2    9[COMRAM] unsigned int 
  2266 ;;  base            2   11[COMRAM] int 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  v               2   13[COMRAM] unsigned int 
  2269 ;;  c               1   15[COMRAM] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  2    7[COMRAM] PTR unsigned char 
  2272 ;; Registers used:
  2273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2279 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2280 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2282 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2283 ;;Total ram usage:        9 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    1
  2286 ;; This function calls:
  2287 ;;		___lwdiv
  2288 ;;		___lwmod
  2289 ;; This function is called by:
  2290 ;;		_itoa
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           psect	text2,class=CODE,space=0,reloc=2,group=1
  2294                           	line	17
  2295                           global __ptext2
  2296                           __ptext2:
  2297  00189C                     psect	text2
  2298                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
  2299                           	line	17
  2300                           	global	__size_of_utoa
  2301                           	__size_of_utoa	equ	__end_of_utoa-_utoa
  2302  0000                     	
  2303                           _utoa:
  2304  00189C                     ;incstack = 0
  2305                           	opt	stack 28
  2306                           	line	22
  2307                           	
  2308                           l1248:
  2309  00189C                     	movff	(c:utoa@val),(c:utoa@v)
  2310  00189C  C00A  F00E         	movff	(c:utoa@val+1),(c:utoa@v+1)
  2311  0018A0  C00B  F00F         	goto	l1250
  2312  0018A4  EF54  F00C         	line	23
  2313                           	
  2314                           l599:
  2315  0018A8                     	line	24
  2316                           	
  2317                           l1250:
  2318  0018A8                     	movff	(c:utoa@v),(c:___lwdiv@dividend)
  2319  0018A8  C00E  F001         	movff	(c:utoa@v+1),(c:___lwdiv@dividend+1)
  2320  0018AC  C00F  F002         	movff	(c:utoa@base),(c:___lwdiv@divisor)
  2321  0018B0  C00C  F003         	movff	(c:utoa@base+1),(c:___lwdiv@divisor+1)
  2322  0018B4  C00D  F004         	call	___lwdiv	;wreg free
  2323  0018B8  EC09  F00D         	movff	0+?___lwdiv,(c:utoa@v)
  2324  0018BC  C001  F00E         	movff	1+?___lwdiv,(c:utoa@v+1)
  2325  0018C0  C002  F00F         	line	25
  2326                           	
  2327                           l1252:
  2328  0018C4                     	infsnz	((c:utoa@buf)),c
  2329  0018C4  4A08               	incf	((c:utoa@buf+1)),c
  2330  0018C6  2A09               	line	26
  2331                           	
  2332                           l1254:
  2333  0018C8                     	movf	((c:utoa@v)),c,w
  2334  0018C8  500E               iorwf	((c:utoa@v+1)),c,w
  2335  0018CA  100F               	btfss	status,2
  2336  0018CC  A4D8               	goto	u481
  2337  0018CE  EF6B  F00C         	goto	u480
  2338  0018D2  EF6D  F00C         
  2339                           u481:
  2340  0018D6                     	goto	l1250
  2341  0018D6  EF54  F00C         u480:
  2342  0018DA                     	goto	l1256
  2343  0018DA  EF6F  F00C         	
  2344                           l600:
  2345  0018DE                     	line	27
  2346                           	
  2347                           l1256:
  2348  0018DE                     	movff	(c:utoa@buf),fsr2l
  2349  0018DE  C008  FFD9         	movff	(c:utoa@buf+1),fsr2h
  2350  0018E2  C009  FFDA         	movlw	low(0)
  2351  0018E6  0E00               	movwf	indf2
  2352  0018E8  6EDF               	
  2353                           l1258:
  2354  0018EA                     	decf	((c:utoa@buf)),c
  2355  0018EA  0608               	btfss	status,0
  2356  0018EC  A0D8               	decf	((c:utoa@buf+1)),c
  2357  0018EE  0609               	goto	l1260
  2358  0018F0  EF7A  F00C         	line	28
  2359                           	
  2360                           l601:
  2361  0018F4                     	line	29
  2362                           	
  2363                           l1260:
  2364  0018F4                     	movff	(c:utoa@val),(c:___lwmod@dividend)
  2365  0018F4  C00A  F001         	movff	(c:utoa@val+1),(c:___lwmod@dividend+1)
  2366  0018F8  C00B  F002         	movff	(c:utoa@base),(c:___lwmod@divisor)
  2367  0018FC  C00C  F003         	movff	(c:utoa@base+1),(c:___lwmod@divisor+1)
  2368  001900  C00D  F004         	call	___lwmod	;wreg free
  2369  001904  EC4D  F00D         	movf	(0+?___lwmod),c,w
  2370  001908  5001               	movwf	((c:utoa@c)),c
  2371  00190A  6E10               	line	30
  2372                           	
  2373                           l1262:
  2374  00190C                     	movff	(c:utoa@val),(c:___lwdiv@dividend)
  2375  00190C  C00A  F001         	movff	(c:utoa@val+1),(c:___lwdiv@dividend+1)
  2376  001910  C00B  F002         	movff	(c:utoa@base),(c:___lwdiv@divisor)
  2377  001914  C00C  F003         	movff	(c:utoa@base+1),(c:___lwdiv@divisor+1)
  2378  001918  C00D  F004         	call	___lwdiv	;wreg free
  2379  00191C  EC09  F00D         	movff	0+?___lwdiv,(c:utoa@val)
  2380  001920  C001  F00A         	movff	1+?___lwdiv,(c:utoa@val+1)
  2381  001924  C002  F00B         	line	31
  2382                           	
  2383                           l1264:
  2384  001928                     		movlw	0Ah-1
  2385  001928  0E09               	cpfsgt	((c:utoa@c)),c
  2386  00192A  6410               	goto	u491
  2387  00192C  EF9A  F00C         	goto	u490
  2388  001930  EF9C  F00C         
  2389                           u491:
  2390  001934                     	goto	l602
  2391  001934  EF9E  F00C         u490:
  2392  001938                     	line	32
  2393                           	
  2394                           l1266:
  2395  001938                     	movlw	(07h)&0ffh
  2396  001938  0E07               	addwf	((c:utoa@c)),c
  2397  00193A  2610               	
  2398                           l602:
  2399  00193C                     	line	33
  2400                           	movlw	(030h)&0ffh
  2401  00193C  0E30               	addwf	((c:utoa@c)),c
  2402  00193E  2610               	line	34
  2403                           	
  2404                           l1268:
  2405  001940                     	movff	(c:utoa@buf),fsr2l
  2406  001940  C008  FFD9         	movff	(c:utoa@buf+1),fsr2h
  2407  001944  C009  FFDA         	movff	(c:utoa@c),indf2
  2408  001948  C010  FFDF         
  2409                           	
  2410                           l1270:
  2411  00194C                     	decf	((c:utoa@buf)),c
  2412  00194C  0608               	btfss	status,0
  2413  00194E  A0D8               	decf	((c:utoa@buf+1)),c
  2414  001950  0609               	line	35
  2415                           	
  2416                           l1272:
  2417  001952                     	movf	((c:utoa@val)),c,w
  2418  001952  500A               iorwf	((c:utoa@val+1)),c,w
  2419  001954  100B               	btfss	status,2
  2420  001956  A4D8               	goto	u501
  2421  001958  EFB0  F00C         	goto	u500
  2422  00195C  EFB2  F00C         
  2423                           u501:
  2424  001960                     	goto	l1260
  2425  001960  EF7A  F00C         u500:
  2426  001964                     	goto	l1274
  2427  001964  EFB4  F00C         	
  2428                           l603:
  2429  001968                     	line	36
  2430                           	
  2431                           l1274:
  2432  001968                     ;	Return value of _utoa is never used
  2433                           	infsnz	((c:utoa@buf)),c
  2434  001968  4A08               	incf	((c:utoa@buf+1)),c
  2435  00196A  2A09               	goto	l604
  2436  00196C  EFB8  F00C         	
  2437                           l1276:
  2438  001970                     	line	37
  2439                           	
  2440                           l604:
  2441  001970                     	return	;funcret
  2442  001970  0012               	opt stack 0
  2443                           GLOBAL	__end_of_utoa
  2444                           	__end_of_utoa:
  2445  001972                     	signat	_utoa,12410
  2446                           	global	___lwmod
  2447                           
  2448 ;; *************** function ___lwmod *****************
  2449 ;; Defined at:
  2450 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  dividend        2    0[COMRAM] unsigned int 
  2453 ;;  divisor         2    2[COMRAM] unsigned int 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  counter         1    4[COMRAM] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  2    0[COMRAM] unsigned int 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2468 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2469 ;;Total ram usage:        5 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_utoa
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           psect	text3,class=CODE,space=0,reloc=2,group=1
  2478                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
  2479                           	line	8
  2480                           global __ptext3
  2481                           __ptext3:
  2482  001A9A                     psect	text3
  2483                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
  2484                           	line	8
  2485                           	global	__size_of___lwmod
  2486                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2487  0000                     	
  2488                           ___lwmod:
  2489  001A9A                     ;incstack = 0
  2490                           	opt	stack 28
  2491                           	line	13
  2492                           	
  2493                           l1232:
  2494  001A9A                     	movf	((c:___lwmod@divisor)),c,w
  2495  001A9A  5003               iorwf	((c:___lwmod@divisor+1)),c,w
  2496  001A9C  1004               	btfsc	status,2
  2497  001A9E  B4D8               	goto	u451
  2498  001AA0  EF54  F00D         	goto	u450
  2499  001AA4  EF56  F00D         
  2500                           u451:
  2501  001AA8                     	goto	l691
  2502  001AA8  EF84  F00D         u450:
  2503  001AAC                     	line	14
  2504                           	
  2505                           l1234:
  2506  001AAC                     	movlw	low(01h)
  2507  001AAC  0E01               	movwf	((c:___lwmod@counter)),c
  2508  001AAE  6E05               	line	15
  2509                           	goto	l1238
  2510  001AB0  EF60  F00D         	
  2511                           l693:
  2512  001AB4                     	line	16
  2513                           	
  2514                           l1236:
  2515  001AB4                     	bcf	status,0
  2516  001AB4  90D8               	rlcf	((c:___lwmod@divisor)),c
  2517  001AB6  3603               	rlcf	((c:___lwmod@divisor+1)),c
  2518  001AB8  3604               	line	17
  2519                           	incf	((c:___lwmod@counter)),c
  2520  001ABA  2A05               	goto	l1238
  2521  001ABC  EF60  F00D         	line	18
  2522                           	
  2523                           l692:
  2524  001AC0                     	line	15
  2525                           	
  2526                           l1238:
  2527  001AC0                     	
  2528                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  2529  001AC0  AE04               	goto	u461
  2530  001AC2  EF65  F00D         	goto	u460
  2531  001AC6  EF67  F00D         u461:
  2532  001ACA                     	goto	l1236
  2533  001ACA  EF5A  F00D         u460:
  2534  001ACE                     	goto	l1240
  2535  001ACE  EF6B  F00D         	
  2536                           l694:
  2537  001AD2                     	goto	l1240
  2538  001AD2  EF6B  F00D         	line	19
  2539                           	
  2540                           l695:
  2541  001AD6                     	line	20
  2542                           	
  2543                           l1240:
  2544  001AD6                     		movf	((c:___lwmod@divisor)),c,w
  2545  001AD6  5003               	subwf	((c:___lwmod@dividend)),c,w
  2546  001AD8  5C01               	movf	((c:___lwmod@divisor+1)),c,w
  2547  001ADA  5004               	subwfb	((c:___lwmod@dividend+1)),c,w
  2548  001ADC  5802               	btfss	status,0
  2549  001ADE  A0D8               	goto	u471
  2550  001AE0  EF74  F00D         	goto	u470
  2551  001AE4  EF76  F00D         
  2552                           u471:
  2553  001AE8                     	goto	l1244
  2554  001AE8  EF7C  F00D         u470:
  2555  001AEC                     	line	21
  2556                           	
  2557                           l1242:
  2558  001AEC                     	movf	((c:___lwmod@divisor)),c,w
  2559  001AEC  5003               	subwf	((c:___lwmod@dividend)),c
  2560  001AEE  5E01               	movf	((c:___lwmod@divisor+1)),c,w
  2561  001AF0  5004               	subwfb	((c:___lwmod@dividend+1)),c
  2562  001AF2  5A02               
  2563                           	goto	l1244
  2564  001AF4  EF7C  F00D         	
  2565                           l696:
  2566  001AF8                     	line	22
  2567                           	
  2568                           l1244:
  2569  001AF8                     	bcf	status,0
  2570  001AF8  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  2571  001AFA  3204               	rrcf	((c:___lwmod@divisor)),c
  2572  001AFC  3203               	line	23
  2573                           	
  2574                           l1246:
  2575  001AFE                     	decfsz	((c:___lwmod@counter)),c
  2576  001AFE  2E05               	
  2577                           	goto	l1240
  2578  001B00  EF6B  F00D         	goto	l691
  2579  001B04  EF84  F00D         	
  2580                           l697:
  2581  001B08                     	line	24
  2582                           	
  2583                           l691:
  2584  001B08                     	line	25
  2585                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  2586  001B08  C001  F001         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  2587  001B0C  C002  F002         	line	26
  2588                           	
  2589                           l698:
  2590  001B10                     	return	;funcret
  2591  001B10  0012               	opt stack 0
  2592                           GLOBAL	__end_of___lwmod
  2593                           	__end_of___lwmod:
  2594  001B12                     	signat	___lwmod,8314
  2595                           	global	___lwdiv
  2596                           
  2597 ;; *************** function ___lwdiv *****************
  2598 ;; Defined at:
  2599 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  dividend        2    0[COMRAM] unsigned int 
  2602 ;;  divisor         2    2[COMRAM] unsigned int 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  quotient        2    4[COMRAM] unsigned int 
  2605 ;;  counter         1    6[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  2    0[COMRAM] unsigned int 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2616 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2618 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2619 ;;Total ram usage:        7 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_utoa
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           psect	text4,class=CODE,space=0,reloc=2,group=1
  2628                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  2629                           	line	8
  2630                           global __ptext4
  2631                           __ptext4:
  2632  001A12                     psect	text4
  2633                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  2634                           	line	8
  2635                           	global	__size_of___lwdiv
  2636                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2637  0000                     	
  2638                           ___lwdiv:
  2639  001A12                     ;incstack = 0
  2640                           	opt	stack 28
  2641                           	line	14
  2642                           	
  2643                           l1210:
  2644  001A12                     	movlw	high(0)
  2645  001A12  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  2646  001A14  6E06               	movlw	low(0)
  2647  001A16  0E00               	movwf	((c:___lwdiv@quotient)),c
  2648  001A18  6E05               	line	15
  2649                           	
  2650                           l1212:
  2651  001A1A                     	movf	((c:___lwdiv@divisor)),c,w
  2652  001A1A  5003               iorwf	((c:___lwdiv@divisor+1)),c,w
  2653  001A1C  1004               	btfsc	status,2
  2654  001A1E  B4D8               	goto	u421
  2655  001A20  EF14  F00D         	goto	u420
  2656  001A24  EF16  F00D         
  2657                           u421:
  2658  001A28                     	goto	l681
  2659  001A28  EF48  F00D         u420:
  2660  001A2C                     	line	16
  2661                           	
  2662                           l1214:
  2663  001A2C                     	movlw	low(01h)
  2664  001A2C  0E01               	movwf	((c:___lwdiv@counter)),c
  2665  001A2E  6E07               	line	17
  2666                           	goto	l1218
  2667  001A30  EF20  F00D         	
  2668                           l683:
  2669  001A34                     	line	18
  2670                           	
  2671                           l1216:
  2672  001A34                     	bcf	status,0
  2673  001A34  90D8               	rlcf	((c:___lwdiv@divisor)),c
  2674  001A36  3603               	rlcf	((c:___lwdiv@divisor+1)),c
  2675  001A38  3604               	line	19
  2676                           	incf	((c:___lwdiv@counter)),c
  2677  001A3A  2A07               	goto	l1218
  2678  001A3C  EF20  F00D         	line	20
  2679                           	
  2680                           l682:
  2681  001A40                     	line	17
  2682                           	
  2683                           l1218:
  2684  001A40                     	
  2685                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  2686  001A40  AE04               	goto	u431
  2687  001A42  EF25  F00D         	goto	u430
  2688  001A46  EF27  F00D         u431:
  2689  001A4A                     	goto	l1216
  2690  001A4A  EF1A  F00D         u430:
  2691  001A4E                     	goto	l1220
  2692  001A4E  EF2B  F00D         	
  2693                           l684:
  2694  001A52                     	goto	l1220
  2695  001A52  EF2B  F00D         	line	21
  2696                           	
  2697                           l685:
  2698  001A56                     	line	22
  2699                           	
  2700                           l1220:
  2701  001A56                     	bcf	status,0
  2702  001A56  90D8               	rlcf	((c:___lwdiv@quotient)),c
  2703  001A58  3605               	rlcf	((c:___lwdiv@quotient+1)),c
  2704  001A5A  3606               	line	23
  2705                           	
  2706                           l1222:
  2707  001A5C                     		movf	((c:___lwdiv@divisor)),c,w
  2708  001A5C  5003               	subwf	((c:___lwdiv@dividend)),c,w
  2709  001A5E  5C01               	movf	((c:___lwdiv@divisor+1)),c,w
  2710  001A60  5004               	subwfb	((c:___lwdiv@dividend+1)),c,w
  2711  001A62  5802               	btfss	status,0
  2712  001A64  A0D8               	goto	u441
  2713  001A66  EF37  F00D         	goto	u440
  2714  001A6A  EF39  F00D         
  2715                           u441:
  2716  001A6E                     	goto	l1228
  2717  001A6E  EF40  F00D         u440:
  2718  001A72                     	line	24
  2719                           	
  2720                           l1224:
  2721  001A72                     	movf	((c:___lwdiv@divisor)),c,w
  2722  001A72  5003               	subwf	((c:___lwdiv@dividend)),c
  2723  001A74  5E01               	movf	((c:___lwdiv@divisor+1)),c,w
  2724  001A76  5004               	subwfb	((c:___lwdiv@dividend+1)),c
  2725  001A78  5A02               
  2726                           	line	25
  2727                           	
  2728                           l1226:
  2729  001A7A                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  2730  001A7A  8005               	goto	l1228
  2731  001A7C  EF40  F00D         	line	26
  2732                           	
  2733                           l686:
  2734  001A80                     	line	27
  2735                           	
  2736                           l1228:
  2737  001A80                     	bcf	status,0
  2738  001A80  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  2739  001A82  3204               	rrcf	((c:___lwdiv@divisor)),c
  2740  001A84  3203               	line	28
  2741                           	
  2742                           l1230:
  2743  001A86                     	decfsz	((c:___lwdiv@counter)),c
  2744  001A86  2E07               	
  2745                           	goto	l1220
  2746  001A88  EF2B  F00D         	goto	l681
  2747  001A8C  EF48  F00D         	
  2748                           l687:
  2749  001A90                     	line	29
  2750                           	
  2751                           l681:
  2752  001A90                     	line	30
  2753                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  2754  001A90  C005  F001         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  2755  001A94  C006  F002         	line	31
  2756                           	
  2757                           l688:
  2758  001A98                     	return	;funcret
  2759  001A98  0012               	opt stack 0
  2760                           GLOBAL	__end_of___lwdiv
  2761                           	__end_of___lwdiv:
  2762  001A9A                     	signat	___lwdiv,8314
  2763                           	global	_MCU_Init
  2764                           
  2765 ;; *************** function _MCU_Init *****************
  2766 ;; Defined at:
  2767 ;;		line 78 in file "main.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_main
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2794                           	file	"main.c"
  2795                           	line	78
  2796                           global __ptext5
  2797                           __ptext5:
  2798  001C9C                     psect	text5
  2799                           	file	"main.c"
  2800                           	line	78
  2801                           	global	__size_of_MCU_Init
  2802                           	__size_of_MCU_Init	equ	__end_of_MCU_Init-_MCU_Init
  2803  0000                     	
  2804                           _MCU_Init:
  2805  001C9C                     ;incstack = 0
  2806                           	opt	stack 30
  2807                           	line	80
  2808                           	
  2809                           l1086:
  2810  001C9C                     ;main.c: 80: OSCCONbits.IRCF=0b111;
  2811                           		
  2812                           	bsf	((c:4051)),c, 4+0	;volatile
  2813  001C9C  88D3               	bsf	((c:4051)),c, 4+1	;volatile
  2814  001C9E  8AD3               	bsf	((c:4051)),c, 4+2	;volatile
  2815  001CA0  8CD3               
  2816                           	line	82
  2817                           ;main.c: 82: ADCON1=0xFF;
  2818                           	setf	((c:4033)),c	;volatile
  2819  001CA2  68C1               	line	85
  2820                           	
  2821                           l1088:
  2822  001CA4                     ;main.c: 85: PORTA=0x00;
  2823                           	movlw	low(0)
  2824  001CA4  0E00               	movwf	((c:3968)),c	;volatile
  2825  001CA6  6E80               	line	86
  2826                           ;main.c: 86: PORTB=0x00;
  2827                           	movlw	low(0)
  2828  001CA8  0E00               	movwf	((c:3969)),c	;volatile
  2829  001CAA  6E81               	line	87
  2830                           ;main.c: 87: PORTC=0x00;
  2831                           	movlw	low(0)
  2832  001CAC  0E00               	movwf	((c:3970)),c	;volatile
  2833  001CAE  6E82               	line	88
  2834                           ;main.c: 88: PORTD=0x00;
  2835                           	movlw	low(0)
  2836  001CB0  0E00               	movwf	((c:3971)),c	;volatile
  2837  001CB2  6E83               	line	91
  2838                           ;main.c: 91: TRISA=0x00;
  2839                           	movlw	low(0)
  2840  001CB4  0E00               	movwf	((c:3986)),c	;volatile
  2841  001CB6  6E92               	line	92
  2842                           ;main.c: 92: TRISB=0x00;
  2843                           	movlw	low(0)
  2844  001CB8  0E00               	movwf	((c:3987)),c	;volatile
  2845  001CBA  6E93               	line	93
  2846                           ;main.c: 93: TRISC=0x00;
  2847                           	movlw	low(0)
  2848  001CBC  0E00               	movwf	((c:3988)),c	;volatile
  2849  001CBE  6E94               	line	94
  2850                           ;main.c: 94: TRISD=0x00;
  2851                           	movlw	low(0)
  2852  001CC0  0E00               	movwf	((c:3989)),c	;volatile
  2853  001CC2  6E95               	line	96
  2854                           	
  2855                           l1090:
  2856  001CC4                     ;main.c: 96: TRISD1 = 0;
  2857                           	bcf	c:(31913/8),(31913)&7	;volatile
  2858  001CC4  9295               	line	97
  2859                           	
  2860                           l1092:
  2861  001CC6                     ;main.c: 97: TRISD0 = 1;
  2862                           	bsf	c:(31912/8),(31912)&7	;volatile
  2863  001CC6  8095               	line	98
  2864                           	
  2865                           l255:
  2866  001CC8                     	return	;funcret
  2867  001CC8  0012               	opt stack 0
  2868                           GLOBAL	__end_of_MCU_Init
  2869                           	__end_of_MCU_Init:
  2870  001CCA                     	signat	_MCU_Init,89
  2871                           	global	_LCD_puts
  2872                           
  2873 ;; *************** function _LCD_puts *****************
  2874 ;; Defined at:
  2875 ;;		line 135 in file "lcd.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  a               2    8[COMRAM] PTR unsigned char 
  2878 ;;		 -> lcdDistance(8), 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  i               2   10[COMRAM] int 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2894 ;;Total ram usage:        4 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    2
  2897 ;; This function calls:
  2898 ;;		_LCD_putc
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           psect	text6,class=CODE,space=0,reloc=2,group=0
  2904                           	file	"lcd.c"
  2905                           	line	135
  2906                           global __ptext6
  2907                           __ptext6:
  2908  001C1A                     psect	text6
  2909                           	file	"lcd.c"
  2910                           	line	135
  2911                           	global	__size_of_LCD_puts
  2912                           	__size_of_LCD_puts	equ	__end_of_LCD_puts-_LCD_puts
  2913  0000                     	
  2914                           _LCD_puts:
  2915  001C1A                     ;incstack = 0
  2916                           	opt	stack 28
  2917                           	line	137
  2918                           	
  2919                           l1330:
  2920  001C1A                     ;lcd.c: 137: for ( int i = 0; a[i] != '\0'; ++i ) {
  2921                           	movlw	high(0)
  2922  001C1A  0E00               	movwf	((c:LCD_puts@i+1)),c
  2923  001C1C  6E0C               	movlw	low(0)
  2924  001C1E  0E00               	movwf	((c:LCD_puts@i)),c
  2925  001C20  6E0B               	goto	l1336
  2926  001C22  EF20  F00E         	
  2927                           l59:
  2928  001C26                     	line	138
  2929                           	
  2930                           l1332:
  2931  001C26                     ;lcd.c: 138: LCD_putc(a[i]);
  2932                           	movf	((c:LCD_puts@i)),c,w
  2933  001C26  500B               	addwf	((c:LCD_puts@a)),c,w
  2934  001C28  2409               	movwf	c:fsr2l
  2935  001C2A  6ED9               	movf	((c:LCD_puts@i+1)),c,w
  2936  001C2C  500C               	addwfc	((c:LCD_puts@a+1)),c,w
  2937  001C2E  200A               	movwf	1+c:fsr2l
  2938  001C30  6EDA               	movf	indf2,w
  2939  001C32  50DF               	
  2940                           	call	_LCD_putc
  2941  001C34  ECCE  F00B         	line	137
  2942                           	
  2943                           l1334:
  2944  001C38                     	infsnz	((c:LCD_puts@i)),c
  2945  001C38  4A0B               	incf	((c:LCD_puts@i+1)),c
  2946  001C3A  2A0C               	goto	l1336
  2947  001C3C  EF20  F00E         	
  2948                           l58:
  2949  001C40                     	
  2950                           l1336:
  2951  001C40                     	movf	((c:LCD_puts@i)),c,w
  2952  001C40  500B               	addwf	((c:LCD_puts@a)),c,w
  2953  001C42  2409               	movwf	c:fsr2l
  2954  001C44  6ED9               	movf	((c:LCD_puts@i+1)),c,w
  2955  001C46  500C               	addwfc	((c:LCD_puts@a+1)),c,w
  2956  001C48  200A               	movwf	1+c:fsr2l
  2957  001C4A  6EDA               	movf	indf2,w
  2958  001C4C  50DF               	btfss	status,2
  2959  001C4E  A4D8               	goto	u551
  2960  001C50  EF2C  F00E         	goto	u550
  2961  001C54  EF2E  F00E         u551:
  2962  001C58                     	goto	l1332
  2963  001C58  EF13  F00E         u550:
  2964  001C5C                     	goto	l61
  2965  001C5C  EF30  F00E         	
  2966                           l60:
  2967  001C60                     	line	141
  2968                           	
  2969                           l61:
  2970  001C60                     	return	;funcret
  2971  001C60  0012               	opt stack 0
  2972                           GLOBAL	__end_of_LCD_puts
  2973                           	__end_of_LCD_puts:
  2974  001C62                     	signat	_LCD_puts,4217
  2975                           	global	_LCD_putrs
  2976                           
  2977 ;; *************** function _LCD_putrs *****************
  2978 ;; Defined at:
  2979 ;;		line 143 in file "lcd.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  a               2    8[COMRAM] PTR const unsigned char 
  2982 ;;		 -> STR_6(3), STR_5(15), STR_4(15), STR_3(15), 
  2983 ;;		 -> STR_2(16), STR_1(15), 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  i               2   12[COMRAM] int 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  2995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2997 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2998 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  2999 ;;Total ram usage:        6 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    2
  3002 ;; This function calls:
  3003 ;;		_LCD_putc
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           psect	text7,class=CODE,space=0,reloc=2,group=0
  3009                           	line	143
  3010                           global __ptext7
  3011                           __ptext7:
  3012  001B12                     psect	text7
  3013                           	file	"lcd.c"
  3014                           	line	143
  3015                           	global	__size_of_LCD_putrs
  3016                           	__size_of_LCD_putrs	equ	__end_of_LCD_putrs-_LCD_putrs
  3017  0000                     	
  3018                           _LCD_putrs:
  3019  001B12                     ;incstack = 0
  3020                           	opt	stack 28
  3021                           	line	145
  3022                           	
  3023                           l1338:
  3024  001B12                     ;lcd.c: 145: for ( int i = 0; a[i] != '\0'; ++i ) {
  3025                           	movlw	high(0)
  3026  001B12  0E00               	movwf	((c:LCD_putrs@i+1)),c
  3027  001B14  6E0E               	movlw	low(0)
  3028  001B16  0E00               	movwf	((c:LCD_putrs@i)),c
  3029  001B18  6E0D               	goto	l1344
  3030  001B1A  EFA1  F00D         	
  3031                           l65:
  3032  001B1E                     	line	146
  3033                           	
  3034                           l1340:
  3035  001B1E                     ;lcd.c: 146: LCD_putc(a[i]);
  3036                           	movf	((c:LCD_putrs@i)),c,w
  3037  001B1E  500D               	addwf	((c:LCD_putrs@a)),c,w
  3038  001B20  2409               	movwf	(??_LCD_putrs+0+0)&0ffh,c
  3039  001B22  6E0B               	movf	((c:LCD_putrs@i+1)),c,w
  3040  001B24  500E               	addwfc	((c:LCD_putrs@a+1)),c,w
  3041  001B26  200A               	movwf	(??_LCD_putrs+0+0+1)&0ffh,c
  3042  001B28  6E0C               	movff	??_LCD_putrs+0+0,tblptrl
  3043  001B2A  C00B  FFF6         	movff	??_LCD_putrs+0+1,tblptrh
  3044  001B2E  C00C  FFF7         	if	0	;tblptru may be non-zero
  3045  001B32                     	clrf	tblptru
  3047  001B32                     	if	0	;tblptru may be non-zero
  3048  001B32                     	global __mediumconst
  3049                           movlw	low highword(__mediumconst)
  3052  001B32                     	tblrd	*
  3053  001B32  0008               	
  3054                           	movf	tablat,w
  3055  001B34  50F5               	
  3056                           	call	_LCD_putc
  3057  001B36  ECCE  F00B         	line	145
  3058                           	
  3059                           l1342:
  3060  001B3A                     	infsnz	((c:LCD_putrs@i)),c
  3061  001B3A  4A0D               	incf	((c:LCD_putrs@i+1)),c
  3062  001B3C  2A0E               	goto	l1344
  3063  001B3E  EFA1  F00D         	
  3064                           l64:
  3065  001B42                     	
  3066                           l1344:
  3067  001B42                     	movf	((c:LCD_putrs@i)),c,w
  3068  001B42  500D               	addwf	((c:LCD_putrs@a)),c,w
  3069  001B44  2409               	movwf	(??_LCD_putrs+0+0)&0ffh,c
  3070  001B46  6E0B               	movf	((c:LCD_putrs@i+1)),c,w
  3071  001B48  500E               	addwfc	((c:LCD_putrs@a+1)),c,w
  3072  001B4A  200A               	movwf	(??_LCD_putrs+0+0+1)&0ffh,c
  3073  001B4C  6E0C               	movff	??_LCD_putrs+0+0,tblptrl
  3074  001B4E  C00B  FFF6         	movff	??_LCD_putrs+0+1,tblptrh
  3075  001B52  C00C  FFF7         	if	0	;tblptru may be non-zero
  3076  001B56                     	clrf	tblptru
  3078  001B56                     	if	0	;tblptru may be non-zero
  3079  001B56                     	global __mediumconst
  3080                           movlw	low highword(__mediumconst)
  3083  001B56                     	tblrd	*
  3084  001B56  0008               	
  3085                           	movf	tablat,w
  3086  001B58  50F5               	iorlw	0
  3087  001B5A  0900               	btfss	status,2
  3088  001B5C  A4D8               	goto	u561
  3089  001B5E  EFB3  F00D         	goto	u560
  3090  001B62  EFB5  F00D         u561:
  3091  001B66                     	goto	l1340
  3092  001B66  EF8F  F00D         u560:
  3093  001B6A                     	goto	l67
  3094  001B6A  EFB7  F00D         	
  3095                           l66:
  3096  001B6E                     	line	149
  3097                           	
  3098                           l67:
  3099  001B6E                     	return	;funcret
  3100  001B6E  0012               	opt stack 0
  3101                           GLOBAL	__end_of_LCD_putrs
  3102                           	__end_of_LCD_putrs:
  3103  001B70                     	signat	_LCD_putrs,4217
  3104                           	global	_LCD_putc
  3105                           
  3106 ;; *************** function _LCD_putc *****************
  3107 ;; Defined at:
  3108 ;;		line 118 in file "lcd.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  c               1    wreg     unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  c               1    7[COMRAM] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3124 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3125 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3126 ;;Total ram usage:        4 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    1
  3129 ;; This function calls:
  3130 ;;		_LCD_Out
  3131 ;; This function is called by:
  3132 ;;		_LCD_puts
  3133 ;;		_LCD_putrs
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           psect	text8,class=CODE,space=0,reloc=2,group=0
  3137                           	line	118
  3138                           global __ptext8
  3139                           __ptext8:
  3140  00179C                     psect	text8
  3141                           	file	"lcd.c"
  3142                           	line	118
  3143                           	global	__size_of_LCD_putc
  3144                           	__size_of_LCD_putc	equ	__end_of_LCD_putc-_LCD_putc
  3145  0000                     	
  3146                           _LCD_putc:
  3147  00179C                     ;incstack = 0
  3148                           	opt	stack 28
  3149                           ;LCD_putc@c stored from wreg
  3150                           	movwf	((c:LCD_putc@c)),c
  3151  00179C  6E08               	line	120
  3152                           	
  3153                           l972:
  3154  00179E                     ;lcd.c: 120: *(lcd.PORT) |= 1 << lcd.RS;
  3155                           	movf	(0+((c:_lcd)+02h)),c,w
  3156  00179E  5022               	andlw	(1<<3)-1
  3157  0017A0  0B07               	movwf	(??_LCD_putc+0+0)&0ffh,c
  3158  0017A2  6E05               	movlw	(01h)&0ffh
  3159  0017A4  0E01               	movwf	(??_LCD_putc+1+0)&0ffh,c
  3160  0017A6  6E06               	incf	((??_LCD_putc+0+0)),c
  3161  0017A8  2A05               	goto	u224
  3162  0017AA  EFD9  F00B         u225:
  3163  0017AE                     	bcf	status,0
  3164  0017AE  90D8               	rlcf	((??_LCD_putc+1+0)),c
  3165  0017B0  3606               u224:
  3166  0017B2                     	decfsz	((??_LCD_putc+0+0)),c
  3167  0017B2  2E05               	goto	u225
  3168  0017B4  EFD7  F00B         	movff	(c:_lcd),fsr2l
  3169  0017B8  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3170  0017BC  C021  FFDA         	movf	((??_LCD_putc+1+0)),c,w
  3171  0017C0  5006               	iorwf	indf2
  3172  0017C2  12DF               	line	121
  3173                           	
  3174                           l974:
  3175  0017C4                     ;lcd.c: 121: LCD_Out((c & 0xF0) >> 4);
  3176                           	swapf	((c:LCD_putc@c)),c,w
  3177  0017C4  3808               	andlw	(0ffh shr 4) & 0ffh
  3178  0017C6  0B0F               	andlw	low(0Fh)
  3179  0017C8  0B0F               	
  3180                           	call	_LCD_Out
  3181  0017CA  EC53  F00A         	line	123
  3182                           	
  3183                           l976:
  3184  0017CE                     ;lcd.c: 123: *(lcd.PORT) |= 1 << lcd.EN;
  3185                           	rrcf	(0+((c:_lcd)+02h)),c,w
  3186  0017CE  3022               	rrcf	wreg,f
  3187  0017D0  32E8               	rrcf	wreg,f
  3188  0017D2  32E8               	andlw	(1<<3)-1
  3189  0017D4  0B07               	movwf	(??_LCD_putc+0+0)&0ffh,c
  3190  0017D6  6E05               	movlw	(01h)&0ffh
  3191  0017D8  0E01               	movwf	(??_LCD_putc+1+0)&0ffh,c
  3192  0017DA  6E06               	incf	((??_LCD_putc+0+0)),c
  3193  0017DC  2A05               	goto	u234
  3194  0017DE  EFF3  F00B         u235:
  3195  0017E2                     	bcf	status,0
  3196  0017E2  90D8               	rlcf	((??_LCD_putc+1+0)),c
  3197  0017E4  3606               u234:
  3198  0017E6                     	decfsz	((??_LCD_putc+0+0)),c
  3199  0017E6  2E05               	goto	u235
  3200  0017E8  EFF1  F00B         	movff	(c:_lcd),fsr2l
  3201  0017EC  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3202  0017F0  C021  FFDA         	movf	((??_LCD_putc+1+0)),c,w
  3203  0017F4  5006               	iorwf	indf2
  3204  0017F6  12DF               	line	124
  3205                           	
  3206                           l978:
  3207  0017F8                     ;lcd.c: 124: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3208                           	opt asmopt_push
  3209                           opt asmopt_off
  3210                           	movlw	26
  3211  0017F8  0E1A               u667:
  3212  0017FA                     decfsz	wreg,f
  3213  0017FA  2EE8               	bra	u667
  3214  0017FC  D7FE               	nop2
  3215  0017FE  D000               opt asmopt_pop
  3216                           
  3217                           	line	125
  3218                           	
  3219                           l980:
  3220  001800                     ;lcd.c: 125: *(lcd.PORT) &= ~(1 << lcd.EN);
  3221                           	rrcf	(0+((c:_lcd)+02h)),c,w
  3222  001800  3022               	rrcf	wreg,f
  3223  001802  32E8               	rrcf	wreg,f
  3224  001804  32E8               	andlw	(1<<3)-1
  3225  001806  0B07               	movwf	(??_LCD_putc+0+0)&0ffh,c
  3226  001808  6E05               	movlw	(01h)&0ffh
  3227  00180A  0E01               	movwf	(??_LCD_putc+1+0)&0ffh,c
  3228  00180C  6E06               	incf	((??_LCD_putc+0+0)),c
  3229  00180E  2A05               	goto	u244
  3230  001810  EF0C  F00C         u245:
  3231  001814                     	bcf	status,0
  3232  001814  90D8               	rlcf	((??_LCD_putc+1+0)),c
  3233  001816  3606               u244:
  3234  001818                     	decfsz	((??_LCD_putc+0+0)),c
  3235  001818  2E05               	goto	u245
  3236  00181A  EF0A  F00C         	movf	((??_LCD_putc+1+0)),c,w
  3237  00181E  5006               	xorlw	0ffh
  3238  001820  0AFF               	movwf	(??_LCD_putc+2+0)&0ffh,c
  3239  001822  6E07               	movff	(c:_lcd),fsr2l
  3240  001824  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3241  001828  C021  FFDA         	movf	((??_LCD_putc+2+0)),c,w
  3242  00182C  5007               	andwf	indf2
  3243  00182E  16DF               	line	127
  3244                           	
  3245                           l982:
  3246  001830                     ;lcd.c: 127: LCD_Out(c & 0x0F);
  3247                           	movf	((c:LCD_putc@c)),c,w
  3248  001830  5008               	andlw	low(0Fh)
  3249  001832  0B0F               	
  3250                           	call	_LCD_Out
  3251  001834  EC53  F00A         	line	129
  3252                           	
  3253                           l984:
  3254  001838                     ;lcd.c: 129: *(lcd.PORT) |= 1 << lcd.EN;
  3255                           	rrcf	(0+((c:_lcd)+02h)),c,w
  3256  001838  3022               	rrcf	wreg,f
  3257  00183A  32E8               	rrcf	wreg,f
  3258  00183C  32E8               	andlw	(1<<3)-1
  3259  00183E  0B07               	movwf	(??_LCD_putc+0+0)&0ffh,c
  3260  001840  6E05               	movlw	(01h)&0ffh
  3261  001842  0E01               	movwf	(??_LCD_putc+1+0)&0ffh,c
  3262  001844  6E06               	incf	((??_LCD_putc+0+0)),c
  3263  001846  2A05               	goto	u254
  3264  001848  EF28  F00C         u255:
  3265  00184C                     	bcf	status,0
  3266  00184C  90D8               	rlcf	((??_LCD_putc+1+0)),c
  3267  00184E  3606               u254:
  3268  001850                     	decfsz	((??_LCD_putc+0+0)),c
  3269  001850  2E05               	goto	u255
  3270  001852  EF26  F00C         	movff	(c:_lcd),fsr2l
  3271  001856  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3272  00185A  C021  FFDA         	movf	((??_LCD_putc+1+0)),c,w
  3273  00185E  5006               	iorwf	indf2
  3274  001860  12DF               	line	130
  3275                           ;lcd.c: 130: _delay((unsigned long)((40)*(8000000/4000000.0)));
  3276                           	opt asmopt_push
  3277                           opt asmopt_off
  3278                           	movlw	26
  3279  001862  0E1A               u677:
  3280  001864                     decfsz	wreg,f
  3281  001864  2EE8               	bra	u677
  3282  001866  D7FE               	nop2
  3283  001868  D000               opt asmopt_pop
  3284                           
  3285                           	line	131
  3286                           	
  3287                           l986:
  3288  00186A                     ;lcd.c: 131: *(lcd.PORT) &= ~(1 << lcd.EN);
  3289                           	rrcf	(0+((c:_lcd)+02h)),c,w
  3290  00186A  3022               	rrcf	wreg,f
  3291  00186C  32E8               	rrcf	wreg,f
  3292  00186E  32E8               	andlw	(1<<3)-1
  3293  001870  0B07               	movwf	(??_LCD_putc+0+0)&0ffh,c
  3294  001872  6E05               	movlw	(01h)&0ffh
  3295  001874  0E01               	movwf	(??_LCD_putc+1+0)&0ffh,c
  3296  001876  6E06               	incf	((??_LCD_putc+0+0)),c
  3297  001878  2A05               	goto	u264
  3298  00187A  EF41  F00C         u265:
  3299  00187E                     	bcf	status,0
  3300  00187E  90D8               	rlcf	((??_LCD_putc+1+0)),c
  3301  001880  3606               u264:
  3302  001882                     	decfsz	((??_LCD_putc+0+0)),c
  3303  001882  2E05               	goto	u265
  3304  001884  EF3F  F00C         	movf	((??_LCD_putc+1+0)),c,w
  3305  001888  5006               	xorlw	0ffh
  3306  00188A  0AFF               	movwf	(??_LCD_putc+2+0)&0ffh,c
  3307  00188C  6E07               	movff	(c:_lcd),fsr2l
  3308  00188E  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3309  001892  C021  FFDA         	movf	((??_LCD_putc+2+0)),c,w
  3310  001896  5007               	andwf	indf2
  3311  001898  16DF               	line	133
  3312                           	
  3313                           l55:
  3314  00189A                     	return	;funcret
  3315  00189A  0012               	opt stack 0
  3316                           GLOBAL	__end_of_LCD_putc
  3317                           	__end_of_LCD_putc:
  3318  00189C                     	signat	_LCD_putc,4217
  3319                           	global	_LCD_Init
  3320                           
  3321 ;; *************** function _LCD_Init *****************
  3322 ;; Defined at:
  3323 ;;		line 60 in file "lcd.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  display         5    8[COMRAM] struct .
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  cmd             1   14[COMRAM] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      unsigned char 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  3337 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3340 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3341 ;;Total ram usage:        7 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    2
  3344 ;; This function calls:
  3345 ;;		_LCD_Write
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           psect	text9,class=CODE,space=0,reloc=2,group=0
  3351                           	line	60
  3352                           global __ptext9
  3353                           __ptext9:
  3354  00165A                     psect	text9
  3355                           	file	"lcd.c"
  3356                           	line	60
  3357                           	global	__size_of_LCD_Init
  3358                           	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
  3359  0000                     	
  3360                           _LCD_Init:
  3361  00165A                     ;incstack = 0
  3362                           	opt	stack 28
  3363                           	line	62
  3364                           	
  3365                           l1278:
  3366  00165A                     ;lcd.c: 62: lcd = display;
  3367                           	lfsr	2,(LCD_Init@display)
  3368  00165A  EE20  F009         	lfsr	1,(_lcd)
  3369  00165E  EE10  F020         	movlw	5-1
  3370  001662  0E04               u511:
  3371  001664                     	movff	plusw2,plusw1
  3372  001664  CFDB FFE3          	decf	wreg
  3373  001668  06E8               	bc	u511
  3374  00166A  E2FC               
  3375                           	line	71
  3376                           	
  3377                           l1280:
  3378  00166C                     ;lcd.c: 71: if ( lcd.PORT == &PORTA ) {
  3379                           		movlw	(low(3968))
  3380  00166C  0E80               	xorwf	((c:_lcd)),c,w
  3381  00166E  1820               	bnz	u521
  3382  001670  E107               	movlw	(high(3968))
  3383  001672  0E0F               	xorwf	((c:_lcd+1)),c,w
  3384  001674  1821               	btfss	status,2
  3385  001676  A4D8               	goto	u521
  3386  001678  EF40  F00B         	goto	u520
  3387  00167C  EF42  F00B         
  3388                           u521:
  3389  001680                     	goto	l1284
  3390  001680  EF46  F00B         u520:
  3391  001684                     	line	72
  3392                           	
  3393                           l1282:
  3394  001684                     ;lcd.c: 72: TRISA = 0x00;
  3395                           	movlw	low(0)
  3396  001684  0E00               	movwf	((c:3986)),c	;volatile
  3397  001686  6E92               	line	73
  3398                           ;lcd.c: 73: }
  3399                           	goto	l1292
  3400  001688  EF6C  F00B         	line	74
  3401                           	
  3402                           l33:
  3403  00168C                     	
  3404                           l1284:
  3405  00168C                     ;lcd.c: 74: else if ( lcd.PORT == &PORTB ) {
  3406                           		movlw	(low(3969))
  3407  00168C  0E81               	xorwf	((c:_lcd)),c,w
  3408  00168E  1820               	bnz	u531
  3409  001690  E107               	movlw	(high(3969))
  3410  001692  0E0F               	xorwf	((c:_lcd+1)),c,w
  3411  001694  1821               	btfss	status,2
  3412  001696  A4D8               	goto	u531
  3413  001698  EF50  F00B         	goto	u530
  3414  00169C  EF52  F00B         
  3415                           u531:
  3416  0016A0                     	goto	l1288
  3417  0016A0  EF56  F00B         u530:
  3418  0016A4                     	line	75
  3419                           	
  3420                           l1286:
  3421  0016A4                     ;lcd.c: 75: TRISB = 0x00;
  3422                           	movlw	low(0)
  3423  0016A4  0E00               	movwf	((c:3987)),c	;volatile
  3424  0016A6  6E93               	line	76
  3425                           ;lcd.c: 76: }
  3426                           	goto	l1292
  3427  0016A8  EF6C  F00B         	line	77
  3428                           	
  3429                           l35:
  3430  0016AC                     	
  3431                           l1288:
  3432  0016AC                     ;lcd.c: 77: else if ( lcd.PORT == &PORTC ) {
  3433                           		movlw	(low(3970))
  3434  0016AC  0E82               	xorwf	((c:_lcd)),c,w
  3435  0016AE  1820               	bnz	u541
  3436  0016B0  E107               	movlw	(high(3970))
  3437  0016B2  0E0F               	xorwf	((c:_lcd+1)),c,w
  3438  0016B4  1821               	btfss	status,2
  3439  0016B6  A4D8               	goto	u541
  3440  0016B8  EF60  F00B         	goto	u540
  3441  0016BC  EF62  F00B         
  3442                           u541:
  3443  0016C0                     	goto	l39
  3444  0016C0  EFCD  F00B         u540:
  3445  0016C4                     	line	78
  3446                           	
  3447                           l1290:
  3448  0016C4                     ;lcd.c: 78: TRISC = 0x00;
  3449                           	movlw	low(0)
  3450  0016C4  0E00               	movwf	((c:3988)),c	;volatile
  3451  0016C6  6E94               	line	79
  3452                           ;lcd.c: 79: }
  3453                           	goto	l1292
  3454  0016C8  EF6C  F00B         	line	88
  3455                           	
  3456                           l37:
  3457  0016CC                     	line	89
  3458                           ;lcd.c: 88: else {
  3459                           ;lcd.c: 89: return 0;
  3460                           ;	Return value of _LCD_Init is never used
  3461                           	goto	l39
  3462  0016CC  EFCD  F00B         	line	90
  3463                           	
  3464                           l38:
  3465  0016D0                     	goto	l1292
  3466  0016D0  EF6C  F00B         	
  3467                           l36:
  3468  0016D4                     	goto	l1292
  3469  0016D4  EF6C  F00B         	
  3470                           l34:
  3471  0016D8                     	line	93
  3472                           	
  3473                           l1292:
  3474  0016D8                     ;lcd.c: 90: }
  3475                           ;lcd.c: 93: _delay((unsigned long)((20)*(8000000/4000.0)));
  3476                           	opt asmopt_push
  3477                           opt asmopt_off
  3478                           movlw	52
  3479  0016D8  0E34               movwf	(??_LCD_Init+0+0)&0ffh,c,f
  3480  0016DA  6E0E               	movlw	242
  3481  0016DC  0EF2               u687:
  3482  0016DE                     decfsz	wreg,f
  3483  0016DE  2EE8               	bra	u687
  3484  0016E0  D7FE               	decfsz	(??_LCD_Init+0+0)&0ffh,c,f
  3485  0016E2  2E0E               	bra	u687
  3486  0016E4  D7FC               opt asmopt_pop
  3487                           
  3488                           	line	96
  3489                           	
  3490                           l1294:
  3491  0016E6                     ;lcd.c: 96: LCD_Write(0x03);
  3492                           	movlw	(03h)&0ffh
  3493  0016E6  0E03               	
  3494                           	call	_LCD_Write
  3495  0016E8  ECB9  F00C         	line	97
  3496                           	
  3497                           l1296:
  3498  0016EC                     ;lcd.c: 97: _delay((unsigned long)((5)*(8000000/4000.0)));
  3499                           	opt asmopt_push
  3500                           opt asmopt_off
  3501                           movlw	13
  3502  0016EC  0E0D               movwf	(??_LCD_Init+0+0)&0ffh,c,f
  3503  0016EE  6E0E               	movlw	252
  3504  0016F0  0EFC               u697:
  3505  0016F2                     decfsz	wreg,f
  3506  0016F2  2EE8               	bra	u697
  3507  0016F4  D7FE               	decfsz	(??_LCD_Init+0+0)&0ffh,c,f
  3508  0016F6  2E0E               	bra	u697
  3509  0016F8  D7FC               opt asmopt_pop
  3510                           
  3511                           	line	98
  3512                           ;lcd.c: 98: LCD_Write(0x03);
  3513                           	movlw	(03h)&0ffh
  3514  0016FA  0E03               	
  3515                           	call	_LCD_Write
  3516  0016FC  ECB9  F00C         	line	99
  3517                           	
  3518                           l1298:
  3519  001700                     ;lcd.c: 99: _delay((unsigned long)((16)*(8000000/4000.0)));
  3520                           	opt asmopt_push
  3521                           opt asmopt_off
  3522                           movlw	42
  3523  001700  0E2A               movwf	(??_LCD_Init+0+0)&0ffh,c,f
  3524  001702  6E0E               	movlw	142
  3525  001704  0E8E               u707:
  3526  001706                     decfsz	wreg,f
  3527  001706  2EE8               	bra	u707
  3528  001708  D7FE               	decfsz	(??_LCD_Init+0+0)&0ffh,c,f
  3529  00170A  2E0E               	bra	u707
  3530  00170C  D7FC               opt asmopt_pop
  3531                           
  3532                           	line	100
  3533                           	
  3534                           l1300:
  3535  00170E                     ;lcd.c: 100: LCD_Write(0x03);
  3536                           	movlw	(03h)&0ffh
  3537  00170E  0E03               	
  3538                           	call	_LCD_Write
  3539  001710  ECB9  F00C         	line	103
  3540                           	
  3541                           l1302:
  3542  001714                     ;lcd.c: 103: LCD_Write(0x02);
  3543                           	movlw	(02h)&0ffh
  3544  001714  0E02               	
  3545                           	call	_LCD_Write
  3546  001716  ECB9  F00C         	goto	l1304
  3547  00171A  EF8F  F00B         	line	106
  3548                           ;lcd.c: 106: do { LCD_Write( (0x28 & 0xF0) >> 4 ); LCD_Write( 0x28 & 0x0F); } while ( 0 
                                 );
  3549                           	
  3550                           l40:
  3551  00171E                     	
  3552                           l1304:
  3553  00171E                     	movlw	(02h)&0ffh
  3554  00171E  0E02               	
  3555                           	call	_LCD_Write
  3556  001720  ECB9  F00C         	
  3557                           l1306:
  3558  001724                     	movlw	(08h)&0ffh
  3559  001724  0E08               	
  3560                           	call	_LCD_Write
  3561  001726  ECB9  F00C         	goto	l1308
  3562  00172A  EF99  F00B         	
  3563                           l41:
  3564  00172E                     	goto	l1308
  3565  00172E  EF99  F00B         	line	109
  3566                           ;lcd.c: 109: do { LCD_Write( (0x06 & 0xF0) >> 4 ); LCD_Write( 0x06 & 0x0F); } while ( 0 
                                 );
  3567                           	
  3568                           l42:
  3569  001732                     	
  3570                           l1308:
  3571  001732                     	movlw	(0)&0ffh
  3572  001732  0E00               	
  3573                           	call	_LCD_Write
  3574  001734  ECB9  F00C         	
  3575                           l1310:
  3576  001738                     	movlw	(06h)&0ffh
  3577  001738  0E06               	
  3578                           	call	_LCD_Write
  3579  00173A  ECB9  F00C         	goto	l1312
  3580  00173E  EFA3  F00B         	
  3581                           l43:
  3582  001742                     	goto	l1312
  3583  001742  EFA3  F00B         	line	111
  3584                           ;lcd.c: 111: do { unsigned char cmd = 0x08; if ( 1 == 1 ) { cmd |= 1 << 2; } if ( 0 == 1
                                  ) { cmd |= 1 << 1; } if ( 0 == 1 ) { cmd |= 1; } do { LCD_Write( (cmd & 0xF0) >> 4 ); L
                                 CD_Write( cmd & 0x0F); } while ( 0 ); } while ( 0 );
  3585                           	
  3586                           l44:
  3587  001746                     	
  3588                           l1312:
  3589  001746                     	movlw	low(08h)
  3590  001746  0E08               	movwf	((c:LCD_Init@cmd)),c
  3591  001748  6E0F               	
  3592                           l1314:
  3593  00174A                     	bsf	(0+(2/8)+(c:LCD_Init@cmd)),c,(2)&7
  3594  00174A  840F               	goto	l1320
  3595  00174C  EFB4  F00B         	
  3596                           l45:
  3597  001750                     	goto	l1320
  3598  001750  EFB4  F00B         	
  3599                           l1316:
  3600  001754                     	bsf	(0+(1/8)+(c:LCD_Init@cmd)),c,(1)&7
  3601  001754  820F               	goto	l1320
  3602  001756  EFB4  F00B         	
  3603                           l46:
  3604  00175A                     	goto	l1320
  3605  00175A  EFB4  F00B         	
  3606                           l1318:
  3607  00175E                     	bsf	(0+(0/8)+(c:LCD_Init@cmd)),c,(0)&7
  3608  00175E  800F               	goto	l1320
  3609  001760  EFB4  F00B         	
  3610                           l47:
  3611  001764                     	goto	l1320
  3612  001764  EFB4  F00B         	
  3613                           l48:
  3614  001768                     	
  3615                           l1320:
  3616  001768                     	swapf	((c:LCD_Init@cmd)),c,w
  3617  001768  380F               	andlw	(0ffh shr 4) & 0ffh
  3618  00176A  0B0F               	andlw	low(0Fh)
  3619  00176C  0B0F               	
  3620                           	call	_LCD_Write
  3621  00176E  ECB9  F00C         	
  3622                           l1322:
  3623  001772                     	movf	((c:LCD_Init@cmd)),c,w
  3624  001772  500F               	andlw	low(0Fh)
  3625  001774  0B0F               	
  3626                           	call	_LCD_Write
  3627  001776  ECB9  F00C         	goto	l1324
  3628  00177A  EFC3  F00B         	
  3629                           l49:
  3630  00177E                     	goto	l1324
  3631  00177E  EFC3  F00B         	
  3632                           l50:
  3633  001782                     	goto	l1324
  3634  001782  EFC3  F00B         	line	113
  3635                           ;lcd.c: 113: do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while ( 0 
                                 );
  3636                           	
  3637                           l51:
  3638  001786                     	
  3639                           l1324:
  3640  001786                     	movlw	(0)&0ffh
  3641  001786  0E00               	
  3642                           	call	_LCD_Write
  3643  001788  ECB9  F00C         	
  3644                           l1326:
  3645  00178C                     	movlw	(01h)&0ffh
  3646  00178C  0E01               	
  3647                           	call	_LCD_Write
  3648  00178E  ECB9  F00C         	goto	l39
  3649  001792  EFCD  F00B         	
  3650                           l52:
  3651  001796                     	goto	l39
  3652  001796  EFCD  F00B         	line	115
  3653                           	
  3654                           l1328:
  3655  00179A                     	line	116
  3656                           ;lcd.c: 115: return 1;
  3657                           ;	Return value of _LCD_Init is never used
  3658                           	
  3659                           l39:
  3660  00179A                     	return	;funcret
  3661  00179A  0012               	opt stack 0
  3662                           GLOBAL	__end_of_LCD_Init
  3663                           	__end_of_LCD_Init:
  3664  00179C                     	signat	_LCD_Init,4217
  3665                           	global	_LCD_Write
  3666                           
  3667 ;; *************** function _LCD_Write *****************
  3668 ;; Defined at:
  3669 ;;		line 52 in file "lcd.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  c               1    wreg     unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  c               1    7[COMRAM] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3685 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3686 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3687 ;;Total ram usage:        4 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    1
  3690 ;; This function calls:
  3691 ;;		_LCD_Out
  3692 ;; This function is called by:
  3693 ;;		_LCD_Init
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           psect	text10,class=CODE,space=0,reloc=2,group=0
  3698                           	line	52
  3699                           global __ptext10
  3700                           __ptext10:
  3701  001972                     psect	text10
  3702                           	file	"lcd.c"
  3703                           	line	52
  3704                           	global	__size_of_LCD_Write
  3705                           	__size_of_LCD_Write	equ	__end_of_LCD_Write-_LCD_Write
  3706  0000                     	
  3707                           _LCD_Write:
  3708  001972                     ;incstack = 0
  3709                           	opt	stack 29
  3710                           ;LCD_Write@c stored from wreg
  3711                           	movwf	((c:LCD_Write@c)),c
  3712  001972  6E08               	line	53
  3713                           	
  3714                           l962:
  3715  001974                     ;lcd.c: 53: *(lcd.PORT) &= ~(1 << lcd.RS);
  3716                           	movf	(0+((c:_lcd)+02h)),c,w
  3717  001974  5022               	andlw	(1<<3)-1
  3718  001976  0B07               	movwf	(??_LCD_Write+0+0)&0ffh,c
  3719  001978  6E05               	movlw	(01h)&0ffh
  3720  00197A  0E01               	movwf	(??_LCD_Write+1+0)&0ffh,c
  3721  00197C  6E06               	incf	((??_LCD_Write+0+0)),c
  3722  00197E  2A05               	goto	u194
  3723  001980  EFC4  F00C         u195:
  3724  001984                     	bcf	status,0
  3725  001984  90D8               	rlcf	((??_LCD_Write+1+0)),c
  3726  001986  3606               u194:
  3727  001988                     	decfsz	((??_LCD_Write+0+0)),c
  3728  001988  2E05               	goto	u195
  3729  00198A  EFC2  F00C         	movf	((??_LCD_Write+1+0)),c,w
  3730  00198E  5006               	xorlw	0ffh
  3731  001990  0AFF               	movwf	(??_LCD_Write+2+0)&0ffh,c
  3732  001992  6E07               	movff	(c:_lcd),fsr2l
  3733  001994  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3734  001998  C021  FFDA         	movf	((??_LCD_Write+2+0)),c,w
  3735  00199C  5007               	andwf	indf2
  3736  00199E  16DF               	line	54
  3737                           	
  3738                           l964:
  3739  0019A0                     ;lcd.c: 54: LCD_Out(c);
  3740                           	movf	((c:LCD_Write@c)),c,w
  3741  0019A0  5008               	
  3742                           	call	_LCD_Out
  3743  0019A2  EC53  F00A         	line	55
  3744                           	
  3745                           l966:
  3746  0019A6                     ;lcd.c: 55: *(lcd.PORT) |= 1 << lcd.EN;
  3747                           	rrcf	(0+((c:_lcd)+02h)),c,w
  3748  0019A6  3022               	rrcf	wreg,f
  3749  0019A8  32E8               	rrcf	wreg,f
  3750  0019AA  32E8               	andlw	(1<<3)-1
  3751  0019AC  0B07               	movwf	(??_LCD_Write+0+0)&0ffh,c
  3752  0019AE  6E05               	movlw	(01h)&0ffh
  3753  0019B0  0E01               	movwf	(??_LCD_Write+1+0)&0ffh,c
  3754  0019B2  6E06               	incf	((??_LCD_Write+0+0)),c
  3755  0019B4  2A05               	goto	u204
  3756  0019B6  EFDF  F00C         u205:
  3757  0019BA                     	bcf	status,0
  3758  0019BA  90D8               	rlcf	((??_LCD_Write+1+0)),c
  3759  0019BC  3606               u204:
  3760  0019BE                     	decfsz	((??_LCD_Write+0+0)),c
  3761  0019BE  2E05               	goto	u205
  3762  0019C0  EFDD  F00C         	movff	(c:_lcd),fsr2l
  3763  0019C4  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3764  0019C8  C021  FFDA         	movf	((??_LCD_Write+1+0)),c,w
  3765  0019CC  5006               	iorwf	indf2
  3766  0019CE  12DF               	line	56
  3767                           	
  3768                           l968:
  3769  0019D0                     ;lcd.c: 56: _delay((unsigned long)((4)*(8000000/4000.0)));
  3770                           	opt asmopt_push
  3771                           opt asmopt_off
  3772                           movlw	11
  3773  0019D0  0E0B               movwf	(??_LCD_Write+0+0)&0ffh,c,f
  3774  0019D2  6E05               	movlw	98
  3775  0019D4  0E62               u717:
  3776  0019D6                     decfsz	wreg,f
  3777  0019D6  2EE8               	bra	u717
  3778  0019D8  D7FE               	decfsz	(??_LCD_Write+0+0)&0ffh,c,f
  3779  0019DA  2E05               	bra	u717
  3780  0019DC  D7FC               	nop2
  3781  0019DE  D000               opt asmopt_pop
  3782                           
  3783                           	line	57
  3784                           	
  3785                           l970:
  3786  0019E0                     ;lcd.c: 57: *(lcd.PORT) &= ~(1 << lcd.EN);
  3787                           	rrcf	(0+((c:_lcd)+02h)),c,w
  3788  0019E0  3022               	rrcf	wreg,f
  3789  0019E2  32E8               	rrcf	wreg,f
  3790  0019E4  32E8               	andlw	(1<<3)-1
  3791  0019E6  0B07               	movwf	(??_LCD_Write+0+0)&0ffh,c
  3792  0019E8  6E05               	movlw	(01h)&0ffh
  3793  0019EA  0E01               	movwf	(??_LCD_Write+1+0)&0ffh,c
  3794  0019EC  6E06               	incf	((??_LCD_Write+0+0)),c
  3795  0019EE  2A05               	goto	u214
  3796  0019F0  EFFC  F00C         u215:
  3797  0019F4                     	bcf	status,0
  3798  0019F4  90D8               	rlcf	((??_LCD_Write+1+0)),c
  3799  0019F6  3606               u214:
  3800  0019F8                     	decfsz	((??_LCD_Write+0+0)),c
  3801  0019F8  2E05               	goto	u215
  3802  0019FA  EFFA  F00C         	movf	((??_LCD_Write+1+0)),c,w
  3803  0019FE  5006               	xorlw	0ffh
  3804  001A00  0AFF               	movwf	(??_LCD_Write+2+0)&0ffh,c
  3805  001A02  6E07               	movff	(c:_lcd),fsr2l
  3806  001A04  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3807  001A08  C021  FFDA         	movf	((??_LCD_Write+2+0)),c,w
  3808  001A0C  5007               	andwf	indf2
  3809  001A0E  16DF               	line	58
  3810                           	
  3811                           l30:
  3812  001A10                     	return	;funcret
  3813  001A10  0012               	opt stack 0
  3814                           GLOBAL	__end_of_LCD_Write
  3815                           	__end_of_LCD_Write:
  3816  001A12                     	signat	_LCD_Write,4217
  3817                           	global	_LCD_Out
  3818                           
  3819 ;; *************** function _LCD_Out *****************
  3820 ;; Defined at:
  3821 ;;		line 21 in file "lcd.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  c               1    wreg     unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  c               1    3[COMRAM] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3837 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3839 ;;Total ram usage:        4 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_LCD_Write
  3845 ;;		_LCD_putc
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           psect	text11,class=CODE,space=0,reloc=2,group=0
  3849                           	line	21
  3850                           global __ptext11
  3851                           __ptext11:
  3852  0014A6                     psect	text11
  3853                           	file	"lcd.c"
  3854                           	line	21
  3855                           	global	__size_of_LCD_Out
  3856                           	__size_of_LCD_Out	equ	__end_of_LCD_Out-_LCD_Out
  3857  0000                     	
  3858                           _LCD_Out:
  3859  0014A6                     ;incstack = 0
  3860                           	opt	stack 28
  3861                           ;LCD_Out@c stored from wreg
  3862                           	movwf	((c:LCD_Out@c)),c
  3863  0014A6  6E04               	line	22
  3864                           	
  3865                           l900:
  3866  0014A8                     ;lcd.c: 22: if ( c & 1 ){
  3867                           	
  3868                           	btfss	((c:LCD_Out@c)),c,(0)&7
  3869  0014A8  A004               	goto	u11
  3870  0014AA  EF59  F00A         	goto	u10
  3871  0014AE  EF5B  F00A         u11:
  3872  0014B2                     	goto	l904
  3873  0014B2  EF70  F00A         u10:
  3874  0014B6                     	line	23
  3875                           	
  3876                           l902:
  3877  0014B6                     ;lcd.c: 23: *(lcd.PORT) |= 1 << lcd.D4;
  3878                           	movf	(0+((c:_lcd)+03h)),c,w
  3879  0014B6  5023               	andlw	(1<<3)-1
  3880  0014B8  0B07               	movwf	(??_LCD_Out+0+0)&0ffh,c
  3881  0014BA  6E01               	movlw	(01h)&0ffh
  3882  0014BC  0E01               	movwf	(??_LCD_Out+1+0)&0ffh,c
  3883  0014BE  6E02               	incf	((??_LCD_Out+0+0)),c
  3884  0014C0  2A01               	goto	u24
  3885  0014C2  EF65  F00A         u25:
  3886  0014C6                     	bcf	status,0
  3887  0014C6  90D8               	rlcf	((??_LCD_Out+1+0)),c
  3888  0014C8  3602               u24:
  3889  0014CA                     	decfsz	((??_LCD_Out+0+0)),c
  3890  0014CA  2E01               	goto	u25
  3891  0014CC  EF63  F00A         	movff	(c:_lcd),fsr2l
  3892  0014D0  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3893  0014D4  C021  FFDA         	movf	((??_LCD_Out+1+0)),c,w
  3894  0014D8  5002               	iorwf	indf2
  3895  0014DA  12DF               	line	24
  3896                           ;lcd.c: 24: }
  3897                           	goto	l906
  3898  0014DC  EF88  F00A         	line	25
  3899                           	
  3900                           l19:
  3901  0014E0                     	line	26
  3902                           	
  3903                           l904:
  3904  0014E0                     ;lcd.c: 25: else {
  3905                           ;lcd.c: 26: *(lcd.PORT) &= ~(1 << lcd.D4);
  3906                           	movf	(0+((c:_lcd)+03h)),c,w
  3907  0014E0  5023               	andlw	(1<<3)-1
  3908  0014E2  0B07               	movwf	(??_LCD_Out+0+0)&0ffh,c
  3909  0014E4  6E01               	movlw	(01h)&0ffh
  3910  0014E6  0E01               	movwf	(??_LCD_Out+1+0)&0ffh,c
  3911  0014E8  6E02               	incf	((??_LCD_Out+0+0)),c
  3912  0014EA  2A01               	goto	u34
  3913  0014EC  EF7A  F00A         u35:
  3914  0014F0                     	bcf	status,0
  3915  0014F0  90D8               	rlcf	((??_LCD_Out+1+0)),c
  3916  0014F2  3602               u34:
  3917  0014F4                     	decfsz	((??_LCD_Out+0+0)),c
  3918  0014F4  2E01               	goto	u35
  3919  0014F6  EF78  F00A         	movf	((??_LCD_Out+1+0)),c,w
  3920  0014FA  5002               	xorlw	0ffh
  3921  0014FC  0AFF               	movwf	(??_LCD_Out+2+0)&0ffh,c
  3922  0014FE  6E03               	movff	(c:_lcd),fsr2l
  3923  001500  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3924  001504  C021  FFDA         	movf	((??_LCD_Out+2+0)),c,w
  3925  001508  5003               	andwf	indf2
  3926  00150A  16DF               	goto	l906
  3927  00150C  EF88  F00A         	line	27
  3928                           	
  3929                           l20:
  3930  001510                     	line	29
  3931                           	
  3932                           l906:
  3933  001510                     ;lcd.c: 27: }
  3934                           ;lcd.c: 29: if ( c & 2 ) {
  3935                           	
  3936                           	btfss	((c:LCD_Out@c)),c,(1)&7
  3937  001510  A204               	goto	u41
  3938  001512  EF8D  F00A         	goto	u40
  3939  001516  EF8F  F00A         u41:
  3940  00151A                     	goto	l910
  3941  00151A  EFA6  F00A         u40:
  3942  00151E                     	line	30
  3943                           	
  3944                           l908:
  3945  00151E                     ;lcd.c: 30: *(lcd.PORT) |= 1 << lcd.D5;
  3946                           	rrcf	(0+((c:_lcd)+03h)),c,w
  3947  00151E  3023               	rrcf	wreg,f
  3948  001520  32E8               	rrcf	wreg,f
  3949  001522  32E8               	andlw	(1<<3)-1
  3950  001524  0B07               	movwf	(??_LCD_Out+0+0)&0ffh,c
  3951  001526  6E01               	movlw	(01h)&0ffh
  3952  001528  0E01               	movwf	(??_LCD_Out+1+0)&0ffh,c
  3953  00152A  6E02               	incf	((??_LCD_Out+0+0)),c
  3954  00152C  2A01               	goto	u54
  3955  00152E  EF9B  F00A         u55:
  3956  001532                     	bcf	status,0
  3957  001532  90D8               	rlcf	((??_LCD_Out+1+0)),c
  3958  001534  3602               u54:
  3959  001536                     	decfsz	((??_LCD_Out+0+0)),c
  3960  001536  2E01               	goto	u55
  3961  001538  EF99  F00A         	movff	(c:_lcd),fsr2l
  3962  00153C  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3963  001540  C021  FFDA         	movf	((??_LCD_Out+1+0)),c,w
  3964  001544  5002               	iorwf	indf2
  3965  001546  12DF               	line	31
  3966                           ;lcd.c: 31: }
  3967                           	goto	l912
  3968  001548  EFC0  F00A         	line	32
  3969                           	
  3970                           l21:
  3971  00154C                     	line	33
  3972                           	
  3973                           l910:
  3974  00154C                     ;lcd.c: 32: else {
  3975                           ;lcd.c: 33: *(lcd.PORT) &= ~(1 << lcd.D5);
  3976                           	rrcf	(0+((c:_lcd)+03h)),c,w
  3977  00154C  3023               	rrcf	wreg,f
  3978  00154E  32E8               	rrcf	wreg,f
  3979  001550  32E8               	andlw	(1<<3)-1
  3980  001552  0B07               	movwf	(??_LCD_Out+0+0)&0ffh,c
  3981  001554  6E01               	movlw	(01h)&0ffh
  3982  001556  0E01               	movwf	(??_LCD_Out+1+0)&0ffh,c
  3983  001558  6E02               	incf	((??_LCD_Out+0+0)),c
  3984  00155A  2A01               	goto	u64
  3985  00155C  EFB2  F00A         u65:
  3986  001560                     	bcf	status,0
  3987  001560  90D8               	rlcf	((??_LCD_Out+1+0)),c
  3988  001562  3602               u64:
  3989  001564                     	decfsz	((??_LCD_Out+0+0)),c
  3990  001564  2E01               	goto	u65
  3991  001566  EFB0  F00A         	movf	((??_LCD_Out+1+0)),c,w
  3992  00156A  5002               	xorlw	0ffh
  3993  00156C  0AFF               	movwf	(??_LCD_Out+2+0)&0ffh,c
  3994  00156E  6E03               	movff	(c:_lcd),fsr2l
  3995  001570  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  3996  001574  C021  FFDA         	movf	((??_LCD_Out+2+0)),c,w
  3997  001578  5003               	andwf	indf2
  3998  00157A  16DF               	goto	l912
  3999  00157C  EFC0  F00A         	line	34
  4000                           	
  4001                           l22:
  4002  001580                     	line	36
  4003                           	
  4004                           l912:
  4005  001580                     ;lcd.c: 34: }
  4006                           ;lcd.c: 36: if ( c & 4 ) {
  4007                           	
  4008                           	btfss	((c:LCD_Out@c)),c,(2)&7
  4009  001580  A404               	goto	u71
  4010  001582  EFC5  F00A         	goto	u70
  4011  001586  EFC7  F00A         u71:
  4012  00158A                     	goto	l916
  4013  00158A  EFDC  F00A         u70:
  4014  00158E                     	line	37
  4015                           	
  4016                           l914:
  4017  00158E                     ;lcd.c: 37: *(lcd.PORT) |= 1 << lcd.D6;
  4018                           	movf	(0+((c:_lcd)+04h)),c,w
  4019  00158E  5024               	andlw	(1<<3)-1
  4020  001590  0B07               	movwf	(??_LCD_Out+0+0)&0ffh,c
  4021  001592  6E01               	movlw	(01h)&0ffh
  4022  001594  0E01               	movwf	(??_LCD_Out+1+0)&0ffh,c
  4023  001596  6E02               	incf	((??_LCD_Out+0+0)),c
  4024  001598  2A01               	goto	u84
  4025  00159A  EFD1  F00A         u85:
  4026  00159E                     	bcf	status,0
  4027  00159E  90D8               	rlcf	((??_LCD_Out+1+0)),c
  4028  0015A0  3602               u84:
  4029  0015A2                     	decfsz	((??_LCD_Out+0+0)),c
  4030  0015A2  2E01               	goto	u85
  4031  0015A4  EFCF  F00A         	movff	(c:_lcd),fsr2l
  4032  0015A8  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  4033  0015AC  C021  FFDA         	movf	((??_LCD_Out+1+0)),c,w
  4034  0015B0  5002               	iorwf	indf2
  4035  0015B2  12DF               	line	38
  4036                           ;lcd.c: 38: }
  4037                           	goto	l918
  4038  0015B4  EFF4  F00A         	line	39
  4039                           	
  4040                           l23:
  4041  0015B8                     	line	40
  4042                           	
  4043                           l916:
  4044  0015B8                     ;lcd.c: 39: else {
  4045                           ;lcd.c: 40: *(lcd.PORT) &= ~(1 << lcd.D6);
  4046                           	movf	(0+((c:_lcd)+04h)),c,w
  4047  0015B8  5024               	andlw	(1<<3)-1
  4048  0015BA  0B07               	movwf	(??_LCD_Out+0+0)&0ffh,c
  4049  0015BC  6E01               	movlw	(01h)&0ffh
  4050  0015BE  0E01               	movwf	(??_LCD_Out+1+0)&0ffh,c
  4051  0015C0  6E02               	incf	((??_LCD_Out+0+0)),c
  4052  0015C2  2A01               	goto	u94
  4053  0015C4  EFE6  F00A         u95:
  4054  0015C8                     	bcf	status,0
  4055  0015C8  90D8               	rlcf	((??_LCD_Out+1+0)),c
  4056  0015CA  3602               u94:
  4057  0015CC                     	decfsz	((??_LCD_Out+0+0)),c
  4058  0015CC  2E01               	goto	u95
  4059  0015CE  EFE4  F00A         	movf	((??_LCD_Out+1+0)),c,w
  4060  0015D2  5002               	xorlw	0ffh
  4061  0015D4  0AFF               	movwf	(??_LCD_Out+2+0)&0ffh,c
  4062  0015D6  6E03               	movff	(c:_lcd),fsr2l
  4063  0015D8  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  4064  0015DC  C021  FFDA         	movf	((??_LCD_Out+2+0)),c,w
  4065  0015E0  5003               	andwf	indf2
  4066  0015E2  16DF               	goto	l918
  4067  0015E4  EFF4  F00A         	line	41
  4068                           	
  4069                           l24:
  4070  0015E8                     	line	43
  4071                           	
  4072                           l918:
  4073  0015E8                     ;lcd.c: 41: }
  4074                           ;lcd.c: 43: if ( c & 8 ) {
  4075                           	
  4076                           	btfss	((c:LCD_Out@c)),c,(3)&7
  4077  0015E8  A604               	goto	u101
  4078  0015EA  EFF9  F00A         	goto	u100
  4079  0015EE  EFFB  F00A         u101:
  4080  0015F2                     	goto	l922
  4081  0015F2  EF12  F00B         u100:
  4082  0015F6                     	line	44
  4083                           	
  4084                           l920:
  4085  0015F6                     ;lcd.c: 44: *(lcd.PORT) |= 1 << lcd.D7;
  4086                           	rrcf	(0+((c:_lcd)+04h)),c,w
  4087  0015F6  3024               	rrcf	wreg,f
  4088  0015F8  32E8               	rrcf	wreg,f
  4089  0015FA  32E8               	andlw	(1<<3)-1
  4090  0015FC  0B07               	movwf	(??_LCD_Out+0+0)&0ffh,c
  4091  0015FE  6E01               	movlw	(01h)&0ffh
  4092  001600  0E01               	movwf	(??_LCD_Out+1+0)&0ffh,c
  4093  001602  6E02               	incf	((??_LCD_Out+0+0)),c
  4094  001604  2A01               	goto	u114
  4095  001606  EF07  F00B         u115:
  4096  00160A                     	bcf	status,0
  4097  00160A  90D8               	rlcf	((??_LCD_Out+1+0)),c
  4098  00160C  3602               u114:
  4099  00160E                     	decfsz	((??_LCD_Out+0+0)),c
  4100  00160E  2E01               	goto	u115
  4101  001610  EF05  F00B         	movff	(c:_lcd),fsr2l
  4102  001614  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  4103  001618  C021  FFDA         	movf	((??_LCD_Out+1+0)),c,w
  4104  00161C  5002               	iorwf	indf2
  4105  00161E  12DF               	line	45
  4106                           ;lcd.c: 45: }
  4107                           	goto	l27
  4108  001620  EF2C  F00B         	line	46
  4109                           	
  4110                           l25:
  4111  001624                     	line	47
  4112                           	
  4113                           l922:
  4114  001624                     ;lcd.c: 46: else {
  4115                           ;lcd.c: 47: *(lcd.PORT) &= ~(1 << lcd.D7);
  4116                           	rrcf	(0+((c:_lcd)+04h)),c,w
  4117  001624  3024               	rrcf	wreg,f
  4118  001626  32E8               	rrcf	wreg,f
  4119  001628  32E8               	andlw	(1<<3)-1
  4120  00162A  0B07               	movwf	(??_LCD_Out+0+0)&0ffh,c
  4121  00162C  6E01               	movlw	(01h)&0ffh
  4122  00162E  0E01               	movwf	(??_LCD_Out+1+0)&0ffh,c
  4123  001630  6E02               	incf	((??_LCD_Out+0+0)),c
  4124  001632  2A01               	goto	u124
  4125  001634  EF1E  F00B         u125:
  4126  001638                     	bcf	status,0
  4127  001638  90D8               	rlcf	((??_LCD_Out+1+0)),c
  4128  00163A  3602               u124:
  4129  00163C                     	decfsz	((??_LCD_Out+0+0)),c
  4130  00163C  2E01               	goto	u125
  4131  00163E  EF1C  F00B         	movf	((??_LCD_Out+1+0)),c,w
  4132  001642  5002               	xorlw	0ffh
  4133  001644  0AFF               	movwf	(??_LCD_Out+2+0)&0ffh,c
  4134  001646  6E03               	movff	(c:_lcd),fsr2l
  4135  001648  C020  FFD9         	movff	(c:_lcd+1),fsr2h
  4136  00164C  C021  FFDA         	movf	((??_LCD_Out+2+0)),c,w
  4137  001650  5003               	andwf	indf2
  4138  001652  16DF               	goto	l27
  4139  001654  EF2C  F00B         	line	48
  4140                           	
  4141                           l26:
  4142  001658                     	line	50
  4143                           	
  4144                           l27:
  4145  001658                     	return	;funcret
  4146  001658  0012               	opt stack 0
  4147                           GLOBAL	__end_of_LCD_Out
  4148                           	__end_of_LCD_Out:
  4149  00165A                     	signat	_LCD_Out,4217
  4150                           	global	_HCSR04_GetDistance
  4151                           
  4152 ;; *************** function _HCSR04_GetDistance *****************
  4153 ;; Defined at:
  4154 ;;		line 100 in file "main.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  centimeter      2    2[COMRAM] unsigned int 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  2    0[COMRAM] unsigned int 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  4168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4171 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  4172 ;;Total ram usage:        4 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		_main
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           psect	text12,class=CODE,space=0,reloc=2,group=0
  4181                           	file	"main.c"
  4182                           	line	100
  4183                           global __ptext12
  4184                           __ptext12:
  4185  001B70                     psect	text12
  4186                           	file	"main.c"
  4187                           	line	100
  4188                           	global	__size_of_HCSR04_GetDistance
  4189                           	__size_of_HCSR04_GetDistance	equ	__end_of_HCSR04_GetDistance-_HCSR04_GetDistance
  4190  0000                     	
  4191                           _HCSR04_GetDistance:
  4192  001B70                     ;incstack = 0
  4193                           	opt	stack 30
  4194                           	line	101
  4195                           	
  4196                           l1346:
  4197  001B70                     ;main.c: 101: unsigned int centimeter=0;
  4198                           	movlw	high(0)
  4199  001B70  0E00               	movwf	((c:HCSR04_GetDistance@centimeter+1)),c
  4200  001B72  6E04               	movlw	low(0)
  4201  001B74  0E00               	movwf	((c:HCSR04_GetDistance@centimeter)),c
  4202  001B76  6E03               	line	102
  4203                           	
  4204                           l1348:
  4205  001B78                     ;main.c: 102: LATDbits.LATD1 = 1;
  4206                           	bsf	((c:3980)),c,1	;volatile
  4207  001B78  828C               	line	103
  4208                           	
  4209                           l1350:
  4210  001B7A                     ;main.c: 103: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4211                           	opt asmopt_push
  4212                           opt asmopt_off
  4213                           	movlw	6
  4214  001B7A  0E06               u727:
  4215  001B7C                     decfsz	wreg,f
  4216  001B7C  2EE8               	bra	u727
  4217  001B7E  D7FE               	nop2
  4218  001B80  D000               opt asmopt_pop
  4219                           
  4220                           	line	104
  4221                           	
  4222                           l1352:
  4223  001B82                     ;main.c: 104: LATDbits.LATD1 = 0;
  4224                           	bcf	((c:3980)),c,1	;volatile
  4225  001B82  928C               	line	105
  4226                           ;main.c: 105: while(PORTDbits.RD0==0);
  4227                           	goto	l258
  4228  001B84  EFC4  F00D         	
  4229                           l259:
  4230  001B88                     	
  4231                           l258:
  4232  001B88                     	btfss	((c:3971)),c,0	;volatile
  4233  001B88  A083               	goto	u571
  4234  001B8A  EFC9  F00D         	goto	u570
  4235  001B8E  EFCB  F00D         u571:
  4236  001B92                     	goto	l258
  4237  001B92  EFC4  F00D         u570:
  4238  001B96                     	goto	l1358
  4239  001B96  EFD7  F00D         	
  4240                           l260:
  4241  001B9A                     	line	106
  4242                           ;main.c: 106: while(PORTDbits.RD0==1){
  4243                           	goto	l1358
  4244  001B9A  EFD7  F00D         	
  4245                           l262:
  4246  001B9E                     	line	107
  4247                           	
  4248                           l1354:
  4249  001B9E                     ;main.c: 107: centimeter++;
  4250                           	infsnz	((c:HCSR04_GetDistance@centimeter)),c
  4251  001B9E  4A03               	incf	((c:HCSR04_GetDistance@centimeter+1)),c
  4252  001BA0  2A04               	line	108
  4253                           	
  4254                           l1356:
  4255  001BA2                     ;main.c: 108: _delay((unsigned long)((58)*(8000000/4000000.0)));
  4256                           	opt asmopt_push
  4257                           opt asmopt_off
  4258                           	movlw	38
  4259  001BA2  0E26               u737:
  4260  001BA4                     decfsz	wreg,f
  4261  001BA4  2EE8               	bra	u737
  4262  001BA6  D7FE               	nop2
  4263  001BA8  D000               opt asmopt_pop
  4264                           
  4265                           	goto	l1358
  4266  001BAA  EFD7  F00D         	line	109
  4267                           	
  4268                           l261:
  4269  001BAE                     	line	106
  4270                           	
  4271                           l1358:
  4272  001BAE                     	btfsc	((c:3971)),c,0	;volatile
  4273  001BAE  B083               	goto	u581
  4274  001BB0  EFDC  F00D         	goto	u580
  4275  001BB4  EFDE  F00D         u581:
  4276  001BB8                     	goto	l1354
  4277  001BB8  EFCF  F00D         u580:
  4278  001BBC                     	
  4279                           l263:
  4280  001BBC                     	line	110
  4281                           ;main.c: 109: }
  4282                           ;main.c: 110: return(centimeter);
  4283                           	movff	(c:HCSR04_GetDistance@centimeter),(c:?_HCSR04_GetDistance)
  4284  001BBC  C003  F001         	movff	(c:HCSR04_GetDistance@centimeter+1),(c:?_HCSR04_GetDistance+1)
  4285  001BC0  C004  F002         	line	111
  4286                           	
  4287                           l264:
  4288  001BC4                     	return	;funcret
  4289  001BC4  0012               	opt stack 0
  4290                           GLOBAL	__end_of_HCSR04_GetDistance
  4291                           	__end_of_HCSR04_GetDistance:
  4292  001BC6                     	signat	_HCSR04_GetDistance,90
  4293                           psect	smallconst
  4294                           	db 0	; dummy byte at the end
  4295  001032  00                 	global	__smallconst
  4296                           	global	__mediumconst
  4297                           	GLOBAL	__activetblptr
  4298                           __activetblptr	EQU	1
  4299  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  4300                           	PSECT	rparam,class=COMRAM,space=1,noexec
  4301                           	GLOBAL	__Lrparam
  4302                           	FNCONF	rparam,??,?
  4303                           	GLOBAL	___rparam_used
  4304                           	___rparam_used EQU 1
  4305  0000                     	GLOBAL	___param_bank
  4306                           	___param_bank EQU 0
  4307  0000                     GLOBAL	__Lparam, __Hparam
  4308                           GLOBAL	__Lrparam, __Hrparam
  4309                           __Lparam	EQU	__Lrparam
  4310  0000                     __Hparam	EQU	__Hrparam
  4311  0000                     	end


Data Sizes:
    Strings     49
    Constant    0
    Data        5
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31      51
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 8
		 -> lcdDistance(COMRAM[8]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 8
		 -> lcdDistance(COMRAM[8]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 8
		 -> lcdDistance(COMRAM[8]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 8
		 -> lcdDistance(COMRAM[8]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 8
		 -> lcdDistance(COMRAM[8]), 

    F3124.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR[1]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR[1]), 

    LCD_putrs@a	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[3]), STR_5(CODE[15]), STR_4(CODE[15]), STR_3(CODE[15]), 
		 -> STR_2(CODE[16]), STR_1(CODE[15]), 

    LCD_puts@a	PTR unsigned char  size(2) Largest target is 8
		 -> lcdDistance(COMRAM[8]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR[1]), 

    S21$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR[1]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_puts->_LCD_putc
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2933
                                             24 COMRAM     7     7      0
                 _HCSR04_GetDistance
                           _LCD_Init
                          _LCD_Write
                          _LCD_putrs
                           _LCD_puts
                           _MCU_Init
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 8     2      6    1698
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_puts                                             4     2      2     256
                                              8 COMRAM     4     2      2
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            6     4      2     636
                                              8 COMRAM     6     4      2
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             4     4      0      90
                                              4 COMRAM     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             7     2      5     221
                                              8 COMRAM     7     2      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            4     4      0      75
                                              4 COMRAM     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _HCSR04_GetDistance                                   4     2      2      24
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HCSR04_GetDistance
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
     _LCD_Out
   _LCD_putrs
     _LCD_putc
       _LCD_Out
   _LCD_puts
     _LCD_putc
       _LCD_Out
   _MCU_Init
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1F      33       1       40.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      34        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Aug 15 23:27:12 2020

                          l20 1510                            l21 154C                            l22 1580  
                          l30 1A10                            l23 15B8                            l24 15E8  
                          l40 171E                            l25 1624                            l41 172E  
                          l33 168C                            l26 1658                            l50 1782  
                          l42 1732                            l34 16D8                            l27 1658  
                          l19 14E0                            l51 1786                            l43 1742  
                          l35 16AC                            l52 1796                            l44 1746  
                          l36 16D4                            l60 1C60                            l45 1750  
                          l37 16CC                            l61 1C60                            l46 175A  
                          l38 16D0                            l47 1764                            l39 179A  
                          l55 189A                            l48 1768                            l64 1B42  
                          l49 177E                            l65 1B1E                            l66 1B6E  
                          l58 1C40                            l67 1B6E                            l59 1C26  
                          u10 14B6                            u11 14B2                            u40 151E  
                          u24 14CA                            u41 151A                            u25 14C6  
                          u34 14F4                            u35 14F0                            u70 158E  
                          u54 1536                            u71 158A                            u55 1532  
                          u64 1564                            u65 1560                            u84 15A2  
                          u85 159E                            u94 15CC                            u95 15C8  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l200 1320                           l201 130C  
                         l210 134C                           l202 131C                           l130 1094  
                         l122 1064                           l203 1374                           l211 136C  
                         l131 10A4                           l123 1074                           l220 13F4  
                         l212 1368                           l204 1338                           l140 10E8  
                         l132 10E0                           l124 1078                           l221 13B8  
                         l213 1354                           l205 1324                           l141 10F8  
                         l133 10C0                           l125 1090                           l230 13D4  
                         l222 13A4                           l214 1364                           l206 1334  
                         l150 1140                           l142 1110                           l134 10AC  
                         l126 107C                           l231 13E4                           l223 13B4  
                         l215 1378                           l207 1370                           l151 112C  
                         l143 10FC                           l135 10BC                           l127 108C  
                         l240 1430                           l224 13F0                           l232 13F4  
                         l216 1388                           l208 1350                           l160 11B6  
                         l152 113C                           l144 110C                           l128 10E4  
                         l136 10DC                           l241 146C                           l233 1404  
                         l225 13D0                           l217 13A0                           l209 133C  
                         l161 11C6                           l145 1164                           l153 115C  
                         l137 10D8                           l129 10A8                           l250 149E  
                         l242 144C                           l234 141C                           l226 13BC  
                         l218 138C                           l170 122E                           l162 11CA  
                         l154 1158                           l146 1128                           l138 10C4  
                         l251 14A2                           l243 1438                           l235 1408  
                         l227 13CC                           l219 139C                           l171 120E  
                         l163 11DE                           l155 1144                           l147 1114  
                         l139 10D4                           l260 1B9A                           l252 14A2  
                         l244 1448                           l236 1418                           l228 13EC  
                         l180 125E                           l172 11FA                           l164 11CA  
                         l156 1154                           l148 1124                           l261 1BAE  
                         l237 1470                           l245 1468                           l229 13E8  
                         l181 124A                           l173 120A                           l165 11DA  
                         l157 1168                           l149 1160                           l262 1B9E  
                         l246 1464                           l238 1434                           l190 128A  
                         l182 125A                           l166 1232                           l174 122A  
                         l158 1190                           l263 1BBC                           l255 1CC8  
                         l247 1450                           l239 1420                           l159 12DC  
                         l183 12B2                           l191 12AA                           l175 1226  
                         l167 11F6                           l264 1BC4                           l600 18DE  
                         l248 1460                           l192 12A6                           l184 1276  
                         l176 1212                           l168 11E2                           l601 18F4  
                         l249 1474                           l193 1292                           l185 1262  
                         l177 1222                           l169 11F2                           l258 1B88  
                         l602 193C                           l194 12A2                           l186 1272  
                         l178 1236                           l259 1B88                           l603 1968  
                         l195 12B6                           l187 12AE                           l179 1246  
                         l604 1970                           l196 149A                           l188 128E  
                         l197 12F8                           l189 127A                           l198 1308  
                         l199 130C                           l900 14A8                           l910 154C  
                         l902 14B6                           l920 15F6                           l912 1580  
                         l904 14E0                           l681 1A90                           l922 1624  
                         l914 158E                           l906 1510                           l682 1A40  
                         l683 1A34                           l691 1B08                           l595 1BF8  
                         l916 15B8                           l908 151E                           l684 1A52  
                         l692 1AC0                           l596 1C18                           l685 1A56  
                         l693 1AB4                           l918 15E8                           l686 1A80  
                         l694 1AD2                           l687 1A90                           l695 1AD6  
                         l599 18A8                           l688 1A98                           l696 1AF8  
                         l697 1B08                           l970 19E0                           l962 1974  
                         l698 1B10                           l964 19A0                           l980 1800  
                         l972 179E                           l966 19A6                           l982 1830  
                         l974 17C4                           l968 19D0                           l984 1838  
                         l976 17CE                           l986 186A                           l978 17F8  
                __CFG_CPB$OFF 000000                           u100 15F6                           u101 15F2  
                         u114 160E                           u115 160A                           u124 163C  
                         u204 19BE                           u125 1638                           u205 19BA  
                         u214 19F8                           u215 19F4                           u224 17B2  
                         u225 17AE                           u234 17E6                           u235 17E2  
                         u244 1818                           u420 1A2C                           u500 1964  
                         u245 1814                           u421 1A28                           u501 1960  
                         u254 1850                           u430 1A4E                           u511 1664  
                         u255 184C                           u431 1A4A                           u520 1684  
                         u264 1882                           u440 1A72                           u521 1680  
                         u265 187E                           u441 1A6E                           u601 1042  
                         u194 1988                           u530 16A4                           u450 1AAC  
                __CFG_CPD$OFF 000000                           u195 1984                           u531 16A0  
                         u451 1AA8                           u611 1054                           u540 16C4  
                         u460 1ACE                           u620 11B2                           u541 16C0  
                         u461 1ACA                           u621 11AE                           u550 1C5C  
                         u470 1AEC                           u551 1C58                           u471 1AE8  
                         u560 1B6A                           u480 18DA                           u561 1B66  
                         u481 18D6                           u570 1B96                           u490 1938  
                         u571 1B92                           u707 1706                           u491 1934  
                         u580 1BBC                           u581 1BB8                           u717 19D6  
                         u637 117E                           u590 1BDC                           u727 1B7C  
                         u591 1BD8                           u647 12CC                           u737 1BA4  
                         u657 148A                           u667 17FA                           u677 1864  
                         u687 16DE                           u697 16F2               LCD_Init@display 0009  
                         _lcd 0020                           wreg 000FE8                  __CFG_IESO$ON 000000  
                __CFG_LVP$OFF 000000               __end_of_LCD_Out 165A                  __CFG_WDT$OFF 000000  
                        l1210 1A12                          l1300 170E                          l1220 1A56  
                        l1212 1A1A                          l1310 1738                          l1302 1714  
                        l1230 1A86                          l1222 1A5C                          l1214 1A2C  
                        l1320 1768                          l1312 1746                          l1304 171E  
                        l1224 1A72                          l1216 1A34                          l1240 1AD6  
                        l1232 1A9A                          l1400 1144                          l1322 1772  
                        l1314 174A                          l1306 1724                          l1330 1C1A  
                        l1090 1CC4                          l1226 1A7A                          l1218 1A40  
                        l1242 1AEC                          l1234 1AAC                          l1250 18A8  
                        l1410 11B6                          l1402 1168                          l1324 1786  
                        l1316 1754                          l1308 1732                          l1340 1B1E  
                        l1332 1C26                          l1092 1CC6                          l1228 1A80  
                        l1244 1AF8                          l1236 1AB4                          l1260 18F4  
                        l1252 18C4                          l1420 124A                          l1412 11E2  
                        l1404 1174                          l1350 1B7A                          l1326 178C  
                        l1318 175E                          l1342 1B3A                          l1334 1C38  
                        l1086 1C9C                          l1246 1AFE                          l1238 1AC0  
                        l1270 194C                          l1262 190C                          l1254 18C8  
                        l1430 12C2                          l1422 1262                          l1414 11FA  
                        l1406 1190                          l1352 1B82                          l1328 179A  
                        l1280 166C                          l1344 1B42                          l1336 1C40  
                        l1088 1CA4                          l1272 1952                          l1264 1928  
                        l1256 18DE                          l1248 189C                          l1360 1BC6  
                        l1440 1378                          l1424 127A                          l1416 1212  
                        l1432 12DC                          l1408 119C                          l1354 1B9E  
                        l1346 1B70                          l1290 16C4                          l1282 1684  
                        l1338 1B12                          l1274 1968                          l1266 1938  
                        l1258 18EA                          l1370 1C18                          l1362 1BDC  
                        l1450 1408                          l1442 138C                          l1434 1324  
                        l1426 1292                          l1418 1236                          l1356 1BA2  
                        l1348 1B78                          l1292 16D8                          l1284 168C  
                        l1276 1970                          l1268 1940                          l1364 1BE8  
                        l1460 1480                          l1452 1420                          l1444 13A4  
                        l1436 133C                          l1428 12B6                          l1380 106A  
                        l1372 1034                          l1358 1BAE                          l1294 16E6  
                        l1286 16A4                          l1278 165A                          l1366 1BEC  
                        l1454 1438                          l1446 13BC                          l1438 1354  
                        l1390 10C4                          l1382 107C                          l1374 1038  
                        l1296 16EC                          l1288 16AC                          l1368 1BF8  
                        l1456 1450                          l1448 13D4                          l1392 10E8  
                        l1384 1082                          l1376 104A                          l1298 1700  
                        l1458 1474                          l1394 10FC                          l1386 1094  
                        l1378 1064                          l1396 1114                          l1388 10AC  
                        l1398 112C                          STR_1 1011                          STR_2 1001  
                        STR_3 1002                          STR_4 1020                          STR_5 1002  
                        STR_6 102F                  __CFG_PWRT$ON 000000                 __CFG_FCMEN$ON 000000  
                        _main 1034                          _itoa 1BC6                          fsr2h 000FDA  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        _utoa 189C                          start 0000            __size_of_LCD_Write 00A0  
                 LCD_Init@cmd 000F                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
          __size_of_LCD_putrs 005E              __end_of_LCD_Init 179C              __end_of_LCD_putc 189C  
            __end_of_LCD_puts 1C62                         ?_main 0001                         ?_itoa 0011  
                       ?_utoa 0008                __CFG_DEBUG$OFF 000000               __end_of___lwdiv 1A9A  
            __end_of_MCU_Init 1CCA               __end_of___lwmod 1B12                         _PORTA 000F80  
                       _PORTB 000F81                         _PORTC 000F82                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
              __CFG_BOREN$OFF 000000                         tablat 000FF5                         plusw0 000FEB  
                       plusw1 000FE3                         plusw2 000FDB                         utoa@c 0010  
                       utoa@v 000E                         status 000FD8               __initialization 1C62  
                __end_of_main 14A6                  __end_of_itoa 1C1A                  __end_of_utoa 1972  
                      ??_main 0019                        ??_itoa 0017                        ??_utoa 000E  
               __activetblptr 000001                     ??_LCD_Out 0001             __end_of_LCD_Write 1A12  
           __end_of_LCD_putrs 1B70                        _ADCON1 000FC1                        _TRISD0 007CA8  
                      _TRISD1 007CA9                __CFG_XINST$OFF 000000                     ??___lwdiv 0005  
                   ??___lwmod 0005                        clear_0 1C88                        itoa@cp 0017  
                __pdataCOMRAM 002F                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0080  
     __end_of__initialization 1C8E                     ?_LCD_Init 0009                     ?_LCD_putc 0001  
                   ?_LCD_puts 0009                 ___rparam_used 000001                     ?_MCU_Init 0001  
              __pcstackCOMRAM 0001                     LCD_putc@c 0008                     LCD_puts@a 0009  
                   LCD_puts@i 000B    __end_of_HCSR04_GetDistance 1BC6                    ??_LCD_Init 000E  
                  ??_LCD_putc 0005                    ??_LCD_puts 000B                    ??_MCU_Init 0001  
                     _LCD_Out 14A6                       __Hparam 0000                       __Lparam 0000  
                     ___lwdiv 1A12                       ___lwmod 1A9A                  __psmallconst 1000  
                     __pcinit 1C62                       __ramtop 1000                       __ptext0 1034  
                     __ptext1 1BC6                       __ptext2 189C                       __ptext3 1A9A  
                     __ptext4 1A12                       __ptext5 1C9C                       __ptext6 1C1A  
                     __ptext7 1B12                       __ptext8 179C                       __ptext9 165A  
                     main@lcd 001B                     _LCD_Write 1972          end_of_initialization 1C8E  
                   _LCD_putrs 1B12                       itoa@buf 0011                       itoa@val 0013  
                     postdec1 000FE5                       postinc0 000FEE                       utoa@buf 0008  
                     utoa@val 000A                     _PORTDbits 000F83                    ?_LCD_Write 0001  
                  ?_LCD_putrs 0009             __size_of_LCD_Init 0142             __size_of_LCD_putc 0100  
           __size_of_LCD_puts 0048             __size_of_MCU_Init 002E                 __pidataCOMRAM 1CCA  
                  LCD_Write@c 0008           start_initialization 1C62                    LCD_putrs@a 0009  
                  LCD_putrs@i 000D              __CFG_OSC$INTIO67 000000            _HCSR04_GetDistance 1B70  
         ?_HCSR04_GetDistance 0001                      ?_LCD_Out 0001                   __pbssCOMRAM 0020  
                    LCD_Out@c 0004                   ??_LCD_Write 0005          ??_HCSR04_GetDistance 0003  
                 ??_LCD_putrs 000B              ___lwdiv@dividend 0001                      ?___lwdiv 0001  
                    ?___lwmod 0001                   _lcdDistance 0027                   __smallconst 1000  
            ___lwdiv@quotient 0005                      _LCD_Init 165A                      _LATDbits 000F8C  
                    _LCD_putc 179C                      _LCD_puts 1C1A                      _MCU_Init 1C9C  
                   main@F3124 002F  HCSR04_GetDistance@centimeter 0003              __size_of_LCD_Out 01B4  
                   copy_data0 1C76                      __Hrparam 0000                      __Lrparam 0000  
                __Lsmallconst 1000              __size_of___lwdiv 0088              __size_of___lwmod 0078  
             ___lwdiv@divisor 0003               ___lwdiv@counter 0007                      __ptext10 1972  
                    __ptext11 14A6                      __ptext12 1B70                      _distance 0025  
               __size_of_main 0472                 __size_of_itoa 0054                 __size_of_utoa 00D6  
                    itoa@base 0015              ___lwmod@dividend 0001                    _OSCCONbits 000FD3  
                    utoa@base 000C               ___lwmod@divisor 0003               ___lwmod@counter 0005  
 __size_of_HCSR04_GetDistance 0056  
