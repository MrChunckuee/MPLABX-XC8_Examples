

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Aug 16 01:57:21 2020

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 1.42
    17                           ; Generated 13/04/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F25K22 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _ANSELC	set	3898
    51  0000                     _ANSELB	set	3897
    52  0000                     _ANSELA	set	3896
    53  0000                     _RCONbits	set	4048
    54  0000                     _INTCON2bits	set	4081
    55  0000                     _T0CONbits	set	4053
    56  0000                     _PORTC	set	3970
    57  0000                     _PORTB	set	3969
    58  0000                     _TRISC	set	3988
    59  0000                     _TRISB	set	3987
    60  0000                     _OSCCONbits	set	4051
    61  0000                     _TMR0L	set	4054
    62  0000                     _TMR0H	set	4055
    63  0000                     _PORTCbits	set	3970
    64  0000                     _INTCONbits	set	4082
    65                           
    66                           ; #config settings
    67  0000                     
    68                           	psect	cinit
    69  0000FC                     __pcinit:
    70                           	opt stack 0
    71  0000FC                     start_initialization:
    72                           	opt stack 0
    73  0000FC                     __initialization:
    74                           	opt stack 0
    75                           
    76                           ; Clear objects allocated to COMRAM (2 bytes)
    77  0000FC  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
    78  0000FE  6A0F               	clrf	__pbssCOMRAM& (0+255),c
    79  000100                     end_of_initialization:
    80                           	opt stack 0
    81  000100                     __end_of__initialization:
    82                           	opt stack 0
    83  000100  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    84  000102  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    85  000104  0100               	movlb	0
    86  000106  EF85  F000         	goto	_main	;jump to C main() function
    87                           
    88                           	psect	bssCOMRAM
    89  00000F                     __pbssCOMRAM:
    90                           	opt stack 0
    91  00000F                     _Count:
    92                           	opt stack 0
    93  00000F                     	ds	2
    94                           
    95                           	psect	cstackCOMRAM
    96  000001                     __pcstackCOMRAM:
    97                           	opt stack 0
    98  000001                     ??_ISR:
    99  000001                     
   100                           ; 1 bytes @ 0x0
   101  000001                     	ds	14
   102  00000F                     
   103                           ; 1 bytes @ 0xE
   104 ;;
   105 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   106 ;;
   107 ;; *************** function _main *****************
   108 ;; Defined at:
   109 ;;		line 46 in file "main.c"
   110 ;; Parameters:    Size  Location     Type
   111 ;;		None
   112 ;; Auto vars:     Size  Location     Type
   113 ;;		None
   114 ;; Return value:  Size  Location     Type
   115 ;;                  1    wreg      void 
   116 ;; Registers used:
   117 ;;		wreg, status,2, cstack
   118 ;; Tracked objects:
   119 ;;		On entry : 0/0
   120 ;;		On exit  : 0/0
   121 ;;		Unchanged: 0/0
   122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   123 ;;      Params:         0       0       0       0       0       0       0
   124 ;;      Locals:         0       0       0       0       0       0       0
   125 ;;      Temps:          0       0       0       0       0       0       0
   126 ;;      Totals:         0       0       0       0       0       0       0
   127 ;;Total ram usage:        0 bytes
   128 ;; Hardware stack levels required when called:    3
   129 ;; This function calls:
   130 ;;		_MCU_Init
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137  00010A                     __ptext0:
   138                           	opt stack 0
   139  00010A                     _main:
   140                           	opt stack 28
   141                           
   142                           ;main.c: 47: MCU_Init();
   143                           
   144                           ;incstack = 0
   145  00010A  EC55  F000         	call	_MCU_Init	;wreg free
   146  00010E                     l48:
   147  00010E  D7FF               	goto	l48
   148  000110                     __end_of_main:
   149                           	opt stack 0
   150                           
   151 ;; *************** function _MCU_Init *****************
   152 ;; Defined at:
   153 ;;		line 53 in file "main.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;		None
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, status,2, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   167 ;;      Params:         0       0       0       0       0       0       0
   168 ;;      Locals:         0       0       0       0       0       0       0
   169 ;;      Temps:          0       0       0       0       0       0       0
   170 ;;      Totals:         0       0       0       0       0       0       0
   171 ;;Total ram usage:        0 bytes
   172 ;; Hardware stack levels used:    1
   173 ;; Hardware stack levels required when called:    2
   174 ;; This function calls:
   175 ;;		_TMR0_Init
   176 ;; This function is called by:
   177 ;;		_main
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text1
   182  0000AA                     __ptext1:
   183                           	opt stack 0
   184  0000AA                     _MCU_Init:
   185                           	opt stack 28
   186                           
   187                           ;main.c: 55: ANSELA = 0;
   188                           
   189                           ;incstack = 0
   190  0000AA  0E00               	movlw	0
   191  0000AC  010F               	movlb	15	; () banked
   192  0000AE  6F38               	movwf	56,b	;volatile
   193                           
   194                           ;main.c: 56: ANSELB = 0;
   195  0000B0  0E00               	movlw	0
   196  0000B2  010F               	movlb	15	; () banked
   197  0000B4  6F39               	movwf	57,b	;volatile
   198                           
   199                           ;main.c: 57: ANSELC = 0;
   200  0000B6  0E00               	movlw	0
   201  0000B8  010F               	movlb	15	; () banked
   202  0000BA  6F3A               	movwf	58,b	;volatile
   203                           
   204                           ; BSR set to: 15
   205                           ;main.c: 59: OSCCONbits.IRCF=0b111;
   206  0000BC  88D3               	bsf	4051,4,c	;volatile
   207  0000BE  8AD3               	bsf	4051,5,c	;volatile
   208  0000C0  8CD3               	bsf	4051,6,c	;volatile
   209                           
   210                           ;main.c: 61: TRISB = 0x00;
   211  0000C2  0E00               	movlw	0
   212  0000C4  6E93               	movwf	3987,c	;volatile
   213                           
   214                           ;main.c: 62: TRISC = 0x00;
   215  0000C6  0E00               	movlw	0
   216  0000C8  6E94               	movwf	3988,c	;volatile
   217                           
   218                           ;main.c: 64: PORTB = 0x00;
   219  0000CA  0E00               	movlw	0
   220  0000CC  6E81               	movwf	3969,c	;volatile
   221                           
   222                           ;main.c: 65: PORTC = 0x00;
   223  0000CE  0E00               	movlw	0
   224  0000D0  6E82               	movwf	3970,c	;volatile
   225                           
   226                           ; BSR set to: 15
   227                           ;main.c: 67: TMR0_Init();
   228  0000D2  EC6C  F000         	call	_TMR0_Init	;wreg free
   229  0000D6  0012               	return		;funcret
   230  0000D8                     __end_of_MCU_Init:
   231                           	opt stack 0
   232                           
   233 ;; *************** function _TMR0_Init *****************
   234 ;; Defined at:
   235 ;;		line 70 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   249 ;;      Params:         0       0       0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0       0       0
   252 ;;      Totals:         0       0       0       0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels used:    1
   255 ;; Hardware stack levels required when called:    1
   256 ;; This function calls:
   257 ;;		Nothing
   258 ;; This function is called by:
   259 ;;		_MCU_Init
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           	psect	text2
   264  0000D8                     __ptext2:
   265                           	opt stack 0
   266  0000D8                     _TMR0_Init:
   267                           	opt stack 28
   268                           
   269                           ;main.c: 72: T0CONbits.TMR0ON = 1;
   270                           
   271                           ;incstack = 0
   272  0000D8  8ED5               	bsf	4053,7,c	;volatile
   273                           
   274                           ;main.c: 73: T0CONbits.T08BIT = 0;
   275  0000DA  9CD5               	bcf	4053,6,c	;volatile
   276                           
   277                           ;main.c: 74: T0CONbits.T0CS = 0;
   278  0000DC  9AD5               	bcf	4053,5,c	;volatile
   279                           
   280                           ;main.c: 75: T0CONbits.T0SE = 0;
   281  0000DE  98D5               	bcf	4053,4,c	;volatile
   282                           
   283                           ;main.c: 76: T0CONbits.PSA = 0;
   284  0000E0  96D5               	bcf	4053,3,c	;volatile
   285                           
   286                           ;main.c: 77: T0CONbits.T0PS = 0b000;
   287  0000E2  90D5               	bcf	4053,0,c	;volatile
   288  0000E4  92D5               	bcf	4053,1,c	;volatile
   289  0000E6  94D5               	bcf	4053,2,c	;volatile
   290                           
   291                           ;main.c: 78: TMR0H = 0xF8;
   292  0000E8  0EF8               	movlw	248
   293  0000EA  6ED7               	movwf	4055,c	;volatile
   294                           
   295                           ;main.c: 79: TMR0L = 0x30;
   296  0000EC  0E30               	movlw	48
   297  0000EE  6ED6               	movwf	4054,c	;volatile
   298                           
   299                           ;main.c: 80: INTCONbits.TMR0IF = 0;
   300  0000F0  94F2               	bcf	intcon,2,c	;volatile
   301                           
   302                           ;main.c: 81: INTCONbits.TMR0IE = 1;
   303  0000F2  8AF2               	bsf	intcon,5,c	;volatile
   304                           
   305                           ;main.c: 82: INTCON2bits.TMR0IP = 1;
   306  0000F4  84F1               	bsf	intcon2,2,c	;volatile
   307                           
   308                           ;main.c: 83: RCONbits.IPEN = 1;
   309  0000F6  8ED0               	bsf	4048,7,c	;volatile
   310                           
   311                           ;main.c: 84: INTCONbits.GIEH = 1;
   312  0000F8  8EF2               	bsf	intcon,7,c	;volatile
   313  0000FA  0012               	return		;funcret
   314  0000FC                     __end_of_TMR0_Init:
   315                           	opt stack 0
   316                           intcon	equ	0xFF2
   317                           intcon2	equ	0xFF1
   318                           
   319 ;; *************** function _ISR *****************
   320 ;; Defined at:
   321 ;;		line 32 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   335 ;;      Params:         0       0       0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0       0       0
   337 ;;      Temps:         14       0       0       0       0       0       0
   338 ;;      Totals:        14       0       0       0       0       0       0
   339 ;;Total ram usage:       14 bytes
   340 ;; Hardware stack levels used:    1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		Interrupt level 2
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	intcode
   349  000008                     __pintcode:
   350                           	opt stack 0
   351  000008                     _ISR:
   352                           	opt stack 28
   353                           
   354                           ;incstack = 0
   355  000008  8211               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   356  00000A  CFFA F001          	movff	pclath,??_ISR
   357  00000E  CFFB F002          	movff	pclatu,??_ISR+1
   358  000012  CFE9 F003          	movff	fsr0l,??_ISR+2
   359  000016  CFEA F004          	movff	fsr0h,??_ISR+3
   360  00001A  CFE1 F005          	movff	fsr1l,??_ISR+4
   361  00001E  CFE2 F006          	movff	fsr1h,??_ISR+5
   362  000022  CFD9 F007          	movff	fsr2l,??_ISR+6
   363  000026  CFDA F008          	movff	fsr2h,??_ISR+7
   364  00002A  CFF3 F009          	movff	prodl,??_ISR+8
   365  00002E  CFF4 F00A          	movff	prodh,??_ISR+9
   366  000032  CFF6 F00B          	movff	tblptrl,??_ISR+10
   367  000036  CFF7 F00C          	movff	tblptrh,??_ISR+11
   368  00003A  CFF8 F00D          	movff	tblptru,??_ISR+12
   369  00003E  CFF5 F00E          	movff	tablat,??_ISR+13
   370                           
   371                           ;main.c: 33: if(INTCONbits.TMR0IF){
   372  000042  A4F2               	btfss	intcon,2,c	;volatile
   373  000044  D012               	goto	i2l43
   374                           
   375                           ;main.c: 34: ++Count;
   376  000046  4A0F               	infsnz	_Count,f,c
   377  000048  2A10               	incf	_Count+1,f,c
   378                           
   379                           ;main.c: 35: if (Count >= 1000){
   380  00004A  0EE8               	movlw	232
   381  00004C  5C0F               	subwf	_Count,w,c
   382  00004E  0E03               	movlw	3
   383  000050  5810               	subwfb	_Count+1,w,c
   384  000052  A0D8               	btfss	status,0,c
   385  000054  D005               	goto	i2l709
   386                           
   387                           ;main.c: 36: PORTCbits.RC7 ^= 1;
   388  000056  7E82               	btg	3970,7,c	;volatile
   389                           
   390                           ;main.c: 37: Count = 0;
   391  000058  0E00               	movlw	0
   392  00005A  6E10               	movwf	_Count+1,c
   393  00005C  0E00               	movlw	0
   394  00005E  6E0F               	movwf	_Count,c
   395  000060                     i2l709:
   396                           
   397                           ;main.c: 38: }
   398                           ;main.c: 39: TMR0H = 0xF8;
   399  000060  0EF8               	movlw	248
   400  000062  6ED7               	movwf	4055,c	;volatile
   401                           
   402                           ;main.c: 40: TMR0L = 0x30;
   403  000064  0E30               	movlw	48
   404  000066  6ED6               	movwf	4054,c	;volatile
   405                           
   406                           ;main.c: 41: INTCONbits.TMR0IF = 0;
   407  000068  94F2               	bcf	intcon,2,c	;volatile
   408  00006A                     i2l43:
   409  00006A  C00E  FFF5         	movff	??_ISR+13,tablat
   410  00006E  C00D  FFF8         	movff	??_ISR+12,tblptru
   411  000072  C00C  FFF7         	movff	??_ISR+11,tblptrh
   412  000076  C00B  FFF6         	movff	??_ISR+10,tblptrl
   413  00007A  C00A  FFF4         	movff	??_ISR+9,prodh
   414  00007E  C009  FFF3         	movff	??_ISR+8,prodl
   415  000082  C008  FFDA         	movff	??_ISR+7,fsr2h
   416  000086  C007  FFD9         	movff	??_ISR+6,fsr2l
   417  00008A  C006  FFE2         	movff	??_ISR+5,fsr1h
   418  00008E  C005  FFE1         	movff	??_ISR+4,fsr1l
   419  000092  C004  FFEA         	movff	??_ISR+3,fsr0h
   420  000096  C003  FFE9         	movff	??_ISR+2,fsr0l
   421  00009A  C002  FFFB         	movff	??_ISR+1,pclatu
   422  00009E  C001  FFFA         	movff	??_ISR,pclath
   423  0000A2  9211               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   424  0000A4  0011               	retfie		f
   425  0000A6                     __end_of_ISR:
   426                           	opt stack 0
   427  0000                     pclatu	equ	0xFFB
   428                           pclath	equ	0xFFA
   429                           tblptru	equ	0xFF8
   430                           tblptrh	equ	0xFF7
   431                           tblptrl	equ	0xFF6
   432                           tablat	equ	0xFF5
   433                           prodh	equ	0xFF4
   434                           prodl	equ	0xFF3
   435                           intcon	equ	0xFF2
   436                           intcon2	equ	0xFF1
   437                           fsr0h	equ	0xFEA
   438                           fsr0l	equ	0xFE9
   439                           fsr1h	equ	0xFE2
   440                           fsr1l	equ	0xFE1
   441                           fsr2h	equ	0xFDA
   442                           fsr2l	equ	0xFD9
   443                           status	equ	0xFD8
   444                           pclatu	equ	0xFFB
   445                           pclath	equ	0xFFA
   446                           tblptru	equ	0xFF8
   447                           tblptrh	equ	0xFF7
   448                           tblptrl	equ	0xFF6
   449                           tablat	equ	0xFF5
   450                           prodh	equ	0xFF4
   451                           prodl	equ	0xFF3
   452                           intcon	equ	0xFF2
   453                           intcon2	equ	0xFF1
   454                           fsr0h	equ	0xFEA
   455                           fsr0l	equ	0xFE9
   456                           fsr1h	equ	0xFE2
   457                           fsr1l	equ	0xFE1
   458                           fsr2h	equ	0xFDA
   459                           fsr2l	equ	0xFD9
   460                           status	equ	0xFD8
   461                           
   462                           	psect	rparam
   463  0000                     pclatu	equ	0xFFB
   464                           pclath	equ	0xFFA
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           prodh	equ	0xFF4
   470                           prodl	equ	0xFF3
   471                           intcon	equ	0xFF2
   472                           intcon2	equ	0xFF1
   473                           fsr0h	equ	0xFEA
   474                           fsr0l	equ	0xFE9
   475                           fsr1h	equ	0xFE2
   476                           fsr1l	equ	0xFE1
   477                           fsr2h	equ	0xFDA
   478                           fsr2l	equ	0xFD9
   479                           status	equ	0xFD8
   480                           
   481                           	psect	temp
   482  000011                     btemp:
   483                           	opt stack 0
   484  000011                     	ds	1
   485  0000                     int$flags	set	btemp
   486                           pclatu	equ	0xFFB
   487                           pclath	equ	0xFFA
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           prodh	equ	0xFF4
   493                           prodl	equ	0xFF3
   494                           intcon	equ	0xFF2
   495                           intcon2	equ	0xFF1
   496                           fsr0h	equ	0xFEA
   497                           fsr0l	equ	0xFE9
   498                           fsr1h	equ	0xFE2
   499                           fsr1l	equ	0xFE1
   500                           fsr2h	equ	0xFDA
   501                           fsr2l	equ	0xFD9
   502                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _MCU_Init
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
                          _TMR0_Init
 ---------------------------------------------------------------------------------
 (2) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCU_Init
     _TMR0_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      E      10       1       17.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10       9        0.0%
DATA                 0      0      10      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Aug 16 01:57:21 2020

                     l48 010E             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _ISR 0008             __CFG_LVP$OFF 000000  
                   ?_ISR 0001                     i2l43 006A                     _main 010A  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0011            __CFG_BORV$190 000000                     prodh 000FF4  
                   prodl 000FF3                     start 00A6            __CFG_IESO$OFF 000000  
           ___param_bank 000000                    ??_ISR 0001                    ?_main 0001  
       __end_of_MCU_Init 00D8                    i2l709 0060                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISB 000F93                    _TRISC 000F94            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
                  _Count 000F           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
     __size_of_TMR0_Init 0024           __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000  
         __CFG_BOREN$OFF 000000                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8          __initialization 00FC             __end_of_main 0110  
                 ??_main 000F            __activetblptr 000000                   _ANSELA 000F38  
                 _ANSELB 000F39                   _ANSELC 000F3A           __CFG_WDTEN$OFF 000000  
         __CFG_XINST$OFF 000000        __end_of_TMR0_Init 00FC           __CFG_STVREN$ON 000000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
        __CFG_HFOFST$OFF 000000               __accesstop 0060  __end_of__initialization 0100  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001                ?_MCU_Init 0001  
         __pcstackCOMRAM 0001          __CFG_PLLCFG$OFF 000000               ??_MCU_Init 000F  
     __CFG_CCP2MX$PORTC1 000000       __CFG_CCP3MX$PORTB5 000000          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00FC  
                __ramtop 0600                  __ptext0 010A                  __ptext1 00AA  
                __ptext2 00D8                _T0CONbits 000FD5             __size_of_ISR 009E  
   end_of_initialization 0100                _TMR0_Init 00D8                _PORTCbits 000F82  
      __size_of_MCU_Init 002E               ?_TMR0_Init 0001      start_initialization 00FC  
            __end_of_ISR 00A6              __pbssCOMRAM 000F                __pintcode 0008  
            ??_TMR0_Init 000F         __CFG_PRICLKEN$ON 000000                 _MCU_Init 00AA  
               _RCONbits 000FD0         __CFG_WDTPS$32768 000000              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000        __CFG_P2BMX$PORTB5 000000  
          __size_of_main 0006                 int$flags 0011               _INTCONbits 000FF2  
               intlevel2 0000               _OSCCONbits 000FD3        __CFG_T3CMX$PORTC0 000000  
      __CFG_FOSC$INTIO67 000000  
