

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Aug 16 01:46:50 2020

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 1.42
    17                           ; Generated 13/04/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F25K22 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _ANSELC	set	3898
    51  0000                     _ANSELB	set	3897
    52  0000                     _ANSELA	set	3896
    53  0000                     _RCONbits	set	4048
    54  0000                     _INTCON2bits	set	4081
    55  0000                     _T0CONbits	set	4053
    56  0000                     _TRISC	set	3988
    57  0000                     _TRISB	set	3987
    58  0000                     _OSCCONbits	set	4051
    59  0000                     _PORTB	set	3969
    60  0000                     _PORTC	set	3970
    61  0000                     _TMR0L	set	4054
    62  0000                     _TMR0H	set	4055
    63  0000                     _INTCONbits	set	4082
    64                           
    65                           ; #config settings
    66  0000                     
    67                           	psect	cinit
    68  0002E2                     __pcinit:
    69                           	opt stack 0
    70  0002E2                     start_initialization:
    71                           	opt stack 0
    72  0002E2                     __initialization:
    73                           	opt stack 0
    74                           
    75                           ; Clear objects allocated to COMRAM (11 bytes)
    76  0002E2  EE00  F010         	lfsr	0,__pbssCOMRAM
    77  0002E6  0E0B               	movlw	11
    78  0002E8                     clear_0:
    79  0002E8  6AEE               	clrf	postinc0,c
    80  0002EA  06E8               	decf	wreg,f,c
    81  0002EC  E1FD               	bnz	clear_0
    82  0002EE                     end_of_initialization:
    83                           	opt stack 0
    84  0002EE                     __end_of__initialization:
    85                           	opt stack 0
    86  0002EE  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    87  0002F0  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    88  0002F2  0E00               	movlw	low (__Lmediumconst shr (0+16))
    89  0002F4  6EF8               	movwf	tblptru,c
    90  0002F6  0100               	movlb	0
    91  0002F8  EFE5  F000         	goto	_main	;jump to C main() function
    92                           tblptru	equ	0xFF8
    93                           postinc0	equ	0xFEE
    94                           wreg	equ	0xFE8
    95                           
    96                           	psect	bssCOMRAM
    97  000010                     __pbssCOMRAM:
    98                           	opt stack 0
    99  000010                     _fila:
   100                           	opt stack 0
   101  000010                     	ds	8
   102  000018                     _TMR0_Count:
   103                           	opt stack 0
   104  000018                     	ds	2
   105  00001A                     _letra:
   106                           	opt stack 0
   107  00001A                     	ds	1
   108                           tblptru	equ	0xFF8
   109                           postinc0	equ	0xFEE
   110                           wreg	equ	0xFE8
   111                           
   112                           	psect	cstackCOMRAM
   113  000001                     __pcstackCOMRAM:
   114                           	opt stack 0
   115  000001                     ??_ISR:
   116  000001                     
   117                           ; 1 bytes @ 0x0
   118  000001                     	ds	14
   119  00000F                     ??_main:
   120                           
   121                           ; 1 bytes @ 0xE
   122  00000F                     	ds	1
   123                           tblptru	equ	0xFF8
   124                           postinc0	equ	0xFEE
   125                           wreg	equ	0xFE8
   126                           
   127 ;;
   128 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   129 ;;
   130 ;; *************** function _main *****************
   131 ;; Defined at:
   132 ;;		line 154 in file "main.c"
   133 ;; Parameters:    Size  Location     Type
   134 ;;		None
   135 ;; Auto vars:     Size  Location     Type
   136 ;;		None
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, status,2, cstack
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   146 ;;      Params:         0       0       0       0       0       0       0
   147 ;;      Locals:         0       0       0       0       0       0       0
   148 ;;      Temps:          1       0       0       0       0       0       0
   149 ;;      Totals:         1       0       0       0       0       0       0
   150 ;;Total ram usage:        1 bytes
   151 ;; Hardware stack levels required when called:    3
   152 ;; This function calls:
   153 ;;		_MCU_Init
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text0
   160  0001CA                     __ptext0:
   161                           	opt stack 0
   162  0001CA                     _main:
   163                           	opt stack 28
   164                           
   165                           ;main.c: 155: MCU_Init();
   166                           
   167                           ;incstack = 0
   168  0001CA  EC48  F001         	call	_MCU_Init	;wreg free
   169  0001CE                     l795:
   170                           
   171                           ;main.c: 157: PORTC = 0b00000001;
   172  0001CE  0E01               	movlw	1
   173  0001D0  6E82               	movwf	3970,c	;volatile
   174                           
   175                           ;main.c: 158: PORTB = fila[0];
   176  0001D2  C010  FF81         	movff	_fila,3969	;volatile
   177                           
   178                           ;main.c: 159: _delay((unsigned long)((2)*(16000000/4000.0)));
   179  0001D6  0E0B               	movlw	11
   180  0001D8  6E0F               	movwf	??_main& (0+255),c
   181  0001DA  0E62               	movlw	98
   182  0001DC                     u37:
   183  0001DC  2EE8               	decfsz	wreg,f,c
   184  0001DE  D7FE               	bra	u37
   185  0001E0  2E0F               	decfsz	??_main& (0+255),f,c
   186  0001E2  D7FC               	bra	u37
   187  0001E4  D000               	nop2	
   188                           
   189                           ;main.c: 160: PORTC = 0b00000010;
   190  0001E6  0E02               	movlw	2
   191  0001E8  6E82               	movwf	3970,c	;volatile
   192                           
   193                           ;main.c: 161: PORTB = fila[1];
   194  0001EA  C011  FF81         	movff	_fila+1,3969	;volatile
   195                           
   196                           ;main.c: 162: _delay((unsigned long)((2)*(16000000/4000.0)));
   197  0001EE  0E0B               	movlw	11
   198  0001F0  6E0F               	movwf	??_main& (0+255),c
   199  0001F2  0E62               	movlw	98
   200  0001F4                     u47:
   201  0001F4  2EE8               	decfsz	wreg,f,c
   202  0001F6  D7FE               	bra	u47
   203  0001F8  2E0F               	decfsz	??_main& (0+255),f,c
   204  0001FA  D7FC               	bra	u47
   205  0001FC  D000               	nop2	
   206                           
   207                           ;main.c: 163: PORTC = 0b00000100;
   208  0001FE  0E04               	movlw	4
   209  000200  6E82               	movwf	3970,c	;volatile
   210                           
   211                           ;main.c: 164: PORTB = fila[2];
   212  000202  C012  FF81         	movff	_fila+2,3969	;volatile
   213                           
   214                           ;main.c: 165: _delay((unsigned long)((2)*(16000000/4000.0)));
   215  000206  0E0B               	movlw	11
   216  000208  6E0F               	movwf	??_main& (0+255),c
   217  00020A  0E62               	movlw	98
   218  00020C                     u57:
   219  00020C  2EE8               	decfsz	wreg,f,c
   220  00020E  D7FE               	bra	u57
   221  000210  2E0F               	decfsz	??_main& (0+255),f,c
   222  000212  D7FC               	bra	u57
   223  000214  D000               	nop2	
   224                           
   225                           ;main.c: 166: PORTC = 0b00001000;
   226  000216  0E08               	movlw	8
   227  000218  6E82               	movwf	3970,c	;volatile
   228                           
   229                           ;main.c: 167: PORTB = fila[3];
   230  00021A  C013  FF81         	movff	_fila+3,3969	;volatile
   231                           
   232                           ;main.c: 168: _delay((unsigned long)((2)*(16000000/4000.0)));
   233  00021E  0E0B               	movlw	11
   234  000220  6E0F               	movwf	??_main& (0+255),c
   235  000222  0E62               	movlw	98
   236  000224                     u67:
   237  000224  2EE8               	decfsz	wreg,f,c
   238  000226  D7FE               	bra	u67
   239  000228  2E0F               	decfsz	??_main& (0+255),f,c
   240  00022A  D7FC               	bra	u67
   241  00022C  D000               	nop2	
   242                           
   243                           ;main.c: 169: PORTC = 0b00010000;
   244  00022E  0E10               	movlw	16
   245  000230  6E82               	movwf	3970,c	;volatile
   246                           
   247                           ;main.c: 170: PORTB = fila[4];
   248  000232  C014  FF81         	movff	_fila+4,3969	;volatile
   249                           
   250                           ;main.c: 171: _delay((unsigned long)((2)*(16000000/4000.0)));
   251  000236  0E0B               	movlw	11
   252  000238  6E0F               	movwf	??_main& (0+255),c
   253  00023A  0E62               	movlw	98
   254  00023C                     u77:
   255  00023C  2EE8               	decfsz	wreg,f,c
   256  00023E  D7FE               	bra	u77
   257  000240  2E0F               	decfsz	??_main& (0+255),f,c
   258  000242  D7FC               	bra	u77
   259  000244  D000               	nop2	
   260                           
   261                           ;main.c: 172: PORTC = 0b00100000;
   262  000246  0E20               	movlw	32
   263  000248  6E82               	movwf	3970,c	;volatile
   264                           
   265                           ;main.c: 173: PORTB = fila[5];
   266  00024A  C015  FF81         	movff	_fila+5,3969	;volatile
   267                           
   268                           ;main.c: 174: _delay((unsigned long)((2)*(16000000/4000.0)));
   269  00024E  0E0B               	movlw	11
   270  000250  6E0F               	movwf	??_main& (0+255),c
   271  000252  0E62               	movlw	98
   272  000254                     u87:
   273  000254  2EE8               	decfsz	wreg,f,c
   274  000256  D7FE               	bra	u87
   275  000258  2E0F               	decfsz	??_main& (0+255),f,c
   276  00025A  D7FC               	bra	u87
   277  00025C  D000               	nop2	
   278                           
   279                           ;main.c: 175: PORTC = 0b01000000;
   280  00025E  0E40               	movlw	64
   281  000260  6E82               	movwf	3970,c	;volatile
   282                           
   283                           ;main.c: 176: PORTB = fila[6];
   284  000262  C016  FF81         	movff	_fila+6,3969	;volatile
   285                           
   286                           ;main.c: 177: _delay((unsigned long)((2)*(16000000/4000.0)));
   287  000266  0E0B               	movlw	11
   288  000268  6E0F               	movwf	??_main& (0+255),c
   289  00026A  0E62               	movlw	98
   290  00026C                     u97:
   291  00026C  2EE8               	decfsz	wreg,f,c
   292  00026E  D7FE               	bra	u97
   293  000270  2E0F               	decfsz	??_main& (0+255),f,c
   294  000272  D7FC               	bra	u97
   295  000274  D000               	nop2	
   296                           
   297                           ;main.c: 178: PORTC = 0b10000000;
   298  000276  0E80               	movlw	128
   299  000278  6E82               	movwf	3970,c	;volatile
   300                           
   301                           ;main.c: 179: PORTB = fila[7];
   302  00027A  C017  FF81         	movff	_fila+7,3969	;volatile
   303                           
   304                           ;main.c: 180: _delay((unsigned long)((2)*(16000000/4000.0)));
   305  00027E  0E0B               	movlw	11
   306  000280  6E0F               	movwf	??_main& (0+255),c
   307  000282  0E62               	movlw	98
   308  000284                     u107:
   309  000284  2EE8               	decfsz	wreg,f,c
   310  000286  D7FE               	bra	u107
   311  000288  2E0F               	decfsz	??_main& (0+255),f,c
   312  00028A  D7FC               	bra	u107
   313  00028C  D000               	nop2	
   314  00028E  D79F               	goto	l795
   315  000290                     __end_of_main:
   316                           	opt stack 0
   317                           tblptru	equ	0xFF8
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           
   321 ;; *************** function _MCU_Init *****************
   322 ;; Defined at:
   323 ;;		line 184 in file "main.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   337 ;;      Params:         0       0       0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0       0       0
   340 ;;      Totals:         0       0       0       0       0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels used:    1
   343 ;; Hardware stack levels required when called:    2
   344 ;; This function calls:
   345 ;;		_TMR0_Init
   346 ;; This function is called by:
   347 ;;		_main
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text1
   352  000290                     __ptext1:
   353                           	opt stack 0
   354  000290                     _MCU_Init:
   355                           	opt stack 28
   356                           
   357                           ;main.c: 186: ANSELA = 0;
   358                           
   359                           ;incstack = 0
   360  000290  0E00               	movlw	0
   361  000292  010F               	movlb	15	; () banked
   362  000294  6F38               	movwf	56,b	;volatile
   363                           
   364                           ;main.c: 187: ANSELB = 0;
   365  000296  0E00               	movlw	0
   366  000298  010F               	movlb	15	; () banked
   367  00029A  6F39               	movwf	57,b	;volatile
   368                           
   369                           ;main.c: 188: ANSELC = 0;
   370  00029C  0E00               	movlw	0
   371  00029E  010F               	movlb	15	; () banked
   372  0002A0  6F3A               	movwf	58,b	;volatile
   373                           
   374                           ; BSR set to: 15
   375                           ;main.c: 190: OSCCONbits.IRCF=0b111;
   376  0002A2  88D3               	bsf	4051,4,c	;volatile
   377  0002A4  8AD3               	bsf	4051,5,c	;volatile
   378  0002A6  8CD3               	bsf	4051,6,c	;volatile
   379                           
   380                           ;main.c: 192: TRISB = 0x00;
   381  0002A8  0E00               	movlw	0
   382  0002AA  6E93               	movwf	3987,c	;volatile
   383                           
   384                           ;main.c: 193: TRISC = 0x00;
   385  0002AC  0E00               	movlw	0
   386  0002AE  6E94               	movwf	3988,c	;volatile
   387                           
   388                           ;main.c: 195: PORTB = 0x00;
   389  0002B0  0E00               	movlw	0
   390  0002B2  6E81               	movwf	3969,c	;volatile
   391                           
   392                           ;main.c: 196: PORTC = 0x00;
   393  0002B4  0E00               	movlw	0
   394  0002B6  6E82               	movwf	3970,c	;volatile
   395                           
   396                           ; BSR set to: 15
   397                           ;main.c: 197: TMR0_Init();
   398  0002B8  EC5F  F001         	call	_TMR0_Init	;wreg free
   399  0002BC  0012               	return		;funcret
   400  0002BE                     __end_of_MCU_Init:
   401                           	opt stack 0
   402                           tblptru	equ	0xFF8
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           
   406 ;; *************** function _TMR0_Init *****************
   407 ;; Defined at:
   408 ;;		line 200 in file "main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   422 ;;      Params:         0       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0
   425 ;;      Totals:         0       0       0       0       0       0       0
   426 ;;Total ram usage:        0 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; Hardware stack levels required when called:    1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_MCU_Init
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text2
   437  0002BE                     __ptext2:
   438                           	opt stack 0
   439  0002BE                     _TMR0_Init:
   440                           	opt stack 28
   441                           
   442                           ;main.c: 202: T0CONbits.TMR0ON = 1;
   443                           
   444                           ;incstack = 0
   445  0002BE  8ED5               	bsf	4053,7,c	;volatile
   446                           
   447                           ;main.c: 203: T0CONbits.T08BIT = 0;
   448  0002C0  9CD5               	bcf	4053,6,c	;volatile
   449                           
   450                           ;main.c: 204: T0CONbits.T0CS = 0;
   451  0002C2  9AD5               	bcf	4053,5,c	;volatile
   452                           
   453                           ;main.c: 205: T0CONbits.T0SE = 0;
   454  0002C4  98D5               	bcf	4053,4,c	;volatile
   455                           
   456                           ;main.c: 206: T0CONbits.PSA = 0;
   457  0002C6  96D5               	bcf	4053,3,c	;volatile
   458                           
   459                           ;main.c: 207: T0CONbits.T0PS = 0b000;
   460  0002C8  90D5               	bcf	4053,0,c	;volatile
   461  0002CA  92D5               	bcf	4053,1,c	;volatile
   462  0002CC  94D5               	bcf	4053,2,c	;volatile
   463                           
   464                           ;main.c: 208: TMR0H = 0xF8;
   465  0002CE  0EF8               	movlw	248
   466  0002D0  6ED7               	movwf	4055,c	;volatile
   467                           
   468                           ;main.c: 209: TMR0L = 0x30;
   469  0002D2  0E30               	movlw	48
   470  0002D4  6ED6               	movwf	4054,c	;volatile
   471                           
   472                           ;main.c: 210: INTCONbits.TMR0IF = 0;
   473  0002D6  94F2               	bcf	intcon,2,c	;volatile
   474                           
   475                           ;main.c: 211: INTCONbits.TMR0IE = 1;
   476  0002D8  8AF2               	bsf	intcon,5,c	;volatile
   477                           
   478                           ;main.c: 212: INTCON2bits.TMR0IP = 1;
   479  0002DA  84F1               	bsf	intcon2,2,c	;volatile
   480                           
   481                           ;main.c: 213: RCONbits.IPEN = 1;
   482  0002DC  8ED0               	bsf	4048,7,c	;volatile
   483                           
   484                           ;main.c: 214: INTCONbits.GIEH = 1;
   485  0002DE  8EF2               	bsf	intcon,7,c	;volatile
   486  0002E0  0012               	return		;funcret
   487  0002E2                     __end_of_TMR0_Init:
   488                           	opt stack 0
   489                           tblptru	equ	0xFF8
   490                           intcon	equ	0xFF2
   491                           intcon2	equ	0xFF1
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           
   495 ;; *************** function _ISR *****************
   496 ;; Defined at:
   497 ;;		line 30 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   511 ;;      Params:         0       0       0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0       0       0
   513 ;;      Temps:         14       0       0       0       0       0       0
   514 ;;      Totals:        14       0       0       0       0       0       0
   515 ;;Total ram usage:       14 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; This function calls:
   518 ;;		Nothing
   519 ;; This function is called by:
   520 ;;		Interrupt level 2
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	intcode
   525  000008                     __pintcode:
   526                           	opt stack 0
   527  000008                     _ISR:
   528                           	opt stack 28
   529                           
   530                           ;incstack = 0
   531  000008  821B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   532  00000A  CFFA F001          	movff	pclath,??_ISR
   533  00000E  CFFB F002          	movff	pclatu,??_ISR+1
   534  000012  CFE9 F003          	movff	fsr0l,??_ISR+2
   535  000016  CFEA F004          	movff	fsr0h,??_ISR+3
   536  00001A  CFE1 F005          	movff	fsr1l,??_ISR+4
   537  00001E  CFE2 F006          	movff	fsr1h,??_ISR+5
   538  000022  CFD9 F007          	movff	fsr2l,??_ISR+6
   539  000026  CFDA F008          	movff	fsr2h,??_ISR+7
   540  00002A  CFF3 F009          	movff	prodl,??_ISR+8
   541  00002E  CFF4 F00A          	movff	prodh,??_ISR+9
   542  000032  CFF6 F00B          	movff	tblptrl,??_ISR+10
   543  000036  CFF7 F00C          	movff	tblptrh,??_ISR+11
   544  00003A  CFF8 F00D          	movff	tblptru,??_ISR+12
   545  00003E  CFF5 F00E          	movff	tablat,??_ISR+13
   546                           
   547                           ;main.c: 31: if(INTCONbits.TMR0IF){
   548  000042  A4F2               	btfss	intcon,2,c	;volatile
   549  000044  D0A2               	goto	i2l59
   550                           
   551                           ;main.c: 32: ++TMR0_Count;
   552  000046  4A18               	infsnz	_TMR0_Count,f,c
   553  000048  2A19               	incf	_TMR0_Count+1,f,c
   554                           
   555                           ;main.c: 33: if (TMR0_Count >= 500){
   556  00004A  0EF4               	movlw	244
   557  00004C  5C18               	subwf	_TMR0_Count,w,c
   558  00004E  0E01               	movlw	1
   559  000050  5819               	subwfb	_TMR0_Count+1,w,c
   560  000052  A0D8               	btfss	status,0,c
   561  000054  D095               	goto	i2l789
   562                           
   563                           ;main.c: 34: TMR0_Count = 0;
   564  000056  0E00               	movlw	0
   565  000058  6E19               	movwf	_TMR0_Count+1,c
   566  00005A  0E00               	movlw	0
   567  00005C  6E18               	movwf	_TMR0_Count,c
   568                           
   569                           ;main.c: 35: switch(letra){
   570  00005E  D071               	goto	i2l787
   571  000060                     i2l48:
   572                           
   573                           ;main.c: 37: fila[0] = 255;
   574  000060  6810               	setf	_fila,c
   575                           
   576                           ;main.c: 38: fila[1] = 255;
   577  000062  6811               	setf	_fila+1,c
   578                           
   579                           ;main.c: 39: fila[2] = 96;
   580  000064  0E60               	movlw	96
   581  000066  6E12               	movwf	_fila+2,c
   582                           
   583                           ;main.c: 40: fila[3] = 48;
   584  000068  0E30               	movlw	48
   585  00006A  6E13               	movwf	_fila+3,c
   586                           
   587                           ;main.c: 41: fila[4] = 48;
   588  00006C  0E30               	movlw	48
   589  00006E  6E14               	movwf	_fila+4,c
   590                           
   591                           ;main.c: 42: fila[5] = 96;
   592  000070  0E60               	movlw	96
   593  000072  D032               	goto	L7
   594  000074                     i2l725:
   595                           
   596                           ;main.c: 43: fila[6] = 255;
   597  000074  6816               	setf	_fila+6,c
   598  000076  D032               	goto	L8
   599  000078                     i2l50:
   600                           
   601                           ;main.c: 48: fila[0]=255;
   602  000078  6810               	setf	_fila,c
   603                           
   604                           ;main.c: 49: fila[1]=255;
   605  00007A  6811               	setf	_fila+1,c
   606                           
   607                           ;main.c: 50: fila[2]=216;
   608  00007C  0ED8               	movlw	216
   609  00007E  6E12               	movwf	_fila+2,c
   610                           
   611                           ;main.c: 51: fila[3]=220;
   612  000080  0EDC               	movlw	220
   613  000082  6E13               	movwf	_fila+3,c
   614                           
   615                           ;main.c: 52: fila[4]=222;
   616  000084  0EDE               	movlw	222
   617  000086  6E14               	movwf	_fila+4,c
   618                           
   619                           ;main.c: 53: fila[5]=219;
   620  000088  0EDB               	movlw	219
   621  00008A  6E15               	movwf	_fila+5,c
   622                           
   623                           ;main.c: 54: fila[6]=249;
   624  00008C  0EF9               	movlw	249
   625  00008E  6E16               	movwf	_fila+6,c
   626                           
   627                           ;main.c: 55: fila[7]=112;
   628  000090  0E70               	movlw	112
   629  000092  D044               	goto	L6
   630  000094                     i2l733:
   631                           
   632                           ;main.c: 56: letra++;
   633  000094  2A1A               	incf	_letra,f,c
   634                           
   635                           ;main.c: 57: break;
   636  000096  D074               	goto	i2l789
   637  000098                     i2l737:
   638                           
   639                           ;main.c: 60: fila[1]=255;
   640  000098  6811               	setf	_fila+1,c
   641                           
   642                           ;main.c: 61: fila[2]=195;
   643  00009A  0EC3               	movlw	195
   644  00009C  6E12               	movwf	_fila+2,c
   645                           
   646                           ;main.c: 62: fila[3]=195;
   647  00009E  0EC3               	movlw	195
   648  0000A0  6E13               	movwf	_fila+3,c
   649                           
   650                           ;main.c: 63: fila[4]=195;
   651  0000A2  0EC3               	movlw	195
   652  0000A4  6E14               	movwf	_fila+4,c
   653                           
   654                           ;main.c: 64: fila[5]=195;
   655  0000A6  0EC3               	movlw	195
   656  0000A8  6E15               	movwf	_fila+5,c
   657                           
   658                           ;main.c: 65: fila[6]=231;
   659  0000AA  0EE7               	movlw	231
   660  0000AC  6E16               	movwf	_fila+6,c
   661                           
   662                           ;main.c: 66: fila[7]=102;
   663  0000AE  0E66               	movlw	102
   664  0000B0  D035               	goto	L6
   665  0000B2                     i2l52:
   666                           
   667                           ;main.c: 70: fila[0]=255;
   668  0000B2  6810               	setf	_fila,c
   669                           
   670                           ;main.c: 71: fila[1]=255;
   671  0000B4  6811               	setf	_fila+1,c
   672                           
   673                           ;main.c: 72: fila[2]=24;
   674  0000B6  0E18               	movlw	24
   675  0000B8  6E12               	movwf	_fila+2,c
   676                           
   677                           ;main.c: 73: fila[3]=24;
   678  0000BA  0E18               	movlw	24
   679  0000BC  6E13               	movwf	_fila+3,c
   680                           
   681                           ;main.c: 74: fila[4]=24;
   682  0000BE  0E18               	movlw	24
   683  0000C0  6E14               	movwf	_fila+4,c
   684                           
   685                           ;main.c: 75: fila[5]=24;
   686  0000C2  0E18               	movlw	24
   687  0000C4  D009               	goto	L7
   688  0000C6                     i2l54:
   689                           
   690                           ;main.c: 92: fila[0]=255;
   691  0000C6  6810               	setf	_fila,c
   692                           
   693                           ;main.c: 93: fila[1]=255;
   694  0000C8  6811               	setf	_fila+1,c
   695                           
   696                           ;main.c: 94: fila[2]=112;
   697  0000CA  0E70               	movlw	112
   698  0000CC  6E12               	movwf	_fila+2,c
   699                           
   700                           ;main.c: 95: fila[3]=56;
   701  0000CE  0E38               	movlw	56
   702  0000D0  6E13               	movwf	_fila+3,c
   703                           
   704                           ;main.c: 96: fila[4]=28;
   705  0000D2  0E1C               	movlw	28
   706  0000D4  6E14               	movwf	_fila+4,c
   707                           
   708                           ;main.c: 97: fila[5]=14;
   709  0000D6  0E0E               	movlw	14
   710  0000D8                     L7:
   711  0000D8  6E15               	movwf	_fila+5,c
   712  0000DA  D7CC               	goto	i2l725
   713  0000DC                     L8:
   714                           
   715                           ;main.c: 99: fila[7]=255;
   716                           
   717                           ;main.c: 98: fila[6]=255;
   718  0000DC  6817               	setf	_fila+7,c
   719  0000DE  D7DA               	goto	i2l733
   720  0000E0                     i2l765:
   721                           
   722                           ;main.c: 103: fila[0]=126;
   723  0000E0  0E7E               	movlw	126
   724  0000E2  6E10               	movwf	_fila,c
   725  0000E4  D7D9               	goto	i2l737
   726  0000E6                     i2l771:
   727                           
   728                           ;main.c: 114: fila[0]=254;
   729  0000E6  0EFE               	movlw	254
   730  0000E8  6E10               	movwf	_fila,c
   731                           
   732                           ;main.c: 115: fila[1]=255;
   733  0000EA  6811               	setf	_fila+1,c
   734                           
   735                           ;main.c: 116: fila[2]=3;
   736  0000EC  0E03               	movlw	3
   737  0000EE  6E12               	movwf	_fila+2,c
   738                           
   739                           ;main.c: 117: fila[3]=3;
   740  0000F0  0E03               	movlw	3
   741  0000F2  6E13               	movwf	_fila+3,c
   742                           
   743                           ;main.c: 118: fila[4]=3;
   744  0000F4  0E03               	movlw	3
   745  0000F6  6E14               	movwf	_fila+4,c
   746                           
   747                           ;main.c: 119: fila[5]=3;
   748  0000F8  0E03               	movlw	3
   749  0000FA  6E15               	movwf	_fila+5,c
   750                           
   751                           ;main.c: 120: fila[6]=255;
   752  0000FC  6816               	setf	_fila+6,c
   753                           
   754                           ;main.c: 121: fila[7]=254;
   755  0000FE  0EFE               	movlw	254
   756  000100  D00D               	goto	L6
   757  000102                     i2l57:
   758                           
   759                           ;main.c: 125: fila[0]=255;
   760  000102  6810               	setf	_fila,c
   761                           
   762                           ;main.c: 126: fila[1]=255;
   763  000104  6811               	setf	_fila+1,c
   764                           
   765                           ;main.c: 127: fila[2]=219;
   766  000106  0EDB               	movlw	219
   767  000108  6E12               	movwf	_fila+2,c
   768                           
   769                           ;main.c: 128: fila[3]=219;
   770  00010A  0EDB               	movlw	219
   771  00010C  6E13               	movwf	_fila+3,c
   772                           
   773                           ;main.c: 129: fila[4]=219;
   774  00010E  0EDB               	movlw	219
   775  000110  6E14               	movwf	_fila+4,c
   776                           
   777                           ;main.c: 130: fila[5]=219;
   778  000112  0EDB               	movlw	219
   779  000114  6E15               	movwf	_fila+5,c
   780                           
   781                           ;main.c: 131: fila[6]=195;
   782  000116  0EC3               	movlw	195
   783  000118  6E16               	movwf	_fila+6,c
   784                           
   785                           ;main.c: 132: fila[7]=195;
   786  00011A  0EC3               	movlw	195
   787  00011C                     L6:
   788  00011C  6E17               	movwf	_fila+7,c
   789  00011E  D7BA               	goto	i2l733
   790  000120                     i2l58:
   791                           
   792                           ;main.c: 136: fila[0]=255;
   793  000120  6810               	setf	_fila,c
   794                           
   795                           ;main.c: 137: fila[1]=255;
   796  000122  6811               	setf	_fila+1,c
   797                           
   798                           ;main.c: 138: fila[2]=219;
   799  000124  0EDB               	movlw	219
   800  000126  6E12               	movwf	_fila+2,c
   801                           
   802                           ;main.c: 139: fila[3]=219;
   803  000128  0EDB               	movlw	219
   804  00012A  6E13               	movwf	_fila+3,c
   805                           
   806                           ;main.c: 140: fila[4]=219;
   807  00012C  0EDB               	movlw	219
   808  00012E  6E14               	movwf	_fila+4,c
   809                           
   810                           ;main.c: 141: fila[5]=219;
   811  000130  0EDB               	movlw	219
   812  000132  6E15               	movwf	_fila+5,c
   813                           
   814                           ;main.c: 142: fila[6]=195;
   815  000134  0EC3               	movlw	195
   816  000136  6E16               	movwf	_fila+6,c
   817                           
   818                           ;main.c: 143: fila[7]=195;
   819  000138  0EC3               	movlw	195
   820  00013A  6E17               	movwf	_fila+7,c
   821                           
   822                           ;main.c: 144: letra = 0;
   823  00013C  0E00               	movlw	0
   824  00013E  6E1A               	movwf	_letra,c
   825                           
   826                           ;main.c: 146: }
   827                           
   828                           ;main.c: 145: break;
   829  000140  D01F               	goto	i2l789
   830  000142                     i2l787:
   831  000142  501A               	movf	_letra,w,c
   832                           
   833                           ; Switch size 1, requested type "space"
   834                           ; Number of cases is 10, Range of values is 0 to 9
   835                           ; switch strategies available:
   836                           ; Name         Instructions Cycles
   837                           ; simple_byte           31    16 (average)
   838                           ;	Chosen strategy is simple_byte
   839  000144  0A00               	xorlw	0	; case 0
   840  000146  B4D8               	btfsc	status,2,c
   841  000148  D78B               	goto	i2l48
   842  00014A  0A01               	xorlw	1	; case 1
   843  00014C  B4D8               	btfsc	status,2,c
   844  00014E  D794               	goto	i2l50
   845  000150  0A03               	xorlw	3	; case 2
   846  000152  B4D8               	btfsc	status,2,c
   847  000154  D7C5               	goto	i2l765
   848  000156  0A01               	xorlw	1	; case 3
   849  000158  B4D8               	btfsc	status,2,c
   850  00015A  D7AB               	goto	i2l52
   851  00015C  0A07               	xorlw	7	; case 4
   852  00015E  B4D8               	btfsc	status,2,c
   853  000160  D7C2               	goto	i2l771
   854  000162  0A01               	xorlw	1	; case 5
   855  000164  B4D8               	btfsc	status,2,c
   856  000166  D7AF               	goto	i2l54
   857  000168  0A03               	xorlw	3	; case 6
   858  00016A  B4D8               	btfsc	status,2,c
   859  00016C  D7B9               	goto	i2l765
   860  00016E  0A01               	xorlw	1	; case 7
   861  000170  B4D8               	btfsc	status,2,c
   862  000172  D7B9               	goto	i2l771
   863  000174  0A0F               	xorlw	15	; case 8
   864  000176  B4D8               	btfsc	status,2,c
   865  000178  D7C4               	goto	i2l57
   866  00017A  0A01               	xorlw	1	; case 9
   867  00017C  B4D8               	btfsc	status,2,c
   868  00017E  D7D0               	goto	i2l58
   869  000180                     i2l789:
   870                           
   871                           ;main.c: 147: }
   872                           ;main.c: 148: TMR0H = 0xF8;
   873  000180  0EF8               	movlw	248
   874  000182  6ED7               	movwf	4055,c	;volatile
   875                           
   876                           ;main.c: 149: TMR0L = 0x30;
   877  000184  0E30               	movlw	48
   878  000186  6ED6               	movwf	4054,c	;volatile
   879                           
   880                           ;main.c: 150: INTCONbits.TMR0IF = 0;
   881  000188  94F2               	bcf	intcon,2,c	;volatile
   882  00018A                     i2l59:
   883  00018A  C00E  FFF5         	movff	??_ISR+13,tablat
   884  00018E  C00D  FFF8         	movff	??_ISR+12,tblptru
   885  000192  C00C  FFF7         	movff	??_ISR+11,tblptrh
   886  000196  C00B  FFF6         	movff	??_ISR+10,tblptrl
   887  00019A  C00A  FFF4         	movff	??_ISR+9,prodh
   888  00019E  C009  FFF3         	movff	??_ISR+8,prodl
   889  0001A2  C008  FFDA         	movff	??_ISR+7,fsr2h
   890  0001A6  C007  FFD9         	movff	??_ISR+6,fsr2l
   891  0001AA  C006  FFE2         	movff	??_ISR+5,fsr1h
   892  0001AE  C005  FFE1         	movff	??_ISR+4,fsr1l
   893  0001B2  C004  FFEA         	movff	??_ISR+3,fsr0h
   894  0001B6  C003  FFE9         	movff	??_ISR+2,fsr0l
   895  0001BA  C002  FFFB         	movff	??_ISR+1,pclatu
   896  0001BE  C001  FFFA         	movff	??_ISR,pclath
   897  0001C2  921B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   898  0001C4  0011               	retfie		f
   899  0001C6                     __end_of_ISR:
   900                           	opt stack 0
   901  0000                     pclatu	equ	0xFFB
   902                           pclath	equ	0xFFA
   903                           tblptru	equ	0xFF8
   904                           tblptrh	equ	0xFF7
   905                           tblptrl	equ	0xFF6
   906                           tablat	equ	0xFF5
   907                           prodh	equ	0xFF4
   908                           prodl	equ	0xFF3
   909                           intcon	equ	0xFF2
   910                           intcon2	equ	0xFF1
   911                           postinc0	equ	0xFEE
   912                           fsr0h	equ	0xFEA
   913                           fsr0l	equ	0xFE9
   914                           wreg	equ	0xFE8
   915                           fsr1h	equ	0xFE2
   916                           fsr1l	equ	0xFE1
   917                           fsr2h	equ	0xFDA
   918                           fsr2l	equ	0xFD9
   919                           status	equ	0xFD8
   920                           pclatu	equ	0xFFB
   921                           pclath	equ	0xFFA
   922                           tblptru	equ	0xFF8
   923                           tblptrh	equ	0xFF7
   924                           tblptrl	equ	0xFF6
   925                           tablat	equ	0xFF5
   926                           prodh	equ	0xFF4
   927                           prodl	equ	0xFF3
   928                           intcon	equ	0xFF2
   929                           intcon2	equ	0xFF1
   930                           postinc0	equ	0xFEE
   931                           fsr0h	equ	0xFEA
   932                           fsr0l	equ	0xFE9
   933                           wreg	equ	0xFE8
   934                           fsr1h	equ	0xFE2
   935                           fsr1l	equ	0xFE1
   936                           fsr2h	equ	0xFDA
   937                           fsr2l	equ	0xFD9
   938                           status	equ	0xFD8
   939                           
   940                           	psect	rparam
   941  0000                     pclatu	equ	0xFFB
   942                           pclath	equ	0xFFA
   943                           tblptru	equ	0xFF8
   944                           tblptrh	equ	0xFF7
   945                           tblptrl	equ	0xFF6
   946                           tablat	equ	0xFF5
   947                           prodh	equ	0xFF4
   948                           prodl	equ	0xFF3
   949                           intcon	equ	0xFF2
   950                           intcon2	equ	0xFF1
   951                           postinc0	equ	0xFEE
   952                           fsr0h	equ	0xFEA
   953                           fsr0l	equ	0xFE9
   954                           wreg	equ	0xFE8
   955                           fsr1h	equ	0xFE2
   956                           fsr1l	equ	0xFE1
   957                           fsr2h	equ	0xFDA
   958                           fsr2l	equ	0xFD9
   959                           status	equ	0xFD8
   960                           
   961                           	psect	temp
   962  00001B                     btemp:
   963                           	opt stack 0
   964  00001B                     	ds	1
   965  0000                     int$flags	set	btemp
   966                           pclatu	equ	0xFFB
   967                           pclath	equ	0xFFA
   968                           tblptru	equ	0xFF8
   969                           tblptrh	equ	0xFF7
   970                           tblptrl	equ	0xFF6
   971                           tablat	equ	0xFF5
   972                           prodh	equ	0xFF4
   973                           prodl	equ	0xFF3
   974                           intcon	equ	0xFF2
   975                           intcon2	equ	0xFF1
   976                           postinc0	equ	0xFEE
   977                           fsr0h	equ	0xFEA
   978                           fsr0l	equ	0xFE9
   979                           wreg	equ	0xFE8
   980                           fsr1h	equ	0xFE2
   981                           fsr1l	equ	0xFE1
   982                           fsr2h	equ	0xFDA
   983                           fsr2l	equ	0xFD9
   984                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                             14 COMRAM     1     1      0
                           _MCU_Init
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
                          _TMR0_Init
 ---------------------------------------------------------------------------------
 (2) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCU_Init
     _TMR0_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      1A       1       27.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A       9        0.0%
DATA                 0      0      1A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Aug 16 01:46:50 2020

                     u37 01DC                       u47 01F4                       u57 020C  
                     u67 0224                       u77 023C                       u87 0254  
                     u97 026C             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l795 01CE  
           __CFG_CPB$OFF 000000                      u107 0284             __CFG_CPD$OFF 000000  
                    _ISR 0008                      wreg 000FE8             __CFG_LVP$OFF 000000  
                   ?_ISR 0001                     i2l50 0078                     i2l52 00B2  
                   i2l54 00C6                     i2l48 0060                     i2l57 0102  
                   i2l58 0120                     i2l59 018A                     _fila 0010  
                   _main 01CA                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 001B            __CFG_BORV$190 000000  
                   prodh 000FF4                     prodl 000FF3                     start 01C6  
          __CFG_IESO$OFF 000000             ___param_bank 000000                    ??_ISR 0001  
                  ?_main 0001         __end_of_MCU_Init 02BE                    i2l733 0094  
                  i2l725 0074                    i2l737 0098                    i2l771 00E6  
                  i2l765 00E0                    i2l787 0142                    i2l789 0180  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTB 000F81  
                  _PORTC 000F82                    _TRISB 000F93                    _TRISC 000F94  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
     __size_of_TMR0_Init 0024           __CFG_EBTRB$OFF 000000                    _letra 001A  
     __CFG_MCLRE$EXTMCLR 000000           __CFG_BOREN$OFF 000000                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8          __initialization 02E2  
           __end_of_main 0290                   ??_main 000F            __activetblptr 000002  
                 _ANSELA 000F38                   _ANSELB 000F39                   _ANSELC 000F3A  
         __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000        __end_of_TMR0_Init 02E2  
         __CFG_STVREN$ON 000000                   clear_0 02E8                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8          __CFG_HFOFST$OFF 000000  
             __accesstop 0060  __end_of__initialization 02EE          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001                ?_MCU_Init 0001           __pcstackCOMRAM 0001  
        __CFG_PLLCFG$OFF 000000               ??_MCU_Init 000F       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000          __CFG_PWRTEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 02E2                  __ramtop 0600  
                __ptext0 01CA                  __ptext1 0290                  __ptext2 02BE  
              _T0CONbits 000FD5             __size_of_ISR 01BE     end_of_initialization 02EE  
          __Lmediumconst 0000                  postinc0 000FEE                _TMR0_Init 02BE  
      __size_of_MCU_Init 002E               ?_TMR0_Init 0001      start_initialization 02E2  
            __end_of_ISR 01C6              __pbssCOMRAM 0010                __pintcode 0008  
            ??_TMR0_Init 000F         __CFG_PRICLKEN$ON 000000                 _MCU_Init 0290  
               _RCONbits 000FD0         __CFG_WDTPS$32768 000000              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000        __CFG_P2BMX$PORTB5 000000  
          __size_of_main 00C6                 int$flags 001B               _INTCONbits 000FF2  
               intlevel2 0000               _OSCCONbits 000FD3        __CFG_T3CMX$PORTC0 000000  
             _TMR0_Count 0018        __CFG_FOSC$INTIO67 000000  
