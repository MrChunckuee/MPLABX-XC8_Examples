

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Aug 16 00:43:15 2020

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x5E,2
    14  0000                     
    15                           ; Version 1.42
    16                           ; Generated 13/04/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F675 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0019                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  008C                     	;# 
    68  008E                     	;# 
    69  0090                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0096                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81                           
    82                           	psect	idataBANK0
    83  0387                     __pidataBANK0:	
    84                           
    85                           ;initializer for _LEDs_DATA
    86  0387  3481               	retlw	129
    87  0388  3442               	retlw	66
    88  0389  3424               	retlw	36
    89  038A  3418               	retlw	24
    90  038B  3424               	retlw	36
    91  038C  3442               	retlw	66
    92  038D  3481               	retlw	129
    93  0005                     _GPIObits	set	5
    94  0019                     _CMCONbits	set	25
    95  0085                     _TRISIO	set	133
    96  009F                     _ANSELbits	set	159
    97                           
    98                           ; #config settings
    99  0000                     
   100                           	psect	cinit
   101  03EF                     start_initialization:	
   102  03EF                     __initialization:	
   103                           
   104                           ; Initialize objects allocated to BANK0
   105  03EF  2387               	fcall	__pidataBANK0	;fetch initializer
   106  03F0  00A0               	movwf	__pdataBANK0& (0+127)
   107  03F1  2388               	fcall	__pidataBANK0+1	;fetch initializer
   108  03F2  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   109  03F3  2389               	fcall	__pidataBANK0+2	;fetch initializer
   110  03F4  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   111  03F5  238A               	fcall	__pidataBANK0+3	;fetch initializer
   112  03F6  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   113  03F7  238B               	fcall	__pidataBANK0+4	;fetch initializer
   114  03F8  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   115  03F9  238C               	fcall	__pidataBANK0+5	;fetch initializer
   116  03FA  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   117  03FB  238D               	fcall	__pidataBANK0+6	;fetch initializer
   118  03FC  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   119  03FD                     end_of_initialization:	
   120                           ;End of C runtime variable initialization code
   121                           
   122  03FD                     __end_of__initialization:	
   123  03FD  0183               	clrf	3
   124  03FE  2B9B               	ljmp	_main	;jump to C main() function
   125                           
   126                           	psect	dataBANK0
   127  0020                     __pdataBANK0:	
   128  0020                     _LEDs_DATA:	
   129  0020                     	ds	7
   130                           
   131                           	psect	cstackCOMMON
   132  0000                     __pcstackCOMMON:	
   133  0000                     ??_MCU_Init:	
   134                           
   135                           	psect	cstackBANK0
   136  0027                     __pcstackBANK0:	
   137                           ; 1 bytes @ 0x0
   138                           
   139  0027                     ?_MCU_Init:	
   140  0027                     ?_Send_Data:	
   141                           ; 1 bytes @ 0x0
   142                           
   143  0027                     ??_Send_Data:	
   144                           ; 1 bytes @ 0x0
   145                           
   146  0027                     ?_Delay_ms:	
   147                           ; 1 bytes @ 0x0
   148                           
   149  0027                     ?_main:	
   150                           ; 1 bytes @ 0x0
   151                           
   152  0027                     Delay_ms@t:	
   153                           ; 1 bytes @ 0x0
   154                           
   155                           
   156                           ; 2 bytes @ 0x0
   157  0027                     	ds	1
   158  0028                     Send_Data@DATA:	
   159                           
   160                           ; 1 bytes @ 0x1
   161  0028                     	ds	1
   162  0029                     ??_Delay_ms:	
   163  0029                     Send_Data@FLAG:	
   164                           ; 1 bytes @ 0x2
   165                           
   166                           
   167                           ; 1 bytes @ 0x2
   168  0029                     	ds	1
   169  002A                     Send_Data@LOOP:	
   170  002A                     Delay_ms@j:	
   171                           ; 1 bytes @ 0x3
   172                           
   173                           
   174                           ; 2 bytes @ 0x3
   175  002A                     	ds	2
   176  002C                     ??_main:	
   177                           
   178                           ; 1 bytes @ 0x5
   179  002C                     	ds	1
   180  002D                     main@i:	
   181                           
   182                           ; 1 bytes @ 0x6
   183  002D                     	ds	1
   184                           
   185                           	psect	maintext
   186  039B                     __pmaintext:	
   187 ;;
   188 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   189 ;;
   190 ;; *************** function _main *****************
   191 ;; Defined at:
   192 ;;		line 49 in file "main.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;  i               1    6[BANK0 ] unsigned char 
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   201 ;; Tracked objects:
   202 ;;		On entry : B00/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMMON   BANK0
   206 ;;      Params:         0       0
   207 ;;      Locals:         0       1
   208 ;;      Temps:          0       1
   209 ;;      Totals:         0       2
   210 ;;Total ram usage:        2 bytes
   211 ;; Hardware stack levels required when called:    1
   212 ;; This function calls:
   213 ;;		_Delay_ms
   214 ;;		_MCU_Init
   215 ;;		_Send_Data
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           
   222                           ;psect for function _main
   223  039B                     _main:	
   224                           
   225                           ;main.c: 50: unsigned char i;
   226                           ;main.c: 51: MCU_Init();
   227                           
   228                           ;incstack = 0
   229                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   230  039B  238E               	fcall	_MCU_Init
   231  039C                     l586:	
   232                           ;main.c: 52: while(1){
   233                           
   234                           
   235                           ;main.c: 53: for(i=0; i<6; i++){
   236  039C  1283               	bcf	3,5	;RP0=0, select bank0
   237  039D  01AD               	clrf	main@i
   238  039E                     L1:	
   239  039E  3006               	movlw	6
   240  039F  022D               	subwf	main@i,w
   241  03A0  1803               	btfsc	3,0
   242  03A1  2B9C               	goto	l586
   243                           
   244                           ;main.c: 54: Send_Data(LEDs_DATA[i]);
   245  03A2  082D               	movf	main@i,w
   246  03A3  3E20               	addlw	(low (_LEDs_DATA| 0))& (0+255)
   247  03A4  0084               	movwf	4
   248  03A5  1383               	bcf	3,7	;select IRP bank0
   249  03A6  0800               	movf	0,w
   250  03A7  23CE               	fcall	_Send_Data
   251                           
   252                           ;main.c: 55: Delay_ms(250);
   253  03A8  30FA               	movlw	250
   254  03A9  1283               	bcf	3,5	;RP0=0, select bank0
   255  03AA  00A7               	movwf	Delay_ms@t
   256  03AB  3000               	movlw	0
   257  03AC  00A8               	movwf	Delay_ms@t+1
   258  03AD  23B4               	fcall	_Delay_ms
   259  03AE  3001               	movlw	1
   260  03AF  1283               	bcf	3,5	;RP0=0, select bank0
   261  03B0  00AC               	movwf	??_main
   262  03B1  082C               	movf	??_main,w
   263  03B2  07AD               	addwf	main@i,f
   264  03B3  2B9E               	goto	L1
   265  03B4                     __end_of_main:	
   266                           
   267                           	psect	text1
   268  03CE                     __ptext1:	
   269 ;; *************** function _Send_Data *****************
   270 ;; Defined at:
   271 ;;		line 70 in file "main.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;  DATA            1    wreg     unsigned char 
   274 ;; Auto vars:     Size  Location     Type
   275 ;;  DATA            1    1[BANK0 ] unsigned char 
   276 ;;  LOOP            1    3[BANK0 ] unsigned char 
   277 ;;  FLAG            1    2[BANK0 ] unsigned char 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0
   287 ;;      Params:         0       0
   288 ;;      Locals:         0       3
   289 ;;      Temps:          0       1
   290 ;;      Totals:         0       4
   291 ;;Total ram usage:        4 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; This function calls:
   294 ;;		Nothing
   295 ;; This function is called by:
   296 ;;		_main
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           
   301                           ;psect for function _Send_Data
   302  03CE                     _Send_Data:	
   303                           
   304                           ;incstack = 0
   305                           ; Regs used in _Send_Data: [wreg+status,2+status,0]
   306                           ;Send_Data@DATA stored from wreg
   307  03CE  1283               	bcf	3,5	;RP0=0, select bank0
   308  03CF  00A8               	movwf	Send_Data@DATA
   309                           
   310                           ;main.c: 71: unsigned char LOOP, FLAG;
   311                           ;main.c: 72: for (LOOP=0; LOOP<8; LOOP++){
   312  03D0  01AA               	clrf	Send_Data@LOOP
   313  03D1  3008               	movlw	8
   314  03D2  022A               	subwf	Send_Data@LOOP,w
   315  03D3  1803               	btfsc	3,0
   316  03D4  2BEC               	goto	l35
   317  03D5                     l568:	
   318                           
   319                           ;main.c: 73: FLAG=DATA&0x01;
   320  03D5  0828               	movf	Send_Data@DATA,w
   321  03D6  3901               	andlw	1
   322  03D7  00A7               	movwf	??_Send_Data
   323  03D8  0827               	movf	??_Send_Data,w
   324  03D9  00A9               	movwf	Send_Data@FLAG
   325                           
   326                           ;main.c: 74: if(FLAG==0) GPIObits.GP2=0;
   327  03DA  0829               	movf	Send_Data@FLAG,w
   328  03DB  1D03               	btfss	3,2
   329  03DC  2BDF               	goto	l36
   330  03DD  1105               	bcf	5,2	;volatile
   331  03DE  2BE0               	goto	l37
   332  03DF                     l36:	
   333                           
   334                           ;main.c: 75: else GPIObits.GP2=1;
   335  03DF  1505               	bsf	5,2	;volatile
   336  03E0                     l37:	
   337                           
   338                           ;main.c: 76: GPIObits.GP1 = 1;
   339  03E0  1485               	bsf	5,1	;volatile
   340                           
   341                           ;main.c: 77: GPIObits.GP1 = 0;
   342  03E1  1085               	bcf	5,1	;volatile
   343                           
   344                           ;main.c: 78: DATA >>= 1;
   345  03E2  1003               	clrc
   346  03E3  0CA8               	rrf	Send_Data@DATA,f
   347  03E4  3001               	movlw	1
   348  03E5  00A7               	movwf	??_Send_Data
   349  03E6  0827               	movf	??_Send_Data,w
   350  03E7  07AA               	addwf	Send_Data@LOOP,f
   351  03E8  3008               	movlw	8
   352  03E9  022A               	subwf	Send_Data@LOOP,w
   353  03EA  1C03               	skipc
   354  03EB  2BD5               	goto	l568
   355  03EC                     l35:	
   356                           
   357                           ;main.c: 79: }
   358                           ;main.c: 80: GPIObits.GP4 = 1;
   359  03EC  1605               	bsf	5,4	;volatile
   360                           
   361                           ;main.c: 81: GPIObits.GP4 = 0;
   362  03ED  1205               	bcf	5,4	;volatile
   363  03EE  0008               	return
   364  03EF                     __end_of_Send_Data:	
   365                           
   366                           	psect	text2
   367  038E                     __ptext2:	
   368 ;; *************** function _MCU_Init *****************
   369 ;; Defined at:
   370 ;;		line 60 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0
   384 ;;      Params:         0       0
   385 ;;      Locals:         0       0
   386 ;;      Temps:          0       0
   387 ;;      Totals:         0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_main
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           
   398                           ;psect for function _MCU_Init
   399  038E                     _MCU_Init:	
   400                           
   401                           ;main.c: 61: ANSELbits.ANS = 0b0000;
   402                           
   403                           ;incstack = 0
   404                           ; Regs used in _MCU_Init: [wreg+status,2+status,0]
   405  038E  30F0               	movlw	-16
   406  038F  1683               	bsf	3,5	;RP0=1, select bank1
   407  0390  059F               	andwf	31,f	;volatile
   408                           
   409                           ;main.c: 62: CMCONbits.CM = 0b111;
   410  0391  3007               	movlw	7
   411  0392  1283               	bcf	3,5	;RP0=0, select bank0
   412  0393  0499               	iorwf	25,f	;volatile
   413                           
   414                           ;main.c: 63: TRISIO = 0x00;
   415  0394  1683               	bsf	3,5	;RP0=1, select bank1
   416  0395  0185               	clrf	5	;volatile
   417                           
   418                           ;main.c: 65: GPIObits.GP1 = 0;
   419  0396  1283               	bcf	3,5	;RP0=0, select bank0
   420  0397  1085               	bcf	5,1	;volatile
   421                           
   422                           ;main.c: 66: GPIObits.GP2 = 0;
   423  0398  1105               	bcf	5,2	;volatile
   424                           
   425                           ;main.c: 67: GPIObits.GP4 = 0;
   426  0399  1205               	bcf	5,4	;volatile
   427  039A  0008               	return
   428  039B                     __end_of_MCU_Init:	
   429                           
   430                           	psect	text3
   431  03B4                     __ptext3:	
   432 ;; *************** function _Delay_ms *****************
   433 ;; Defined at:
   434 ;;		line 84 in file "main.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  t               2    0[BANK0 ] unsigned int 
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  j               2    3[BANK0 ] unsigned int 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0
   448 ;;      Params:         0       2
   449 ;;      Locals:         0       2
   450 ;;      Temps:          0       1
   451 ;;      Totals:         0       5
   452 ;;Total ram usage:        5 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _Delay_ms
   463  03B4                     _Delay_ms:	
   464                           
   465                           ;main.c: 85: unsigned int j;
   466                           ;main.c: 86: for(j=0;j<t;j++){
   467                           
   468                           ;incstack = 0
   469                           ; Regs used in _Delay_ms: [wreg+status,2]
   470  03B4  1283               	bcf	3,5	;RP0=0, select bank0
   471  03B5  01AA               	clrf	Delay_ms@j
   472  03B6  01AB               	clrf	Delay_ms@j+1
   473  03B7                     l41:	
   474  03B7  0828               	movf	Delay_ms@t+1,w
   475  03B8  022B               	subwf	Delay_ms@j+1,w
   476  03B9  1D03               	skipz
   477  03BA  2BBD               	goto	u105
   478  03BB  0827               	movf	Delay_ms@t,w
   479  03BC  022A               	subwf	Delay_ms@j,w
   480  03BD                     u105:	
   481  03BD  1803               	btfsc	3,0
   482  03BE  0008               	return
   483                           
   484                           ;main.c: 87: _delay((unsigned long)((1)*(4000000/4000.0)));
   485  03BF  30C7               	movlw	199
   486  03C0  00A9               	movwf	??_Delay_ms
   487  03C1                     u137:	
   488  03C1  2BC2               	nop2
   489  03C2  0BA9               	decfsz	??_Delay_ms,f
   490  03C3  2BC1               	goto	u137
   491  03C4  2BC5               	nop2
   492  03C5  2BC6               	nop2
   493  03C6  3001               	movlw	1
   494  03C7  1283               	bcf	3,5	;RP0=0, select bank0
   495  03C8  07AA               	addwf	Delay_ms@j,f
   496  03C9  1803               	skipnc
   497  03CA  0AAB               	incf	Delay_ms@j+1,f
   498  03CB  3000               	movlw	0
   499  03CC  07AB               	addwf	Delay_ms@j+1,f
   500  03CD  2BB7               	goto	l41
   501  03CE                     __end_of_Delay_ms:	
   502  005E                     btemp	set	94	;btemp
   503  005E                     wtemp0	set	94


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Delay_ms

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     259
                                              5 BANK0      2     2      0
                           _Delay_ms
                           _MCU_Init
                          _Send_Data
 ---------------------------------------------------------------------------------
 (1) _Send_Data                                            4     4      0      92
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             5     3      2      99
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _MCU_Init
   _Send_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E      7       E       4       22.6%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E       6        0.0%
ABS                  0      0       E       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Aug 16 00:43:15 2020

          Send_Data@DATA 0028            Send_Data@FLAG 0029            Send_Data@LOOP 002A  
            __CFG_CP$OFF 0000                       l41 03B7                       l35 03EC  
                     l36 03DF                       l37 03E0                      l568 03D5  
                    l586 039C                      u105 03BD                      u137 03C1  
           __CFG_CPD$OFF 0000                      fsr0 0004                      indf 0000  
                   _main 039B                     btemp 005E                     start 0000  
          __CFG_MCLRE$ON 0000                    ?_main 0027            __CFG_WDTE$OFF 0000  
       __end_of_MCU_Init 039B                    main@i 002D           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 005E         __end_of_Delay_ms 03CE  
        __initialization 03EF             __end_of_main 03B4                   ??_main 002C  
                 _TRISIO 0085           __CFG_PWRTE$OFF 0000       __size_of_Send_Data 0021  
__end_of__initialization 03FD                ?_MCU_Init 0027           __pcstackCOMMON 0000  
           __pidataBANK0 0387                ?_Delay_ms 0027        __end_of_Send_Data 03EF  
             ??_MCU_Init 0000               __pmaintext 039B               ??_Delay_ms 0029  
              _CMCONbits 0019                _ANSELbits 009F                  __ptext1 03CE  
                __ptext2 038E                  __ptext3 03B4     end_of_initialization 03FD  
              _LEDs_DATA 0020                Delay_ms@j 002A                Delay_ms@t 0027  
      __size_of_MCU_Init 000D      start_initialization 03EF        __size_of_Delay_ms 001A  
              _Send_Data 03CE              __pdataBANK0 0020                ___latbits 0000  
          __pcstackBANK0 0027               ?_Send_Data 0027                 _GPIObits 0005  
               _MCU_Init 038E                 _Delay_ms 03B4              ??_Send_Data 0027  
          __size_of_main 0019        __CFG_FOSC$INTRCIO 0000  
