

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Aug 16 00:53:15 2020

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x5E,2
    16  0000                     
    17                           ; Version 1.42
    18                           ; Generated 13/04/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12F675 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0019                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  008C                     	;# 
    70  008E                     	;# 
    71  0090                     	;# 
    72  0095                     	;# 
    73  0096                     	;# 
    74  0096                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  009F                     	;# 
    83                           
    84                           	psect	idataBANK0
    85  0356                     __pidataBANK0:	
    86                           
    87                           ;initializer for _LEDs_DATA
    88  0356  3481               	retlw	129
    89  0357  3442               	retlw	66
    90  0358  3424               	retlw	36
    91  0359  3418               	retlw	24
    92  035A  3424               	retlw	36
    93  035B  3442               	retlw	66
    94  035C  3481               	retlw	129
    95  001E                     _ADRESH	set	30
    96  001F                     _ADCON0bits	set	31
    97  0005                     _GPIObits	set	5
    98  009E                     _ADRESL	set	158
    99  009F                     _ANSELbits	set	159
   100  0085                     _TRISIO	set	133
   101                           
   102                           ; #config settings
   103  0000                     
   104                           	psect	cinit
   105  03EF                     start_initialization:	
   106  03EF                     __initialization:	
   107                           
   108                           ; Initialize objects allocated to BANK0
   109  03EF  2356               	fcall	__pidataBANK0	;fetch initializer
   110  03F0  00AD               	movwf	__pdataBANK0& (0+127)
   111  03F1  2357               	fcall	__pidataBANK0+1	;fetch initializer
   112  03F2  00AE               	movwf	(__pdataBANK0+1)& (0+127)
   113  03F3  2358               	fcall	__pidataBANK0+2	;fetch initializer
   114  03F4  00AF               	movwf	(__pdataBANK0+2)& (0+127)
   115  03F5  2359               	fcall	__pidataBANK0+3	;fetch initializer
   116  03F6  00B0               	movwf	(__pdataBANK0+3)& (0+127)
   117  03F7  235A               	fcall	__pidataBANK0+4	;fetch initializer
   118  03F8  00B1               	movwf	(__pdataBANK0+4)& (0+127)
   119  03F9  235B               	fcall	__pidataBANK0+5	;fetch initializer
   120  03FA  00B2               	movwf	(__pdataBANK0+5)& (0+127)
   121  03FB  235C               	fcall	__pidataBANK0+6	;fetch initializer
   122  03FC  00B3               	movwf	(__pdataBANK0+6)& (0+127)
   123  03FD                     end_of_initialization:	
   124                           ;End of C runtime variable initialization code
   125                           
   126  03FD                     __end_of__initialization:	
   127  03FD  0183               	clrf	3
   128  03FE  2B92               	ljmp	_main	;jump to C main() function
   129                           
   130                           	psect	dataBANK0
   131  002D                     __pdataBANK0:	
   132  002D                     _LEDs_DATA:	
   133  002D                     	ds	7
   134                           
   135                           	psect	cstackCOMMON
   136  0000                     __pcstackCOMMON:	
   137  0000                     ??_MCU_Init:	
   138  0000                     ??_ADC_Init:	
   139                           ; 1 bytes @ 0x0
   140                           
   141                           
   142                           	psect	cstackBANK0
   143  0020                     __pcstackBANK0:	
   144                           ; 1 bytes @ 0x0
   145                           
   146  0020                     ?_MCU_Init:	
   147  0020                     ?_Send_Data:	
   148                           ; 1 bytes @ 0x0
   149                           
   150  0020                     ??_Send_Data:	
   151                           ; 1 bytes @ 0x0
   152                           
   153  0020                     ?_ADC_Init:	
   154                           ; 1 bytes @ 0x0
   155                           
   156  0020                     ?_main:	
   157                           ; 1 bytes @ 0x0
   158                           
   159  0020                     ?_ADC_Read:	
   160                           ; 1 bytes @ 0x0
   161                           
   162                           
   163                           ; 2 bytes @ 0x0
   164  0020                     	ds	1
   165  0021                     Send_Data@DATA:	
   166                           
   167                           ; 1 bytes @ 0x1
   168  0021                     	ds	1
   169  0022                     ??_ADC_Read:	
   170  0022                     Send_Data@FLAG:	
   171                           ; 1 bytes @ 0x2
   172                           
   173                           
   174                           ; 1 bytes @ 0x2
   175  0022                     	ds	1
   176  0023                     Send_Data@LOOP:	
   177                           
   178                           ; 1 bytes @ 0x3
   179  0023                     	ds	1
   180  0024                     ADC_Read@RESULT_ADC:	
   181                           
   182                           ; 2 bytes @ 0x4
   183  0024                     	ds	2
   184  0026                     ?_Delay_ms:	
   185  0026                     Delay_ms@t:	
   186                           ; 1 bytes @ 0x6
   187                           
   188                           
   189                           ; 2 bytes @ 0x6
   190  0026                     	ds	2
   191  0028                     ??_Delay_ms:	
   192                           
   193                           ; 1 bytes @ 0x8
   194  0028                     	ds	1
   195  0029                     Delay_ms@j:	
   196                           
   197                           ; 2 bytes @ 0x9
   198  0029                     	ds	2
   199  002B                     ??_main:	
   200                           
   201                           ; 1 bytes @ 0xB
   202  002B                     	ds	1
   203  002C                     main@i:	
   204                           
   205                           ; 1 bytes @ 0xC
   206  002C                     	ds	1
   207                           
   208                           	psect	maintext
   209  0392                     __pmaintext:	
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 54 in file "main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;  i               1   12[BANK0 ] unsigned char 
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : B00/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0
   229 ;;      Params:         0       0
   230 ;;      Locals:         0       1
   231 ;;      Temps:          0       1
   232 ;;      Totals:         0       2
   233 ;;Total ram usage:        2 bytes
   234 ;; Hardware stack levels required when called:    2
   235 ;; This function calls:
   236 ;;		_ADC_Read
   237 ;;		_Delay_ms
   238 ;;		_MCU_Init
   239 ;;		_Send_Data
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           
   246                           ;psect for function _main
   247  0392                     _main:	
   248                           
   249                           ;main.c: 55: unsigned char i;
   250                           ;main.c: 56: MCU_Init();
   251                           
   252                           ;incstack = 0
   253                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   254  0392  235D               	fcall	_MCU_Init
   255  0393                     l643:	
   256                           ;main.c: 57: while(1){
   257                           
   258                           
   259                           ;main.c: 58: for(i=0; i<6; i++){
   260  0393  1283               	bcf	3,5	;RP0=0, select bank0
   261  0394  01AC               	clrf	main@i
   262  0395                     L1:	
   263  0395  3006               	movlw	6
   264  0396  022C               	subwf	main@i,w
   265  0397  1803               	btfsc	3,0
   266  0398  2B93               	goto	l643
   267                           
   268                           ;main.c: 59: Send_Data(LEDs_DATA[i]);
   269  0399  082C               	movf	main@i,w
   270  039A  3E2D               	addlw	(low (_LEDs_DATA| 0))& (0+255)
   271  039B  0084               	movwf	4
   272  039C  1383               	bcf	3,7	;select IRP bank0
   273  039D  0800               	movf	0,w
   274  039E  23AC               	fcall	_Send_Data
   275                           
   276                           ;main.c: 60: Delay_ms(ADC_Read());
   277  039F  23CD               	fcall	_ADC_Read
   278  03A0  1283               	bcf	3,5	;RP0=0, select bank0
   279  03A1  0821               	movf	?_ADC_Read+1,w
   280  03A2  00A7               	movwf	Delay_ms@t+1
   281  03A3  0820               	movf	?_ADC_Read,w
   282  03A4  00A6               	movwf	Delay_ms@t
   283  03A5  2378               	fcall	_Delay_ms
   284  03A6  3001               	movlw	1
   285  03A7  1283               	bcf	3,5	;RP0=0, select bank0
   286  03A8  00AB               	movwf	??_main
   287  03A9  082B               	movf	??_main,w
   288  03AA  07AC               	addwf	main@i,f
   289  03AB  2B95               	goto	L1
   290  03AC                     __end_of_main:	
   291                           
   292                           	psect	text1
   293  03AC                     __ptext1:	
   294 ;; *************** function _Send_Data *****************
   295 ;; Defined at:
   296 ;;		line 75 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;  DATA            1    wreg     unsigned char 
   299 ;; Auto vars:     Size  Location     Type
   300 ;;  DATA            1    1[BANK0 ] unsigned char 
   301 ;;  LOOP            1    3[BANK0 ] unsigned char 
   302 ;;  FLAG            1    2[BANK0 ] unsigned char 
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0
   312 ;;      Params:         0       0
   313 ;;      Locals:         0       3
   314 ;;      Temps:          0       1
   315 ;;      Totals:         0       4
   316 ;;Total ram usage:        4 bytes
   317 ;; Hardware stack levels used:    1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _Send_Data
   327  03AC                     _Send_Data:	
   328                           
   329                           ;incstack = 0
   330                           ; Regs used in _Send_Data: [wreg+status,2+status,0]
   331                           ;Send_Data@DATA stored from wreg
   332  03AC  1283               	bcf	3,5	;RP0=0, select bank0
   333  03AD  00A1               	movwf	Send_Data@DATA
   334                           
   335                           ;main.c: 76: unsigned char LOOP, FLAG;
   336                           ;main.c: 77: for (LOOP=0; LOOP<8; LOOP++){
   337  03AE  01A3               	clrf	Send_Data@LOOP
   338  03AF  3008               	movlw	8
   339  03B0  0223               	subwf	Send_Data@LOOP,w
   340  03B1  1803               	btfsc	3,0
   341  03B2  2BCA               	goto	l43
   342  03B3                     l613:	
   343                           
   344                           ;main.c: 78: FLAG = DATA & 0x01;
   345  03B3  0821               	movf	Send_Data@DATA,w
   346  03B4  3901               	andlw	1
   347  03B5  00A0               	movwf	??_Send_Data
   348  03B6  0820               	movf	??_Send_Data,w
   349  03B7  00A2               	movwf	Send_Data@FLAG
   350                           
   351                           ;main.c: 79: if(FLAG==0) GPIObits.GP2=0;
   352  03B8  0822               	movf	Send_Data@FLAG,w
   353  03B9  1D03               	btfss	3,2
   354  03BA  2BBD               	goto	l44
   355  03BB  1105               	bcf	5,2	;volatile
   356  03BC  2BBE               	goto	l45
   357  03BD                     l44:	
   358                           
   359                           ;main.c: 80: else GPIObits.GP2=1;
   360  03BD  1505               	bsf	5,2	;volatile
   361  03BE                     l45:	
   362                           
   363                           ;main.c: 81: GPIObits.GP1 = 1;
   364  03BE  1485               	bsf	5,1	;volatile
   365                           
   366                           ;main.c: 82: GPIObits.GP1 = 0;
   367  03BF  1085               	bcf	5,1	;volatile
   368                           
   369                           ;main.c: 83: DATA >>= 1;
   370  03C0  1003               	clrc
   371  03C1  0CA1               	rrf	Send_Data@DATA,f
   372  03C2  3001               	movlw	1
   373  03C3  00A0               	movwf	??_Send_Data
   374  03C4  0820               	movf	??_Send_Data,w
   375  03C5  07A3               	addwf	Send_Data@LOOP,f
   376  03C6  3008               	movlw	8
   377  03C7  0223               	subwf	Send_Data@LOOP,w
   378  03C8  1C03               	skipc
   379  03C9  2BB3               	goto	l613
   380  03CA                     l43:	
   381                           
   382                           ;main.c: 84: }
   383                           ;main.c: 85: GPIObits.GP4 = 1;
   384  03CA  1605               	bsf	5,4	;volatile
   385                           
   386                           ;main.c: 86: GPIObits.GP4 = 0;
   387  03CB  1205               	bcf	5,4	;volatile
   388  03CC  0008               	return
   389  03CD                     __end_of_Send_Data:	
   390                           
   391                           	psect	text2
   392  035D                     __ptext2:	
   393 ;; *************** function _MCU_Init *****************
   394 ;; Defined at:
   395 ;;		line 65 in file "main.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, status,2, status,0, pclath, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0
   409 ;;      Params:         0       0
   410 ;;      Locals:         0       0
   411 ;;      Temps:          0       0
   412 ;;      Totals:         0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; Hardware stack levels required when called:    1
   416 ;; This function calls:
   417 ;;		_ADC_Init
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           
   424                           ;psect for function _MCU_Init
   425  035D                     _MCU_Init:	
   426                           
   427                           ;main.c: 66: ADC_Init();
   428                           
   429                           ;incstack = 0
   430                           ; Regs used in _MCU_Init: [wreg+status,2+status,0+pclath+cstack]
   431  035D  2367               	fcall	_ADC_Init
   432                           
   433                           ;main.c: 67: TRISIO = 0b000001;
   434  035E  3001               	movlw	1
   435  035F  1683               	bsf	3,5	;RP0=1, select bank1
   436  0360  0085               	movwf	5	;volatile
   437                           
   438                           ;main.c: 69: GPIObits.GP0 = 0;
   439  0361  1283               	bcf	3,5	;RP0=0, select bank0
   440  0362  1005               	bcf	5,0	;volatile
   441                           
   442                           ;main.c: 70: GPIObits.GP1 = 0;
   443  0363  1085               	bcf	5,1	;volatile
   444                           
   445                           ;main.c: 71: GPIObits.GP2 = 0;
   446  0364  1105               	bcf	5,2	;volatile
   447                           
   448                           ;main.c: 72: GPIObits.GP4 = 0;
   449  0365  1205               	bcf	5,4	;volatile
   450  0366  0008               	return
   451  0367                     __end_of_MCU_Init:	
   452                           
   453                           	psect	text3
   454  0367                     __ptext3:	
   455 ;; *************** function _ADC_Init *****************
   456 ;; Defined at:
   457 ;;		line 89 in file "main.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		wreg, status,2, status,0
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMMON   BANK0
   471 ;;      Params:         0       0
   472 ;;      Locals:         0       0
   473 ;;      Temps:          0       0
   474 ;;      Totals:         0       0
   475 ;;Total ram usage:        0 bytes
   476 ;; Hardware stack levels used:    1
   477 ;; This function calls:
   478 ;;		Nothing
   479 ;; This function is called by:
   480 ;;		_MCU_Init
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           
   485                           ;psect for function _ADC_Init
   486  0367                     _ADC_Init:	
   487                           
   488                           ;main.c: 91: ADCON0bits.ADFM = 1;
   489                           
   490                           ;incstack = 0
   491                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
   492  0367  1283               	bcf	3,5	;RP0=0, select bank0
   493  0368  179F               	bsf	31,7	;volatile
   494                           
   495                           ;main.c: 92: ADCON0bits.VCFG = 0;
   496  0369  131F               	bcf	31,6	;volatile
   497                           
   498                           ;main.c: 93: ADCON0bits.CHS = 0b00;
   499  036A  30F3               	movlw	-13
   500  036B  059F               	andwf	31,f	;volatile
   501                           
   502                           ;main.c: 94: ANSELbits.ADCS = 0b100;
   503  036C  1683               	bsf	3,5	;RP0=1, select bank1
   504  036D  081F               	movf	31,w	;volatile
   505  036E  398F               	andlw	-113
   506  036F  3840               	iorlw	64
   507  0370  009F               	movwf	31	;volatile
   508                           
   509                           ;main.c: 95: ANSELbits.ANS = 0b0001;
   510  0371  081F               	movf	31,w	;volatile
   511  0372  39F0               	andlw	-16
   512  0373  3801               	iorlw	1
   513  0374  009F               	movwf	31	;volatile
   514                           
   515                           ;main.c: 96: ADCON0bits.ADON = 1;
   516  0375  1283               	bcf	3,5	;RP0=0, select bank0
   517  0376  141F               	bsf	31,0	;volatile
   518  0377  0008               	return
   519  0378                     __end_of_ADC_Init:	
   520                           
   521                           	psect	text4
   522  0378                     __ptext4:	
   523 ;; *************** function _Delay_ms *****************
   524 ;; Defined at:
   525 ;;		line 108 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  t               2    6[BANK0 ] unsigned int 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  j               2    9[BANK0 ] unsigned int 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0
   539 ;;      Params:         0       2
   540 ;;      Locals:         0       2
   541 ;;      Temps:          0       1
   542 ;;      Totals:         0       5
   543 ;;Total ram usage:        5 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _Delay_ms
   554  0378                     _Delay_ms:	
   555                           
   556                           ;main.c: 110: unsigned int j;
   557                           ;main.c: 111: for(j=0;j<t;j++){
   558                           
   559                           ;incstack = 0
   560                           ; Regs used in _Delay_ms: [wreg+status,2]
   561  0378  1283               	bcf	3,5	;RP0=0, select bank0
   562  0379  01A9               	clrf	Delay_ms@j
   563  037A  01AA               	clrf	Delay_ms@j+1
   564  037B                     l58:	
   565  037B  0827               	movf	Delay_ms@t+1,w
   566  037C  022A               	subwf	Delay_ms@j+1,w
   567  037D  1D03               	skipz
   568  037E  2B81               	goto	u125
   569  037F  0826               	movf	Delay_ms@t,w
   570  0380  0229               	subwf	Delay_ms@j,w
   571  0381                     u125:	
   572  0381  1803               	btfsc	3,0
   573  0382  0008               	return
   574                           
   575                           ;main.c: 112: _delay((unsigned long)((1)*(4000000/4000.0)));
   576  0383  30C7               	movlw	199
   577  0384  00A8               	movwf	??_Delay_ms
   578  0385                     u157:	
   579  0385  2B86               	nop2
   580  0386  0BA8               	decfsz	??_Delay_ms,f
   581  0387  2B85               	goto	u157
   582  0388  2B89               	nop2
   583  0389  2B8A               	nop2
   584  038A  3001               	movlw	1
   585  038B  1283               	bcf	3,5	;RP0=0, select bank0
   586  038C  07A9               	addwf	Delay_ms@j,f
   587  038D  1803               	skipnc
   588  038E  0AAA               	incf	Delay_ms@j+1,f
   589  038F  3000               	movlw	0
   590  0390  07AA               	addwf	Delay_ms@j+1,f
   591  0391  2B7B               	goto	l58
   592  0392                     __end_of_Delay_ms:	
   593                           
   594                           	psect	text5
   595  03CD                     __ptext5:	
   596 ;; *************** function _ADC_Read *****************
   597 ;; Defined at:
   598 ;;		line 99 in file "main.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  RESULT_ADC      2    4[BANK0 ] int 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  2    0[BANK0 ] unsigned int 
   605 ;; Registers used:
   606 ;;		wreg, status,2, btemp+1
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0
   612 ;;      Params:         0       2
   613 ;;      Locals:         0       2
   614 ;;      Temps:          0       2
   615 ;;      Totals:         0       6
   616 ;;Total ram usage:        6 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _ADC_Read
   627  03CD                     _ADC_Read:	
   628                           
   629                           ;main.c: 100: int RESULT_ADC = 0;
   630                           
   631                           ;incstack = 0
   632                           ; Regs used in _ADC_Read: [wreg+status,2+btemp+1]
   633  03CD  1283               	bcf	3,5	;RP0=0, select bank0
   634  03CE  01A4               	clrf	ADC_Read@RESULT_ADC
   635  03CF  01A5               	clrf	ADC_Read@RESULT_ADC+1
   636                           
   637                           ;main.c: 101: ADCON0bits.GO = 1;
   638  03D0  149F               	bsf	31,1	;volatile
   639  03D1                     l52:	
   640                           ;main.c: 102: while(ADCON0bits.GO);
   641                           
   642  03D1  189F               	btfsc	31,1	;volatile
   643  03D2  2BD1               	goto	l52
   644                           
   645                           ;main.c: 103: RESULT_ADC = ADRESH << 8;
   646  03D3  081E               	movf	30,w	;volatile
   647  03D4  00A2               	movwf	??_ADC_Read
   648  03D5  01A3               	clrf	??_ADC_Read+1
   649  03D6  0822               	movf	??_ADC_Read,w
   650  03D7  00A3               	movwf	??_ADC_Read+1
   651  03D8  01A2               	clrf	??_ADC_Read
   652  03D9  0822               	movf	??_ADC_Read,w
   653  03DA  00A4               	movwf	ADC_Read@RESULT_ADC
   654  03DB  0823               	movf	??_ADC_Read+1,w
   655  03DC  00A5               	movwf	ADC_Read@RESULT_ADC+1
   656                           
   657                           ;main.c: 104: RESULT_ADC = RESULT_ADC + ADRESL;
   658  03DD  1683               	bsf	3,5	;RP0=1, select bank1
   659  03DE  081E               	movf	30,w	;volatile
   660  03DF  1283               	bcf	3,5	;RP0=0, select bank0
   661  03E0  0724               	addwf	ADC_Read@RESULT_ADC,w
   662  03E1  00A2               	movwf	??_ADC_Read
   663  03E2  0825               	movf	ADC_Read@RESULT_ADC+1,w
   664  03E3  1803               	skipnc
   665  03E4  0A25               	incf	ADC_Read@RESULT_ADC+1,w
   666  03E5  00A3               	movwf	??_ADC_Read+1
   667  03E6  0822               	movf	??_ADC_Read,w
   668  03E7  00A4               	movwf	ADC_Read@RESULT_ADC
   669  03E8  0823               	movf	??_ADC_Read+1,w
   670  03E9  00A5               	movwf	ADC_Read@RESULT_ADC+1
   671                           
   672                           ;main.c: 105: return (RESULT_ADC);
   673  03EA  0825               	movf	ADC_Read@RESULT_ADC+1,w
   674  03EB  00A1               	movwf	?_ADC_Read+1
   675  03EC  0824               	movf	ADC_Read@RESULT_ADC,w
   676  03ED  00A0               	movwf	?_ADC_Read
   677  03EE  0008               	return
   678  03EF                     __end_of_ADC_Read:	
   679  005E                     btemp	set	94	;btemp
   680  005E                     wtemp0	set	94


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     13      20

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Delay_ms
    _Delay_ms->_ADC_Read

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     306
                                             11 BANK0      2     2      0
                           _ADC_Read
                           _Delay_ms
                           _MCU_Init
                          _Send_Data
 ---------------------------------------------------------------------------------
 (1) _Send_Data                                            4     4      0      92
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
                           _ADC_Init
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             5     3      2      99
                                              6 BANK0      5     3      2
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2      47
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _Delay_ms
     _ADC_Read (ARG)
   _MCU_Init
     _ADC_Init
   _Send_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E      D      14       4       32.3%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      14       6        0.0%
ABS                  0      0      14       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Aug 16 00:53:15 2020

          Send_Data@DATA 0021            Send_Data@FLAG 0022            Send_Data@LOOP 0023  
            __CFG_CP$OFF 0000                       l43 03CA                       l52 03D1  
                     l44 03BD                       l45 03BE                       l58 037B  
                    l613 03B3                      l643 0393                      u125 0381  
                    u157 0385             __CFG_CPD$OFF 0000                      fsr0 0004  
                    indf 0000                     _main 0392                     btemp 005E  
       __end_of_ADC_Init 0378         __end_of_ADC_Read 03EF                     start 0000  
          __CFG_MCLRE$ON 0000                    ?_main 0020            __CFG_WDTE$OFF 0000  
       __end_of_MCU_Init 0367                    main@i 002C           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 005E         __end_of_Delay_ms 0392  
        __initialization 03EF             __end_of_main 03AC                   ??_main 002B  
                 _ADRESH 001E                   _ADRESL 009E                   _TRISIO 0085  
         __CFG_PWRTE$OFF 0000       __size_of_Send_Data 0021                ?_ADC_Init 0020  
              ?_ADC_Read 0020  __end_of__initialization 03FD                ?_MCU_Init 0020  
         __pcstackCOMMON 0000             __pidataBANK0 0356               ??_ADC_Init 0000  
             ??_ADC_Read 0022                ?_Delay_ms 0026        __end_of_Send_Data 03CD  
     ADC_Read@RESULT_ADC 0024               ??_MCU_Init 0000               __pmaintext 0392  
             ??_Delay_ms 0028                _ANSELbits 009F                  __ptext1 03AC  
                __ptext2 035D                  __ptext3 0367                  __ptext4 0378  
                __ptext5 03CD     end_of_initialization 03FD                _LEDs_DATA 002D  
              Delay_ms@j 0029                Delay_ms@t 0026        __size_of_ADC_Init 0011  
      __size_of_ADC_Read 0022        __size_of_MCU_Init 000A      start_initialization 03EF  
      __size_of_Delay_ms 001A                _Send_Data 03AC              __pdataBANK0 002D  
              ___latbits 0000            __pcstackBANK0 0020               ?_Send_Data 0020  
               _ADC_Init 0367                 _ADC_Read 03CD                 _GPIObits 0005  
               _MCU_Init 035D               _ADCON0bits 001F                 _Delay_ms 0378  
            ??_Send_Data 0020            __size_of_main 001A        __CFG_FOSC$INTRCIO 0000  
